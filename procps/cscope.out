cscope 15 $HOME/cprogram/src/procps-3.0.5 -q 0000009477 0000928708
	@free.c

5 
	~"¥oc/sysöfo.h
"

6 
	~"¥oc/vîsi⁄.h
"

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<f˙é.h
>

12 
	~<gë›t.h
>

14 
	#S
(
X
Ë–(()(XË<< 10Ë>> 
byãshi·
)

	)

16 
	gbyãshi·
 = 10;

17 
	gtŸÆ
 = 0;

19 
	$maö
(
¨gc
, *
¨gv
[]){

20 
i
;

21 
ﬁd_fmt
 = 0;

22 
πime
 = 0;

25  (
i
 = 
	`gë›t
(
¨gc
, 
¨gv
, "bkmos:tV") ) != -1 )

26 
i
) {

27 'b': 
byãshi·
 = 0; ;

28 'k': 
byãshi·
 = 10; ;

29 'm': 
byãshi·
 = 20; ;

30 'o': 
ﬁd_fmt
 = 1; ;

31 's': 
πime
 = 1000000 * 
	`©of
(
›èrg
); ;

32 't': 
tŸÆ
 = 1; ;

33 'V': 
	`di•œy_vîsi⁄
(); 
	`exô
(0);

35 
	`Ârötf
(
°dîr
, "ußge: %†[-b|-k|-m] [-o] [-†dñay] [-t] [-V]\n", 
¨gv
[0]);

40 
	`memöfo
();

41 
	`¥ötf
("Åotal used free shared buffers cached\n");

42 
	`¥ötf
(

44 
	`S
(
kb_maö_tŸÆ
),

45 
	`S
(
kb_maö_u£d
),

46 
	`S
(
kb_maö_‰ì
),

47 
	`S
(
kb_maö_sh¨ed
),

48 
	`S
(
kb_maö_buf„rs
),

49 
	`S
(
kb_maö_ˇched
)

51 if(!
ﬁd_fmt
){

52 
	`¥ötf
(

54 
	`S
(
kb_maö_u£d
-
kb_maö_buf„rs
-
kb_maö_ˇched
),

55 
	`S
(
kb_maö_‰ì
+
kb_maö_buf„rs
+
kb_maö_ˇched
)

58 
	`¥ötf
(

60 
	`S
(
kb_sw≠_tŸÆ
),

61 
	`S
(
kb_sw≠_u£d
),

62 
	`S
(
kb_sw≠_‰ì
)

64 if(
tŸÆ
 == 1){

65 
	`¥ötf
(

67 
	`S
(
kb_maö_tŸÆ
 + 
kb_sw≠_tŸÆ
),

68 
	`S
(
kb_maö_u£d
 + 
kb_sw≠_u£d
),

69 
	`S
(
kb_maö_‰ì
 + 
kb_sw≠_‰ì
)

72 if(
πime
){

73 
	`Âutc
('\n', 
°dout
);

74 
	`fÊush
(
°dout
);

75 
	`u¶ìp
(
πime
);

77 } 
πime
);

80 
	}
}

	@minimal.c

21 
	~<pwd.h
>

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

25 
	~<sys/io˘l.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<uni°d.h
>

28 
	~<sys/°©.h
>

29 
	~<f˙é.h
>

30 
	~<sys/dú.h
>

32 
	~<asm/∑øm.h
>

33 
	~<asm/∑ge.h
>

35 
	gP_euid
;

36 
	gP_pid
;

37 
	gP_cmd
[16];

38 
	gP_°©e
;

39 
	gP_µid
, 
	gP_pgΩ
, 
	gP_£ssi⁄
, 
	gP_ây
, 
	gP_çgid
;

40 
	gP_Êags
, 
	gP_mö_Êt
, 
	gP_cmö_Êt
, 
	gP_maj_Êt
, 
	gP_cmaj_Êt
, 
	gP_utime
, 
	gP_°ime
;

41 
	gP_cutime
, 
	gP_c°ime
, 
	gP_¥i‹ôy
, 
	gP_ni˚
, 
	gP_timeout
, 
	gP_ô_ªÆ_vÆue
;

42 
	gP_°¨t_time
, 
	gP_vsize
;

43 
	gP_rss
;

44 
	gP_rss_æim
, 
	gP_°¨t_code
, 
	gP_íd_code
, 
	gP_°¨t_°ack
, 
	gP_k°k_e•
, 
	gP_k°k_eù
;

45 
	gP_sig«l
, 
	gP_blocked
, 
	gP_sigign‹e
, 
	gP_sigˇtch
;

46 
	gP_wch™
, 
	gP_nsw≠
, 
	gP_˙sw≠
;

50 
	gs¸ìn_cﬁs
 = 80;

51 
	gw_cou¡
;

54 
	gw™t_⁄e_pid
;

55 c⁄° *
	gw™t_⁄e_comm™d
;

56 
	g£À˘_nŸty
;

57 
	g£À˘_Æl
;

59 
	gps_f‹m©
;

60 
	gﬁd_h_›ti⁄
;

63 
	gshow_¨gs
;

64 
	gbsd_c_›ti⁄
;

66 
	gps_¨gc
;

67 **
	gps_¨gv
;

68 
	gthißrg
;

69 *
	gÊag±r
;

72 #i‚de‡
PAGE_SIZE


73 #w¨nög 
PAGE_SIZE
 
nŸ
 
deföed
, 
assumög
 
ô
 
is
 4096

74 
	#PAGE_SIZE
 4096

	)

77 #i‚de‡
HZ


78 #w¨nög 
HZ
 
nŸ
 
deföed
, 
assumög
 
ô
 
is
 100

79 
	#HZ
 100

	)

84 
	$ußge
(){

85 
	`Ârötf
(
°dîr
,

104 
	`exô
(1);

105 
	}
}

111 c⁄° *
	$gë_›t_¨g
(){

112 c⁄° *
ªt
;

113 
ªt
 = 
Êag±r
+1;

114 if(*
ªt
) Ñet;

115 if(++
thißrg
 >
ps_¨gc
Ë
	`ußge
();

117 
ªt
 = 
ps_¨gv
[
thißrg
];

118 if(!
ªt
 || !*ªtË
	`ußge
();

119  
ªt
;

120 
	}
}

124 
	$∑r£_pid
(c⁄° *
°r
){

125 *
ídp
;

126 
num
;

127 if(!
°r
Ë
bad
;

128 
num
 = 
	`°πﬁ
(
°r
, &
ídp
, 0);

129 if(*
ídp
 !'\0'Ë
bad
;

130 if(
num
<1Ë
bad
;

131 if(
w™t_⁄e_pid
Ë
bad
;

132 
w™t_⁄e_pid
 = 
num
;

134 
bad
:

135 
	`ußge
();

136 
	}
}

139 
	$∑r£_sysv_›ti⁄
(){

141 *
Êag±r
){

144 if(
w™t_⁄e_comm™d
Ë
	`ußge
();

145 
w™t_⁄e_comm™d
 = 
	`gë_›t_¨g
();

148 
	`∑r£_pid
(
	`gë_›t_¨g
());

152 
£À˘_Æl
++;

153 
£À˘_nŸty
++;

158 
show_¨gs
 = 1;

162 if(
ps_f‹m©
Ë
	`ußge
();

163 
ps_f‹m©
 = *
Êag±r
;

167 if(
	`°rcmp
(
	`gë_›t_¨g
(),"pid=")Ë
	`ußge
();

168 if(
ps_f‹m©
Ë
	`ußge
();

169 
ps_f‹m©
 = 'o';

170 
ﬁd_h_›ti⁄
++;

175 
w_cou¡
++;

179 
	`ußge
();

181 }*++
Êag±r
);

182 
	}
}

185 
	$∑r£_bsd_›ti⁄
(){

187 *
Êag±r
){

190 
£À˘_Æl
++;

193 
£À˘_nŸty
++;

196 
	`∑r£_pid
(
	`gë_›t_¨g
());

203 if(
ps_f‹m©
Ë
	`ußge
();

204 
ps_f‹m©
 = 0x80 | *
Êag±r
;

208 
bsd_c_›ti⁄
++;

214 
w_cou¡
++;

218 
ﬁd_h_›ti⁄
++;

221 
	`ußge
();

223 }*++
Êag±r
);

224 
	}
}

228 
	$choo£_dimísi⁄s
(){

229 
wösize
 
ws
;

230 *
cﬁumns
;

232 if(
	`io˘l
(1, 
TIOCGWINSZ
, &
ws
Ë!-1 && ws.
ws_cﬁ
>30Ë
s¸ìn_cﬁs
 = ws.ws_col;

233 
cﬁumns
 = 
	`gëív
("COLUMNS");

234 if(
cﬁumns
 && *columns){

235 
t
;

236 *
íd±r
;

237 
t
 = 
	`°πﬁ
(
cﬁumns
, &
íd±r
, 0);

238 if(!*
íd±r
 && (
t
>30Ë&& (t<()999999999)Ë
s¸ìn_cﬁs
 = ()t;

240 if(
w_cou¡
 && (
s¸ìn_cﬁs
<132)) screen_cols=132;

241 if(
w_cou¡
>1Ë
s¸ìn_cﬁs
=999999999;

242 
	}
}

245 
	$¨g_∑r£
(
¨gc
, *
¨gv
[]){

246 
£l
 = 0;

247 
ps_¨gc
 = 
¨gc
;

248 
ps_¨gv
 = 
¨gv
;

249 
thißrg
 = 0;

251 ++
thißrg
 < 
ps_¨gc
){

252 
Êag±r
 = 
ps_¨gv
[
thißrg
];

253 *
Êag±r
){

255 
show_¨gs
 = 1;

256 
	`∑r£_pid
(
Êag±r
);

259 
Êag±r
++;

260 
	`∑r£_sysv_›ti⁄
();

263 
show_¨gs
 = 1;

264 
	`∑r£_bsd_›ti⁄
();

269 if(
w™t_⁄e_pid
Ë
£l
++;

270 if(
w™t_⁄e_comm™d
Ë
£l
++;

271 if(
£À˘_nŸty
 || 
£À˘_Æl
Ë
£l
++;

272 if(
£l
>1 || 
£À˘_nŸty
>1 || 
£À˘_Æl
>1 || 
bsd_c_›ti⁄
>1 || 
ﬁd_h_›ti⁄
>1Ë
	`ußge
();

273 if(
bsd_c_›ti⁄
Ë
show_¨gs
 = 0;

274 
	}
}

277 
	$°©2¥oc
(
pid
) {

278 
buf
[800];

279 
num
;

280 
fd
;

281 * 
tmp
;

282 
°©
 
sb
;

283 
	`¢¥ötf
(
buf
, 32, "/¥oc/%d/°©", 
pid
);

284 i‡–(
fd
 = 
	`›í
(
buf
, 
O_RDONLY
, 0) ) == -1 )  0;

285 
num
 = 
	`ªad
(
fd
, 
buf
,  buf - 1);

286 
	`f°©
(
fd
, &
sb
);

287 
P_euid
 = 
sb
.
°_uid
;

288 
	`˛o£
(
fd
);

289 if(
num
<80)  0;

290 
buf
[
num
] = '\0';

291 
tmp
 = 
	`°ºchr
(
buf
, ')');

292 *
tmp
 = '\0';

294 
	`mem£t
(
P_cmd
, 0,  P_cmd);

295 
	`ssˇnf
(
buf
, "%d (%15c", &
P_pid
, 
P_cmd
);

296 
num
 = 
	`ssˇnf
(
tmp
 + 2,

306 &
P_°©e
,

307 &
P_µid
, &
P_pgΩ
, &
P_£ssi⁄
, &
P_ây
, &
P_çgid
,

308 &
P_Êags
, &
P_mö_Êt
, &
P_cmö_Êt
, &
P_maj_Êt
, &
P_cmaj_Êt
, &
P_utime
, &
P_°ime
,

309 &
P_cutime
, &
P_c°ime
, &
P_¥i‹ôy
, &
P_ni˚
, &
P_timeout
, &
P_ô_ªÆ_vÆue
,

310 &
P_°¨t_time
, &
P_vsize
,

311 &
P_rss
,

312 &
P_rss_æim
, &
P_°¨t_code
, &
P_íd_code
, &
P_°¨t_°ack
, &
P_k°k_e•
, &
P_k°k_eù
,

313 &
P_sig«l
, &
P_blocked
, &
P_sigign‹e
, &
P_sigˇtch
,

314 &
P_wch™
, &
P_nsw≠
, &
P_˙sw≠


317 
P_vsize
 /= 1024;

318 
P_rss
 *(
PAGE_SIZE
/1024);

319 if(
num
 < 30)  0;

320 if(
P_pid
 !
pid
)  0;

322 
	}
}

324 c⁄° *
	$do_time
(
t
){

325 
hh
,
mm
,
ss
;

326 
buf
[32];

327 
˙t
 = 0;

328 
t
 /
HZ
;

329 
ss
 = 
t
%60;

330 
t
 /= 60;

331 
mm
 = 
t
%60;

332 
t
 /= 60;

333 
hh
 = 
t
%24;

334 
t
 /= 24;

335 if(
t
Ë
˙t
 = 
	`¢¥ötf
(
buf
,  buf, "%d-", ()t);

336 
	`¢¥ötf
(
˙t
 + 
buf
, (buf)-˙t, "%02d:%02d:%02d", 
hh
, 
mm
, 
ss
);

337  
buf
;

338 
	}
}

340 c⁄° *
	$do_u£r
(){

341 
buf
[32];

342 
∑sswd
 *
p
;

343 
œ°uid
 = -1;

344 if(
P_euid
 !
œ°uid
){

345 
p
 = 
	`gëpwuid
(
P_euid
);

346 if(
p
Ë
	`¢¥ötf
(
buf
,  buf, "%-8.8s",Ö->
pw_«me
);

347 
	`¢¥ötf
(
buf
,  buf, "%5d ", 
P_euid
);

349  
buf
;

350 
	}
}

352 c⁄° *
	$do_˝u
(
l⁄gf‹m
){

353 
buf
[8];

354 
	`°r˝y
(
buf
," - ");

355 if(!
l⁄gf‹m
Ë
buf
[2] = '\0';

356  
buf
;

357 
	}
}

359 c⁄° *
	$do_mem
(
l⁄gf‹m
){

360 
buf
[8];

361 
	`°r˝y
(
buf
," - ");

362 if(!
l⁄gf‹m
Ë
buf
[2] = '\0';

363  
buf
;

364 
	}
}

366 c⁄° *
	$do_°ime
(){

367 
buf
[32];

368 
	`°r˝y
(
buf
," - ");

369  
buf
;

370 
	}
}

372 
	$¥öt_¥oc
(){

373 
ây
[16];

374 
	`¢¥ötf
(
ây
, Åty, "%3d,%-3d", (
P_ây
>>8)&0xff, P_tty&0xff);

375 
ps_f‹m©
){

377 
	`¥ötf
("%5d %†%s", 
P_pid
, 
ây
, 
	`do_time
(
P_utime
+
P_°ime
));

380 
	`¥ötf
("%d\n", 
P_pid
);

383 
	`¥ötf
(

386 ()
P_Êags
&0x777, 
P_°©e
, 
P_euid
, 
P_pid
, 
P_µid
, 
	`do_˝u
(0),

387 ()
P_¥i‹ôy
, ()
P_ni˚
, 
P_vsize
/(
PAGE_SIZE
/1024),

388 ()(
P_wch™
&0xffffff), 
ây
, 
	`do_time
(
P_utime
+
P_°ime
)

392 
	`¥ötf
(

394 
	`do_u£r
(), 
P_pid
, 
P_µid
, 
	`do_˝u
(0), 
	`do_°ime
(), 
ây
, 
	`do_time
(
P_utime
+
P_°ime
)

398 
	`¥ötf
(

400 
P_pid
, 
P_pgΩ
, 
P_£ssi⁄
, 
ây
, 
	`do_time
(
P_utime
+
P_°ime
)

404 
	`¥ötf
(

406 
	`do_u£r
(), 
P_pid
, 
	`do_˝u
(1), 
	`do_mem
(1), 
P_vsize
, 
P_rss
, 
ây
, 
P_°©e
,

407 
	`do_°ime
(), 
	`do_time
(
P_utime
+
P_°ime
)

411 
	`¥ötf
(

413 
P_pid
, 
ây
, 
P_°©e
, 
	`do_time
(
P_utime
+
P_°ime
), ()
P_maj_Êt
,

414 ()
P_rss
, 
	`do_mem
(1)

418 
	`¥ötf
(

420 
P_µid
, 
P_pid
, 
P_pgΩ
, 
P_£ssi⁄
, 
ây
, 
P_çgid
, 
P_°©e
, 
P_euid
, 
	`do_time
(
P_utime
+
P_°ime
)

424 
	`¥ötf
(

427 ()
P_Êags
&0x777, 
P_euid
, 
P_pid
, 
P_µid
, ()
P_¥i‹ôy
, ()
P_ni˚
,

428 
P_vsize
, 
P_rss
, ()(
P_wch™
&0xffffff), 
P_°©e
, 
ây
, 
	`do_time
(
P_utime
+
P_°ime
)

433 if(
show_¨gs
Ë
	`¥ötf
(" [%s]\n", 
P_cmd
);

434 
	`¥ötf
(" %s\n", 
P_cmd
);

435 
	}
}

438 
	$maö
(
¨gc
, *
¨gv
[]){

439 
	`¨g_∑r£
(
¨gc
, 
¨gv
);

441 
	`choo£_dimísi⁄s
();

443 if(!
ﬁd_h_›ti⁄
){

444 c⁄° *
hód
;

445 
ps_f‹m©
){

447 0: 
hód
 = " PID TTY TIME CMD"; ;

448 'l': 
hód
 = " F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD"; ;

449 'f': 
hód
 = "USER PID PPID C STIME TTY TIME CMD"; ;

450 'j': 
hód
 = " PID PGID SID TTY TIME CMD"; ;

451 'u'|0x80: 
hód
 = "USER PID %CPU %MEM VSZ RSS TTY S START TIME COMMAND"; ;

452 'v'|0x80: 
hód
 = " PID TTY S TIME MAJFL TRS DRS RSS %MEM COMMAND"; ;

453 'j'|0x80: 
hód
 = " PPID PID PGID SID TTY TPGID S UID TIME COMMAND"; ;

454 'l'|0x80: 
hód
 = " F UID PID PPID PRI NI VSZ RSS WCHAN S TTY TIME COMMAND"; ;

456 
	`¥ötf
("%s\n",
hód
);

458 if(
w™t_⁄e_pid
){

459 if(
	`°©2¥oc
(
w™t_⁄e_pid
)Ë
	`¥öt_¥oc
();

460 
	`exô
(1);

462 
dúe˘
 *
ít
;

463 
DIR
 *
dú
;

464 
ouruid
;

465 
found_a_¥oc
;

466 
found_a_¥oc
 = 0;

467 
ouruid
 = 
	`gëuid
();

468 
dú
 = 
	`›ídú
("/proc");

469 –
ít
 = 
	`ªaddú
(
dú
) )){

470 if(*
ít
->
d_«me
<'0' || *ent->d_name>'9') ;

471 if(!
	`°©2¥oc
(
	`©oi
(
ít
->
d_«me
))) ;

472 if(
w™t_⁄e_comm™d
){

473 if(
	`°rcmp
(
w™t_⁄e_comm™d
,
P_cmd
)) ;

475 if(!
£À˘_nŸty
 && 
P_ây
==-1) ;

476 if(!
£À˘_Æl
 && 
P_euid
!=
ouruid
) ;

478 
found_a_¥oc
++;

479 
	`¥öt_¥oc
();

481 
	`˛o£dú
(
dú
);

482 
	`exô
(!
found_a_¥oc
);

485 
	}
}

	@pgrep.c

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<limôs.h
>

15 
	~<uni°d.h
>

16 
	~<˘y≥.h
>

17 
	~<°rög.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<sig«l.h
>

20 
	~<pwd.h
>

21 
	~<gΩ.h
>

22 
	~<ªgex.h
>

23 
	~<î∫o.h
>

25 
	~"¥oc/ªad¥oc.h
"

26 
	~"¥oc/sig.h
"

27 
	~"¥oc/dev«me.h
"

28 
	~"¥oc/sysöfo.h
"

29 
	~"¥oc/vîsi⁄.h
"

31 
	gi_am_pkûl
 = 0;

32 c⁄° *
	g¥og«me
 = "pgrep";

34 
	uñ
 {

35 
	mnum
;

36 * 
	m°r
;

41 
	g›t_fuŒ
 = 0;

42 
	g›t_l⁄g
 = 0;

43 
	g›t_ﬁde°
 = 0;

44 
	g›t_√we°
 = 0;

45 
	g›t_√g©e
 = 0;

46 
	g›t_exa˘
 = 0;

47 
	g›t_sig«l
 = 
SIGTERM
;

49 c⁄° *
	g›t_dñim
 = "\n";

50 
ñ
 *
	g›t_pgΩ
 = 
NULL
;

51 
ñ
 *
	g›t_gid
 = 
NULL
;

52 
ñ
 *
	g›t_µid
 = 
NULL
;

53 
ñ
 *
	g›t_sid
 = 
NULL
;

54 
ñ
 *
	g›t_ãrm
 = 
NULL
;

55 
ñ
 *
	g›t_euid
 = 
NULL
;

56 
ñ
 *
	g›t_uid
 = 
NULL
;

57 *
	g›t_∑âîn
 = 
NULL
;

61 
ñ
 *
•lô_li°
 (const *, , (*)(const *, el *));

62 
	`c⁄v_uid
 (c⁄° *, 
ñ
 *);

63 
	`c⁄v_gid
 (c⁄° *, 
ñ
 *);

64 
	`c⁄v_sid
 (c⁄° *, 
ñ
 *);

65 
	`c⁄v_pgΩ
 (c⁄° *, 
ñ
 *);

66 
	`c⁄v_num
 (c⁄° *, 
ñ
 *);

67 
	`c⁄v_°r
 (c⁄° *, 
ñ
 *);

68 
	`m©ch_numli°
 (, c⁄° 
ñ
 *);

69 
	`m©ch_°æi°
 (c⁄° *, c⁄° 
ñ
 *);

70 
	`di•œy_pgªp_vîsi⁄
();

74 
	$ußge
 (
›t
)

76 i‡(
i_am_pkûl
)

77 
	`Ârötf
 (
°dîr
, "Usage:Ökill [-SIGNAL] [-fvx] ");

79 
	`Ârötf
 (
°dîr
, "Usage:Ögrep [-flvx] [-d DELIM] ");

80 
	`Ârötf
 (
°dîr
, "[-n|-o] [-P PPIDLIST] [-g PGRPLIST] [-s SIDLIST]\n"

83 
	`exô
 (
›t
 == '?' ? 0 : 2);

84 
	}
}

88 
	$∑r£_›ts
 (
¨gc
, **
¨gv
)

90 
›ts
[32] = "";

91 
›t
;

92 
¸ôîü_cou¡
 = 0;

94 i‡(
	`°r°r
 (
¨gv
[0], "pkill")) {

95 
i_am_pkûl
 = 1;

96 
¥og«me
 = "pkill";

98 i‡(
¨gc
 > 1 && 
¨gv
[1][0] == '-') {

99 
sig
;

100 
sig
 = 
	`sig«l_«me_to_numbî
 (
¨gv
[1] + 1);

101 i‡(
sig
 =-1 && 
	`isdigô
 (
¨gv
[1][1]))

102 
sig
 = 
	`©oi
 (
¨gv
[1] + 1);

103 i‡(
sig
 != -1) {

104 
i
;

105 
i
 = 2; i < 
¨gc
; i++)

106 
¨gv
[
i
-1] =árgv[i];

107 --
¨gc
;

108 
›t_sig«l
 = 
sig
;

113 
	`°rˇt
 (
›ts
, "ld:");

116 
	`°rˇt
 (
›ts
, "fnovxP:g:s:u:U:G:t:?V");

118 (
›t
 = 
	`gë›t
 (
¨gc
, 
¨gv
, 
›ts
)) != -1) {

119 
›t
) {

121 
›t_fuŒ
 = 1;

124 
›t_l⁄g
 = 1;

127 i‡(
›t_ﬁde°
|
›t_√g©e
|
›t_√we°
)

128 
	`ußge
 (
›t
);

129 
›t_√we°
 = 1;

130 ++
¸ôîü_cou¡
;

133 i‡(
›t_ﬁde°
|
›t_√g©e
|
›t_√we°
)

134 
	`ußge
 (
›t
);

135 
›t_ﬁde°
 = 1;

136 ++
¸ôîü_cou¡
;

139 i‡(
›t_ﬁde°
|
›t_√g©e
|
›t_√we°
)

140 
	`ußge
 (
›t
);

141 
›t_√g©e
 = 1;

144 
›t_exa˘
 = 1;

147 
›t_dñim
 = 
	`°rdup
 (
›èrg
);

150 
›t_µid
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_num
);

151 i‡(
›t_µid
 =
NULL
)

152 
	`ußge
 (
›t
);

153 ++
¸ôîü_cou¡
;

156 
›t_pgΩ
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_pgΩ
);

157 i‡(
›t_pgΩ
 =
NULL
)

158 
	`ußge
 (
›t
);

161 
›t_sid
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_sid
);

162 i‡(
›t_sid
 =
NULL
)

163 
	`ußge
 (
›t
);

164 ++
¸ôîü_cou¡
;

167 
›t_euid
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_uid
);

168 i‡(
›t_euid
 =
NULL
)

169 
	`ußge
 (
›t
);

170 ++
¸ôîü_cou¡
;

173 
›t_uid
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_uid
);

174 i‡(
›t_uid
 =
NULL
)

175 
	`ußge
 (
›t
);

176 ++
¸ôîü_cou¡
;

179 
›t_gid
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_gid
);

180 i‡(
›t_gid
 =
NULL
)

181 
	`ußge
 (
›t
);

182 ++
¸ôîü_cou¡
;

185 
›t_ãrm
 = 
	`•lô_li°
 (
›èrg
, ',', 
c⁄v_°r
);

186 i‡(
›t_ãrm
 =
NULL
)

187 
	`ußge
 (
›t
);

188 ++
¸ôîü_cou¡
;

191 
	`ußge
 (
›t
);

194 
	`di•œy_pgªp_vîsi⁄
();

195 
	`exô
(0);

198 i‡(
¨gc
 - 
›töd
 == 1)

199 
›t_∑âîn
 = 
¨gv
[
›töd
];

200 i‡(
¨gc
 - 
›töd
 > 1)

201 
	`ußge
 (0);

202 i‡(
¸ôîü_cou¡
 == 0) {

203 
	`Ârötf
 (
°dîr
, "%s: No matching criteria specified\n",

204 
¥og«me
);

205 
	`ußge
 (0);

207 
	}
}

210 
ñ
 *

211 
•lô_li°
 (c⁄° *
°r
, 
£p
, (*
c⁄vît
)(c⁄° *, 
ñ
 *))

213 *
c›y
 = 
	`°rdup
 (
°r
);

214 *
±r
 = 
c›y
;

215 *
£p_pos
;

216 
i
 = 1, 
size
 = 32;

217 
ñ
 *
li°
;

219 
li°
 = 
	`mÆloc
 (
size
 *  (
ñ
));

220 i‡(
li°
 =
NULL
)

221 
	`exô
 (3);

224 
£p_pos
 = 
	`°rchr
 (
±r
, 
£p
);

225 i‡(
£p_pos
)

226 *
£p_pos
 = 0;

227 i‡(
	`c⁄vît
 (
±r
, &
li°
[
i
]))

228 ++
i
;

230 
	`exô
 (2);

231 i‡(
i
 =
size
) {

232 
size
 *= 2;

233 
li°
 = 
	`ªÆloc
 (li°, 
size
 *  (
ñ
));

234 i‡(
li°
 =
NULL
)

235 
	`exô
 (3);

237 i‡(
£p_pos
)

238 
±r
 = 
£p_pos
 + 1;

239 } 
£p_pos
);

241 
	`‰ì
 (
c›y
);

242 i‡(
i
 == 1) {

243 
	`‰ì
 (
li°
);

244 
li°
 = 
NULL
;

246 
li°
[0].
num
 = 
i
 - 1;

248  (
li°
);

249 
	}
}

255 
	$°ri˘_©ﬁ
 (c⁄° *
°r
, *
vÆue
)

257 
ªs
 = 0;

258 
sign
 = 1;

260 i‡(*
°r
 == '+')

261 ++
°r
;

262 i‡(*
°r
 == '-') {

263 ++
°r
;

264 
sign
 = -1;

267  ; *
°r
; ++str) {

268 i‡(! 
	`isdigô
 (*
°r
))

270 
ªs
 *= 10;

271 
ªs
 +*
°r
 - '0';

273 *
vÆue
 = 
sign
 * 
ªs
;

275 
	}
}

278 
	$c⁄v_uid
 (c⁄° *
«me
, 
ñ
 *
e
)

280 
∑sswd
 *
pwd
;

282 i‡(
	`°ri˘_©ﬁ
 (
«me
, &
e
->
num
))

285 
pwd
 = 
	`gëpw«m
 (
«me
);

286 i‡(
pwd
 =
NULL
) {

287 
	`Ârötf
 (
°dîr
, "%s: invalid userÇame: %s\n",

288 
¥og«me
, 
«me
);

291 
e
->
num
 = 
pwd
->
pw_uid
;

293 
	}
}

297 
	$c⁄v_gid
 (c⁄° *
«me
, 
ñ
 *
e
)

299 
group
 *
gΩ
;

301 i‡(
	`°ri˘_©ﬁ
 (
«me
, &
e
->
num
))

304 
gΩ
 = 
	`gëg∫am
 (
«me
);

305 i‡(
gΩ
 =
NULL
) {

306 
	`Ârötf
 (
°dîr
, "%s: invalid groupÇame: %s\n",

307 
¥og«me
, 
«me
);

310 
e
->
num
 = 
gΩ
->
gr_gid
;

312 
	}
}

316 
	$c⁄v_pgΩ
 (c⁄° *
«me
, 
ñ
 *
e
)

318 i‡(! 
	`°ri˘_©ﬁ
 (
«me
, &
e
->
num
)) {

319 
	`Ârötf
 (
°dîr
, "%s: invalidÖrocess group: %s\n",

320 
¥og«me
, 
«me
);

323 i‡(
e
->
num
 == 0)

324 
e
->
num
 = 
	`gëpgΩ
 ();

326 
	}
}

330 
	$c⁄v_sid
 (c⁄° *
«me
, 
ñ
 *
e
)

332 i‡(! 
	`°ri˘_©ﬁ
 (
«me
, &
e
->
num
)) {

333 
	`Ârötf
 (
°dîr
, "%s: invalid session id: %s\n",

334 
¥og«me
, 
«me
);

337 i‡(
e
->
num
 == 0)

338 
e
->
num
 = 
	`gësid
 (0);

340 
	}
}

344 
	$c⁄v_num
 (c⁄° *
«me
, 
ñ
 *
e
)

346 i‡(! 
	`°ri˘_©ﬁ
 (
«me
, &
e
->
num
)) {

347 
	`Ârötf
 (
°dîr
, "%s:ÇotáÇumber: %s\n",

348 
¥og«me
, 
«me
);

352 
	}
}

356 
	$c⁄v_°r
 (c⁄° *
«me
, 
ñ
 *
e
)

358 
e
->
°r
 = 
	`°rdup
 (
«me
);

360 
	}
}

364 
	$m©ch_numli°
 (
vÆue
, c⁄° 
ñ
 *
li°
)

366 
found
 = 0;

367 i‡(
li°
 =
NULL
)

368 
found
 = 0;

370 
i
;

371 
i
 = 
li°
[0].
num
; i > 0; i--) {

372 i‡(
li°
[
i
].
num
 =
vÆue
)

373 
found
 = 1;

376  (
found
);

377 
	}
}

380 
	$m©ch_°æi°
 (c⁄° *
vÆue
, c⁄° 
ñ
 *
li°
)

382 
found
 = 0;

383 i‡(
li°
 =
NULL
)

384 
found
 = 0;

386 
i
;

387 
i
 = 
li°
[0].
num
; i > 0; i--) {

388 i‡(! 
	`°rcmp
 (
li°
[
i
].
°r
, 
vÆue
))

389 
found
 = 1;

392  (
found
);

393 
	}
}

396 
	$ouçut_numli°
 (c⁄° 
ñ
 *
li°
)

398 
i
;

399 
i
 = 1; i < 
li°
[0].
num
; i++)

400 
	`¥ötf
 ("%ld%s", 
li°
[
i
].
num
, 
›t_dñim
);

402 i‡(
li°
[0].
num
)

403 
	`¥ötf
 ("%ld\n", 
li°
[
i
].
num
);

404 
	}
}

407 
	$ouçut_°æi°
 (c⁄° 
ñ
 *
li°
)

409 
i
;

410 
i
 = 1; i < 
li°
[0].
num
; i++)

411 
	`¥ötf
 ("%s%s", 
li°
[
i
].
°r
, 
›t_dñim
);

413 i‡(
li°
[0].
num
)

414 
	`¥ötf
 ("%s\n", 
li°
[
i
].
°r
);

415 
	}
}

417 
PROCTAB
 *

418 
	$do_›í¥oc
 ()

420 
PROCTAB
 *
±p
;

421 
Êags
 = 
PROC_FILLANY
;

423 i‡(
›t_∑âîn
 || 
›t_fuŒ
)

424 
Êags
 |
PROC_FILLCOM
;

425 i‡(
›t_uid
)

426 
Êags
 |
PROC_FILLSTATUS
;

427 i‡(
›t_euid
 && !
›t_√g©e
) {

428 
num
 = 
›t_euid
[0].num;

429 
i
 = 
num
;

430 
uid_t
 *
uids
 = 
	`mÆloc
 (
num
 *  (uid_t));

431 i‡(
uids
 =
NULL
)

432 
	`exô
 (3);

433 
i
-- > 0) {

434 
uids
[
i
] = 
›t_euid
[i+1].
num
;

436 
Êags
 |
PROC_UID
;

437 
±p
 = 
	`›í¥oc
 (
Êags
, 
uids
, 
num
);

439 
±p
 = 
	`›í¥oc
 (
Êags
);

441  (
±p
);

442 
	}
}

444 
ªgex_t
 *

445 
	$do_ªgcomp
 ()

447 
ªgex_t
 *
¥eg
 = 
NULL
;

449 i‡(
›t_∑âîn
) {

450 *
ª
;

451 
îrbuf
[256];

452 
ª_îr
;

454 
¥eg
 = 
	`mÆloc
 ( (
ªgex_t
));

455 i‡(
¥eg
 =
NULL
)

456 
	`exô
 (3);

457 i‡(
›t_exa˘
) {

458 
ª
 = 
	`mÆloc
 (
	`°æí
 (
›t_∑âîn
) + 5);

459 i‡(
ª
 =
NULL
)

460 
	`exô
 (3);

461 
	`•rötf
 (
ª
, "^(%s)$", 
›t_∑âîn
);

463 
ª
 = 
›t_∑âîn
;

466 
ª_îr
 = 
	`ªgcomp
 (
¥eg
, 
ª
, 
REG_EXTENDED
 | 
REG_NOSUB
);

467 i‡(
ª_îr
) {

468 
	`ªgîr‹
 (
ª_îr
, 
¥eg
, 
îrbuf
, (errbuf));

469 
	`Ârötf
 (
°dîr
, 
îrbuf
);

470 
	`exô
 (2);

473  
¥eg
;

474 
	}
}

476 #ifde‡
NOT_USED


477 
time_t


478 
	$jiffõs_to_time_t
 (
jiffõs
)

480 
time_t
 
time_of_boŸ
 = 0;

481 i‡(
time_of_boŸ
 == 0) {

482 
time_of_boŸ
 = 
	`time
 (
NULL
Ë- 
	`u±ime
 (0, 0);

484  (
time_of_boŸ
 + 
jiffõs
 / 
Hîtz
);

485 
	}
}

488 
ñ
 *

489 
	$£À˘_¥ocs
 ()

491 
PROCTAB
 *
±p
;

492 
¥oc_t
 
èsk
;

493 
ßved_°¨t_time
;

494 
pid_t
 
ßved_pid
 = 0;

495 
m©ches
 = 0;

496 
size
 = 32;

497 
ªgex_t
 *
¥eg
;

498 
pid_t
 
my£lf
 = 
	`gëpid
();

499 
ñ
 *
li°
;

500 
cmd
[4096];

502 
li°
 = 
	`mÆloc
 (
size
 *  (
ñ
));

503 i‡(
li°
 =
NULL
)

504 
	`exô
 (3);

506 
±p
 = 
	`do_›í¥oc
 ();

507 
¥eg
 = 
	`do_ªgcomp
 ();

509 i‡(
›t_√we°
Ë
ßved_°¨t_time
 = 0ULL;

510 i‡(
›t_ﬁde°
Ë
ßved_°¨t_time
 = ~0ULL;

511 i‡(
›t_√we°
Ë
ßved_pid
 = 0;

512 i‡(
›t_ﬁde°
Ë
ßved_pid
 = 
INT_MAX
;

514 
	`mem£t
 (&
èsk
, 0,  (task));

515 
	`ªad¥oc
 (
±p
, &
èsk
)) {

516 
m©ch
 = 1;

518 i‡(
èsk
.
pid
 =
my£lf
)

520 i‡(
›t_√we°
 && 
èsk
.
°¨t_time
 < 
ßved_°¨t_time
)

521 
m©ch
 = 0;

522 i‡(
›t_ﬁde°
 && 
èsk
.
°¨t_time
 > 
ßved_°¨t_time
)

523 
m©ch
 = 0;

524 i‡(
›t_µid
 && ! 
	`m©ch_numli°
 (
èsk
.
µid
, opt_ppid))

525 
m©ch
 = 0;

526 i‡(
›t_pgΩ
 && ! 
	`m©ch_numli°
 (
èsk
.
pgΩ
, opt_pgrp))

527 
m©ch
 = 0;

528 i‡(
›t_euid
 && ! 
	`m©ch_numli°
 (
èsk
.
euid
, opt_euid))

529 
m©ch
 = 0;

530 i‡(
›t_uid
 && ! 
	`m©ch_numli°
 (
èsk
.
ruid
, opt_uid))

531 
m©ch
 = 0;

532 i‡(
›t_gid
 && ! 
	`m©ch_numli°
 (
èsk
.
rgid
, opt_gid))

533 
m©ch
 = 0;

534 i‡(
›t_sid
 && ! 
	`m©ch_numli°
 (
èsk
.
£ssi⁄
, opt_sid))

535 
m©ch
 = 0;

536 i‡(
›t_ãrm
) {

537 i‡(
èsk
.
ây
 == -1) {

538 
m©ch
 = 0;

540 
ây
[256];

541 
	`dev_to_ây
 (
ây
, (tty) - 1,

542 
èsk
.
ây
,Åask.
pid
, 
ABBREV_DEV
);

543 
m©ch
 = 
	`m©ch_°æi°
 (
ây
, 
›t_ãrm
);

546 i‡(
›t_l⁄g
 || (
m©ch
 && 
›t_∑âîn
)) {

547 i‡(
›t_fuŒ
 && 
èsk
.
cmdlöe
) {

548 
i
 = 0;

549 
byãs
 =  (
cmd
) - 1;

552 
cmd
[
byãs
] = 0;

554 --
byãs
;

556 
	`°∫˝y
 (
cmd
, 
èsk
.
cmdlöe
[
i
], 
byãs
);

557 
byãs
 -
	`°æí
 (
èsk
.
cmdlöe
[
i
++]);

558 
èsk
.
cmdlöe
[
i
] && 
byãs
 > 0) {

559 
	`°∫ˇt
 (
cmd
, " ", 
byãs
);

560 
	`°∫ˇt
 (
cmd
, 
èsk
.
cmdlöe
[
i
], 
byãs
);

561 
byãs
 -
	`°æí
 (
èsk
.
cmdlöe
[
i
++]) + 1;

564 
	`°r˝y
 (
cmd
, 
èsk
.cmd);

568 i‡(
m©ch
 && 
›t_∑âîn
) {

569 i‡(
	`ªgexec
 (
¥eg
, 
cmd
, 0, 
NULL
, 0) != 0)

570 
m©ch
 = 0;

573 i‡(
m©ch
 ^ 
›t_√g©e
) {

574 i‡(
›t_√we°
) {

575 i‡(
ßved_°¨t_time
 =
èsk
.
°¨t_time
 &&

576 
ßved_pid
 > 
èsk
.
pid
)

578 
ßved_°¨t_time
 = 
èsk
.
°¨t_time
;

579 
ßved_pid
 = 
èsk
.
pid
;

580 
m©ches
 = 0;

582 i‡(
›t_ﬁde°
) {

583 i‡(
ßved_°¨t_time
 =
èsk
.
°¨t_time
 &&

584 
ßved_pid
 < 
èsk
.
pid
)

586 
ßved_°¨t_time
 = 
èsk
.
°¨t_time
;

587 
ßved_pid
 = 
èsk
.
pid
;

588 
m©ches
 = 0;

590 i‡(
›t_l⁄g
) {

591 
buff
[4096];

592 
	`•rötf
 (
buff
, "%d %s", 
èsk
.
pid
, 
cmd
);

593 
li°
[++
m©ches
].
°r
 = 
	`°rdup
 (
buff
);

595 
li°
[++
m©ches
].
num
 = 
èsk
.
pid
;

597 i‡(
m©ches
 =
size
) {

598 
size
 *= 2;

599 
li°
 = 
	`ªÆloc
 (list,

600 
size
 *  (
ñ
));

601 i‡(
li°
 =
NULL
)

602 
	`exô
 (3);

606 
	`mem£t
 (&
èsk
, 0,  (task));

608 
	`˛o£¥oc
 (
±p
);

610 
li°
[0].
num
 = 
m©ches
;

611  (
li°
);

612 
	}
}

616 
	$maö
 (
¨gc
, **
¨gv
)

618 
ñ
 *
¥ocs
;

620 
	`∑r£_›ts
 (
¨gc
, 
¨gv
);

622 
¥ocs
 = 
	`£À˘_¥ocs
 ();

623 i‡(
i_am_pkûl
) {

624 
i
;

625 
i
 = 1; i <
¥ocs
[0].
num
; i++) {

626 i‡(
	`kûl
 (
¥ocs
[
i
].
num
, 
›t_sig«l
) == -1)

627 
	`Ârötf
 (
°dîr
, "pkill: %ld - %s\n",

628 
¥ocs
[
i
].
num
, 
	`°ªº‹
 (
î∫o
));

631 i‡(
›t_l⁄g
)

632 
	`ouçut_°æi°
 (
¥ocs
);

634 
	`ouçut_numli°
 (
¥ocs
);

636  ((
¥ocs
[0].
num
) == 0 ? 1 : 0);

637 
	}
}

639 
	$di•œy_pgªp_vîsi⁄
(){

640 
	`Ârötf
(
°dout
, "%†(%s)\n", 
¥og«me
, 
¥o˝s_vîsi⁄
);

641 
	}
}

	@proc/alloc.c

8 
	~<°dlib.h
>

9 
	~<°dio.h
>

10 
	~"¥o˝s.h
"

12 *
	$xˇŒoc
(*
poöãr
, 
size
) {

13 * 
ªt
;

14 i‡(
poöãr
)

15 
	`‰ì
(
poöãr
);

16 i‡(!(
ªt
 = 
	`ˇŒoc
(1, 
size
))) {

17 
	`Ârötf
(
°dîr
, "xˇŒoc:áŒoˇti⁄Éº‹, sizê%d\n", 
size
);

18 
	`exô
(1);

20  
ªt
;

21 
	}
}

23 *
	$xmÆloc
(
size
) {

24 *
p
;

26 i‡(
size
 == 0)

27 ++
size
;

28 
p
 = 
	`mÆloc
(
size
);

29 i‡(!
p
) {

30 
	`Ârötf
(
°dîr
, "xmÆloc: mÆloc(%dËÁûed", 
size
);

31 
	`≥º‹
(
NULL
);

32 
	`exô
(1);

34 (
p
);

35 
	}
}

37 *
	$xªÆloc
(*
ﬁdp
, 
size
) {

38 *
p
;

40 i‡(
size
 == 0)

41 ++
size
;

42 
p
 = 
	`ªÆloc
(
ﬁdp
, 
size
);

43 i‡(!
p
) {

44 
	`Ârötf
(
°dîr
, "xªÆloc:ÑóŒoc(%dËÁûed", 
size
);

45 
	`≥º‹
(
NULL
);

46 
	`exô
(1);

48 (
p
);

49 
	}
}

	@proc/compare.c

10 
	~<°rög.h
>

11 
	~<°dio.h
>

13 
	~"ªad¥oc.h
"

15 
	~"com∑ª.h
"

55 
	gs‹t_dïth
 = 0;

56 
	gs‹t_dúe˘i⁄
[10];

57 (*
s‹t_fun˘i⁄
[10])(* 
a
, * 
b
);

59 
	$mu…_lvl_cmp
(* 
a
, * 
b
) {

60 
i
, 
cmp_vÆ
;

61 
i
 = 0; i < 
s‹t_dïth
; i++) {

62 
cmp_vÆ
 = 
s‹t_dúe˘i⁄
[
i
] * (*
s‹t_fun˘i⁄
[i])(
a
,
b
);

63 i‡(
cmp_vÆ
 != 0)

64  
cmp_vÆ
;

67 
	}
}

77 
	#CMP_STR
(
NAME
) \

78 
cmp_
 ## 
	`NAME
(
¥oc_t
** 
P
,Öroc_t** 
Q
) { \

79  
	`°rcmp
((*
P
)->
NAME
, (*
Q
)->NAME); \

80 }

	)

82 
	#CMP_INT
(
NAME
) \

83 
cmp_
 ## 
	`NAME
 (
¥oc_t
** 
P
,Öroc_t** 
Q
) { \

84 i‡((*
P
)->
NAME
 < (*
Q
)->NAME)  -1; \

85 i‡((*
P
)->
NAME
 > (*
Q
)->NAME)  1; \

87 }

	)

94 
	$CMP_STR
(
ru£r
)

95 
	$CMP_STR
(
eu£r
)

96 
	$CMP_STR
(
cmd
)

99 
	$CMP_INT
(
euid
)

100 
	$CMP_INT
(
pid
)

101 
	$CMP_INT
(
µid
)

102 
	$CMP_INT
(
pgΩ
)

103 
	$CMP_INT
(
£ssi⁄
)

104 
	$CMP_INT
(
ây
)

105 
	$CMP_INT
(
çgid
)

106 
	$CMP_INT
(
utime
)

107 
	$CMP_INT
(
°ime
)

108 
	$CMP_INT
(
cutime
)

109 
	$CMP_INT
(
c°ime
)

111 
	$CMP_INT
(
ni˚
)

112 
	$CMP_INT
(
°¨t_time
)

117 
	$CMP_INT
(
Êags
)

118 
	$CMP_INT
(
mö_Êt
)

119 
	$CMP_INT
(
cmö_Êt
)

120 
	$CMP_INT
(
maj_Êt
)

121 
	$CMP_INT
(
cmaj_Êt
)

123 
	$CMP_INT
(
vsize
)

124 
	$CMP_INT
(
rss
)

132 
	$CMP_INT
(
p˝u
)

133 
	$CMP_INT
(
size
)

134 
	$CMP_INT
(
ªsidít
)

135 
	$CMP_INT
(
sh¨e
)

143 
	scmp_fun_°ru˘
 {

144 
Àâî
;

145 
«me
[15];

146 (*
fun
)(
¥oc_t
**,Öroc_t**);

147 } 
cmp
[] = {

149 { 'u', "u£r", &
cmp_eu£r
 },

151 { 'c', "cmd", &
cmp_cmd
 },

154 { 'U', "uid", &
cmp_euid
 },

155 { 'p', "pid", &
cmp_pid
 },

156 { 'P', "µid", &
cmp_µid
 },

157 { 'g', "pgΩ", &
cmp_pgΩ
 },

158 { 'o', "£ssi⁄", &
cmp_£ssi⁄
 },

159 { 't', "ây", &
cmp_ây
 },

160 { 'G', "çgid", &
cmp_çgid
 },

161 { 'k', "utime", &
cmp_utime
 },

162 { 'K', "°ime", &
cmp_°ime
 },

163 { 'j', "cutime", &
cmp_cutime
 },

164 { 'J', "c°ime", &
cmp_c°ime
 },

166 { 'y', "¥i‹ôy", &
cmp_ni˚
 },

167 { 'T', "°¨t_time", &
cmp_°¨t_time
 },

172 { 'f', "Êags", &
cmp_Êags
 },

173 { 'm', "mö_Êt", &
cmp_mö_Êt
 },

174 { 'n', "cmö_Êt", &
cmp_cmö_Êt
 },

175 { 'M', "maj_Êt", &
cmp_maj_Êt
 },

176 { 'N', "cmaj_Êt", &
cmp_cmaj_Êt
 },

178 { 'v', "vsize", &
cmp_vsize
 },

179 { 'r', "rss", &
cmp_rss
 },

187 { 'C', "p˝u", &
cmp_p˝u
 },

188 { 's', "size", &
cmp_size
 },

189 { 'R', "ªsidít", &
cmp_ªsidít
 },

190 { 'S', "sh¨e", &
cmp_sh¨e
 },

195 { '\0',"ãrmö©‹", 
NULL
 }

196 
	}
};

205 c⁄° *
	$∑r£_s‹t_›t
(c⁄° * 
›t
) {

206 
i
, 
√xt_dú
=1;

207 ; *
›t
 ; ++opt) {

208 i‡(*
›t
 == '-' || *opt == '+') {

209 i‡(*
›t
 == '-')

210 
√xt_dú
 = -1;

211 
›t
++;

214 
i
 = 0; 
cmp
[i].
Àâî
; i++)

215 i‡(*
›t
 =
cmp
[
i
].
Àâî
)

217 i‡(!
cmp
[
i
].
Àâî
) {

218 
s‹t_dïth
=0;

219 
i
=0;i<10;i++){

220 
s‹t_dúe˘i⁄
[
i
]=0;

221 
s‹t_fun˘i⁄
[
i
]=(
cmp_t
)
NULL
;

225 #ifde‡
DEBUG


226 
	`Ârötf
(
°dîr
,

228 
s‹t_dïth
, 
cmp
[
i
].
«me
, 
√xt_dú
);

230 
s‹t_fun˘i⁄
[
s‹t_dïth
] = (
cmp_t
)
cmp
[
i
].
fun
;

231 
s‹t_dúe˘i⁄
[
s‹t_dïth
++] = 
√xt_dú
;

232 
√xt_dú
 = 1;

235  
NULL
;

236 
	}
}

238 c⁄° *
	$∑r£_l⁄g_s‹t
(c⁄° * 
›t
) {

239 * 
comma
;

240 
i
, 
m‹e_keys
, 
√xt_dú
=1;

242 i‡(*
›t
 == '-' || *opt == '+') {

243 i‡(*
›t
 == '-')

244 
√xt_dú
 = -1;

245 
m‹e_keys
 = 1;

246 
›t
++;

249 
m‹e_keys
 = ((
comma
=
	`ödex
(
›t
,',')Ë!
NULL
);

251 i‡(
m‹e_keys
)

252 *
comma
='\0';

253 
i
 = 0; 
cmp
[i].
Àâî
; ++i)

254 i‡(
	`°rcmp
(
›t
, 
cmp
[
i
].
«me
) == 0)

256 i‡(!
cmp
[
i
].
Àâî
) {

257 
s‹t_dïth
=0;

258 
i
=0;i<10;i++){

259 
s‹t_dúe˘i⁄
[
i
]=0;

260 
s‹t_fun˘i⁄
[
i
]=(
cmp_t
)
NULL
;

264 #ifde‡
DEBUG


265 
	`Ârötf
(
°dîr
,

267 
s‹t_dïth
, 
cmp
[
i
].
«me
, 
√xt_dú
);

269 
s‹t_fun˘i⁄
[
s‹t_dïth
] = (
cmp_t
)
cmp
[
i
].
fun
;

270 
s‹t_dúe˘i⁄
[
s‹t_dïth
++] = 
√xt_dú
;

271 
√xt_dú
 = 1;

273 
›t
 = 
comma
 + 1;

274 } 
m‹e_keys
);

275  
NULL
;

276 
	}
}

278 
	$ª£t_s‹t_›ti⁄s
 ()

280 
i
;

282 
s‹t_dïth
=0;

283 
i
=0;i<10;i++){

284 
s‹t_dúe˘i⁄
[
i
]=0;

285 
s‹t_fun˘i⁄
[
i
]=(
cmp_t
)
NULL
;

287 
	}
}

289 
	$ªgi°î_s‹t_fun˘i⁄
 (
dú
, 
cmp_t
 
func
)

291 
s‹t_fun˘i⁄
[
s‹t_dïth
] = 
func
;

292 
s‹t_dúe˘i⁄
[
s‹t_dïth
++] = 
dú
;

293 
	}
}

	@proc/compare.h

1 (*
	tcmp_t
)(*,*);

3 
	`ªgi°î_s‹t_fun˘i⁄
 (
dú
, 
cmp_t
 
func
);

4 
	`ª£t_s‹t_›ti⁄s
();

5 
	`mu…_lvl_cmp
(* 
a
, * 
b
);

6 c⁄° *
	`∑r£_s‹t_›t
(c⁄° * 
›t
);

7 c⁄° *
	`∑r£_l⁄g_s‹t
(c⁄° * 
›t
);

	@proc/devname.c

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~<sys/ty≥s.h
>

16 
	~<sys/°©.h
>

17 
	~<f˙é.h
>

18 
	~<uni°d.h
>

19 
	~<sys/sysma¸os.h
>

20 
	~"vîsi⁄.h
"

21 
	~"dev«me.h
"

24 
	~<asm/∑øm.h
>

25 #i‚de‡
PAGE_SIZE


26 
	#PAGE_SIZE
 (()*1024)

	)

35 
	sây_m≠_node
 {

36 
ây_m≠_node
 *
	m√xt
;

37 
	mmaj‹_numbî
;

38 
	mmö‹_fú°
, 
	mmö‹_œ°
;

39 
	m«me
[16];

40 
	mdevfs_ty≥
;

41 } 
	tây_m≠_node
;

43 
ây_m≠_node
 *
	gây_m≠
 = 
NULL
;

46 
	$lﬂd_drivîs
(){

47 
buf
[10000];

48 *
p
;

49 
fd
;

50 
byãs
;

51 
fd
 = 
	`›í
("/¥oc/ây/drivîs",
O_RDONLY
);

52 if(
fd
 =-1Ë
Áû
;

53 
byãs
 = 
	`ªad
(
fd
, 
buf
, (buf) - 1);

54 if(
byãs
 =-1Ë
Áû
;

55 
buf
[
byãs
] = '\0';

56 
p
 = 
buf
;

57 –
p
 = 
	`°r°r
(p, " /dev/") )){

58 
ây_m≠_node
 *
tmn
;

59 
Àn
;

60 *
íd
;

61 
p
 += 6;

62 
íd
 = 
	`°rchr
(
p
, ' ');

63 if(!
íd
) ;

64 
Àn
 = 
íd
 - 
p
;

65 
tmn
 = 
	`ˇŒoc
(1, (
ây_m≠_node
));

66 
tmn
->
√xt
 = 
ây_m≠
;

67 
ây_m≠
 = 
tmn
;

70 if(
Àn
 >3 && !
	`°∫cmp
(
íd
 - 2, "%d", 2)){

71 
Àn
 -= 2;

72 
tmn
->
devfs_ty≥
 = 1;

74 
	`°∫˝y
(
tmn
->
«me
, 
p
, 
Àn
);

75 
p
 = 
íd
;

76 *
p
 == ' ')Ö++;

77 
tmn
->
maj‹_numbî
 = 
	`©oi
(
p
);

78 
p
 +
	`°r•n
(p, "0123456789");

79 *
p
 == ' ')Ö++;

80 
	`ssˇnf
(
p
, "%d-%d", &
tmn
->
mö‹_fú°
, &tmn->
mö‹_œ°
)){

83 
ây_m≠
 =Åty_m≠->
√xt
;

84 
	`‰ì
(
tmn
);

87 
tmn
->
mö‹_œ°
 =Åmn->
mö‹_fú°
;

93 
Áû
:

94 if(
fd
 !-1Ë
	`˛o£
(fd);

95 if(!
ây_m≠
Ëây_m≠ = (
ây_m≠_node
 *)-1;

96 
	}
}

99 
	$drivî_«me
(* c⁄° 
buf
, 
maj
, 
mö
){

100 
°©
 
sbuf
;

101 
ây_m≠_node
 *
tmn
;

102 if(!
ây_m≠
Ë
	`lﬂd_drivîs
();

103 if(
ây_m≠
 =(
ây_m≠_node
 *)-1)  0;

104 
tmn
 = 
ây_m≠
;

106 if(!
tmn
)  0;

107 if(
tmn
->
maj‹_numbî
 =
maj
 &&Åmn->
mö‹_fú°
 <
mö
 &&Åmn->
mö‹_œ°
 >= min) ;

108 
tmn
 =Åmn->
√xt
;

110 
	`•rötf
(
buf
, "/dev/%s%d", 
tmn
->
«me
, 
mö
);

111 if(
	`°©
(
buf
, &
sbuf
) < 0){

112 if(
tmn
->
devfs_ty≥
)  0;

113 
	`•rötf
(
buf
, "/dev/%s", 
tmn
->
«me
);

114 if(
	`°©
(
buf
, &
sbuf
) < 0)  0;

116 if(
mö
 !
	`mö‹
(
sbuf
.
°_rdev
))  0;

117 if(
maj
 !
	`maj‹
(
sbuf
.
°_rdev
))  0;

119 
	}
}

122 
	$guess_«me
(* c⁄° 
buf
, 
maj
, 
mö
){

123 
°©
 
sbuf
;

124 
t0
, 
t1
;

125 
tmpmö
 = 
mö
;

126 
maj
){

128 if(
mö
<64){

129 
	`•rötf
(
buf
, "/dev/ây%d", 
mö
);

132 if(
mö
<128){

133 
	`•rötf
(
buf
, "/dev/âyS%d", 
mö
-64);

136 
tmpmö
 = 
mö
 & 0x3f;

138 
t0
 = "pqr°uvwxyzabcde"[
tmpmö
>>4];

139 
t1
 = "0123456789abcdef"[
tmpmö
&0x0f];

140 
	`•rötf
(
buf
, "/dev/ây%c%c", 
t0
, 
t1
);

142 17: 
	`•rötf
(
buf
, "/dev/âyH%d", 
mö
); ;

143 19: 
	`•rötf
(
buf
, "/dev/âyC%d", 
mö
); ;

144 22: 
	`•rötf
(
buf
, "/dev/âyD%d", 
mö
); ;

145 23: 
	`•rötf
(
buf
, "/dev/âyD%d", 
mö
); ;

146 24: 
	`•rötf
(
buf
, "/dev/âyE%d", 
mö
); ;

147 32: 
	`•rötf
(
buf
, "/dev/âyX%d", 
mö
); ;

148 43: 
	`•rötf
(
buf
, "/dev/âyI%d", 
mö
); ;

149 46: 
	`•rötf
(
buf
, "/dev/âyR%d", 
mö
); ;

150 48: 
	`•rötf
(
buf
, "/dev/âyL%d", 
mö
); ;

151 57: 
	`•rötf
(
buf
, "/dev/âyP%d", 
mö
); ;

152 71: 
	`•rötf
(
buf
, "/dev/âyF%d", 
mö
); ;

153 75: 
	`•rötf
(
buf
, "/dev/âyW%d", 
mö
); ;

154 78: 
	`•rötf
(
buf
, "/dev/âyM%d", 
mö
); ;

155 105: 
	`•rötf
(
buf
, "/dev/âyV%d", 
mö
); ;

156 112: 
	`•rötf
(
buf
, "/dev/âyM%d", 
mö
); ;

158 136 ... 143: 
	`•rötf
(
buf
, "/dev/±s/%d", 
mö
+(
maj
-136)*256); ;

159 148: 
	`•rötf
(
buf
, "/dev/âyT%d", 
mö
); ;

160 154: 
	`•rötf
(
buf
, "/dev/âySR%d", 
mö
); ;

161 156: 
	`•rötf
(
buf
, "/dev/âySR%d", 
mö
+256); ;

162 164: 
	`•rötf
(
buf
, "/dev/âyCH%d", 
mö
); ;

163 166: 
	`•rötf
(
buf
, "/dev/âyACM%d", 
mö
); ;

164 172: 
	`•rötf
(
buf
, "/dev/âyMX%d", 
mö
); ;

165 174: 
	`•rötf
(
buf
, "/dev/âySI%d", 
mö
); ;

166 188: 
	`•rötf
(
buf
, "/dev/âyUSB%d", 
mö
); ;

169 if(
	`°©
(
buf
, &
sbuf
) < 0)  0;

170 if(
mö
 !
	`mö‹
(
sbuf
.
°_rdev
))  0;

171 if(
maj
 !
	`maj‹
(
sbuf
.
°_rdev
))  0;

173 
	}
}

179 
	$lök_«me
(* c⁄° 
buf
, 
maj
, 
mö
, 
pid
, c⁄° *
«me
){

180 
°©
 
sbuf
;

181 
∑th
[32];

182 
cou¡
;

183 
	`•rötf
(
∑th
, "/¥oc/%d/%s", 
pid
, 
«me
);

184 
cou¡
 = 
	`ªadlök
(
∑th
,
buf
,
PAGE_SIZE
-1);

185 if(
cou¡
 == -1)  0;

186 
buf
[
cou¡
] = '\0';

187 if(
	`°©
(
buf
, &
sbuf
) < 0)  0;

188 if(
mö
 !
	`mö‹
(
sbuf
.
°_rdev
))  0;

189 if(
maj
 !
	`maj‹
(
sbuf
.
°_rdev
))  0;

191 
	}
}

194 
	$dev_to_ây
(*
ªt
, 
ch›
, 
dev
, 
pid
, 
Êags
) {

195 
buf
[
PAGE_SIZE
];

196 *
tmp
 = 
buf
;

197 
i
 = 0;

198 
c
;

199 if(()
dev
 =()-1Ë
Áû
;

200 if(
löux_vîsi⁄_code
 > 
	`LINUX_VERSION
(2, 5, 0)){

201 if(
	`lök_«me
(
tmp
, 
	`maj‹
(
dev
), 
	`mö‹
(dev), 
pid
, "ây" )Ë
abbªv
;

203 if(
	`drivî_«me
(
tmp
, 
	`maj‹
(
dev
), 
	`mö‹
(devË)Ë
abbªv
;

204 if–
	`lök_«me
(
tmp
, 
	`maj‹
(
dev
), 
	`mö‹
(dev), 
pid
, "fd/2" )Ë
abbªv
;

205 if–
	`guess_«me
(
tmp
, 
	`maj‹
(
dev
), 
	`mö‹
(devË)Ë
abbªv
;

206 if–
	`lök_«me
(
tmp
, 
	`maj‹
(
dev
), 
	`mö‹
(dev), 
pid
, "fd/255")Ë
abbªv
;

207 
Áû
:

208 
	`°r˝y
(
ªt
, "?");

210 
abbªv
:

211 if((
Êags
&
ABBREV_DEV
Ë&& !
	`°∫cmp
(
tmp
,"/dev/",5) &&Åmp[5])Åmp += 5;

212 if((
Êags
&
ABBREV_TTY
Ë&& !
	`°∫cmp
(
tmp
,"tty", 3) &&Åmp[3])Åmp += 3;

213 if((
Êags
&
ABBREV_PTS
Ë&& !
	`°∫cmp
(
tmp
,"pts/", 4) &&Åmp[4])Åmp += 4;

215 if(
tmp
 + 
ch›
 - 
buf
 <
PAGE_SIZE
)

216 
tmp
[
ch›
] = '\0';

219 
c
 = *
tmp
;

220 
tmp
++;

221 if(!
c
) ;

222 
i
++;

223 if(
c
<=' ') c = '?';

224 if(
c
>126) c = '?';

225 *
ªt
 = 
c
;

226 
ªt
++;

228 *
ªt
 = '\0';

229  
i
;

230 
	}
}

233 
	$ây_to_dev
(*
«me
) {

234 
°©
 
sbuf
;

235 
buf
[32];

236 if(
	`°©
(
«me
, &
sbuf
Ë>0Ë sbuf.
°_rdev
;

237 
	`¢¥ötf
(
buf
,32,"/dev/%s",
«me
);

238 if(
	`°©
(
buf
, &
sbuf
Ë>0Ë sbuf.
°_rdev
;

239 
	`¢¥ötf
(
buf
,32,"/dev/ây%s",
«me
);

240 if(
	`°©
(
buf
, &
sbuf
Ë>0Ë sbuf.
°_rdev
;

241 
	`¢¥ötf
(
buf
,32,"/dev/±s/%s",
«me
);

242 if(
	`°©
(
buf
, &
sbuf
Ë>0Ë sbuf.
°_rdev
;

244 
	}
}

	@proc/devname.h

1 
	#ABBREV_DEV
 1

	)

2 
	#ABBREV_TTY
 2

	)

3 
	#ABBREV_PTS
 4

	)

5 
dev_to_ây
(*
ªt
, 
ch›
, 
dev
, 
pid
, 
Êags
);

7 
ây_to_dev
(*
«me
);

	@proc/ksym.c

11 
	~<°dlib.h
>

12 
	~<°rög.h
>

13 
	~<time.h
>

14 
	~<°d¨g.h
>

15 
	~<f˙é.h
>

16 
	~<î∫o.h
>

17 
	~<uni°d.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/mm™.h
>

20 
	~<sys/ut¢ame.h
>

21 
	~"¥o˝s.h
"

22 
	~"vîsi⁄.h
"

23 
	~"sysöfo.h
"

25 
	#KSYMS_FILENAME
 "/¥oc/ksyms"

	)

28 #unde‡
KSYMS_FILENAME


29 
	#KSYMS_FILENAME
 "/would/be/ni˚/to/have/this/fûe"

	)

30 
	#SYSMAP_FILENAME
 "/home/Æbît/ps/45621/Sy°em.m≠-hacked"

	)

31 
	#löux_vîsi⁄_code
 131598

	)

32 
	#smp_num_˝us
 2

	)

36 #unde‡
KSYMS_FILENAME


37 
	#KSYMS_FILENAME
 "/home/Æbît/ps/45621/ksyms-2.3.12"

	)

38 
	#SYSMAP_FILENAME
 "/home/Æbît/ps/45621/Sy°em.m≠-2.3.12"

	)

39 
	#löux_vîsi⁄_code
 131852

	)

40 
	#smp_num_˝us
 2

	)

44 #unde‡
KSYMS_FILENAME


45 
	#KSYMS_FILENAME
 "/home/Æbît/ps/45621/ksyms-2.3.18ac8-MODVERS"

	)

46 
	#SYSMAP_FILENAME
 "/home/Æbît/ps/45621/Sy°em.m≠-2.3.18ac8-MODVERS"

	)

47 
	#löux_vîsi⁄_code
 131858

	)

48 
	#smp_num_˝us
 2

	)

52 #unde‡
KSYMS_FILENAME


53 
	#KSYMS_FILENAME
 "/home/Æbît/ps/45621/ksyms-2.3.18ac8-NOMODVERS"

	)

54 
	#SYSMAP_FILENAME
 "/home/Æbît/ps/45621/Sy°em.m≠-2.3.18ac8-NOMODVERS"

	)

55 
	#löux_vîsi⁄_code
 131858

	)

56 
	#smp_num_˝us
 2

	)

80 
	#SYMBOL_TYPE_CHARS
 "Tt?dDbBrARGgsWS"

	)

87 
	#LEGAL_SYSMAP_CHARS
 "0123456789_ ?.\n\t[]" \

89 "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

	)

105 
	ssymb
 {

106 c⁄° *
	m«me
;

107 
	maddr
;

108 } 
	tsymb
;

110 c⁄° 
symb
 
	gÁû
 = { "?", 0 };

111 c⁄° 
	gdash
[] = "-";

115 
symb
 
	ghashèbÀ
[256];

117 *
	gsysm≠_d©a
;

118 
	gsysm≠_room
;

119 
symb
 *
	gsysm≠_ödex
;

120 
	gsysm≠_cou¡
;

122 *
	gksyms_d©a
;

123 
	gksyms_room
 = 4096;

124 
symb
 *
	gksyms_ödex
;

125 
	gksyms_cou¡
;

126 
	gidx_room
;

141 
	$ch›_vîsi⁄
(*
¨g
){

142 *
˝
;

143 
˝
 = 
	`°rchr
(
¨g
,'\t');

144 if(
˝
) *cp = '\0';

146 *
p
;

147 
Àn
 = 0;

148 
˝
 = 
	`°ºchr
(
¨g
, 'R');

149 if(!
˝
 || cp<=
¨g
+1 || cp[-1]!='_') ;

150 
p
=
˝
; *++p; ){

151 *
p
){

156 
Àn
++;

160 
Àn
=0;

164 if(
Àn
<8) ;

165 
˝
[-1] = '\0';

167 
	}
}

169 
	$ch›_vîsi⁄
(*
¨g
){

170 *
˝
;

171 
˝
 = 
	`°rchr
(
¨g
,'\t');

172 if(
˝
) *cp = '\0';

174 
Àn
;

175 
˝
 = 
	`°ºchr
(
¨g
, 'R');

176 if(!
˝
 || cp<=
¨g
+1 || cp[-1]!='_') ;

177 
Àn
=
	`°æí
(
˝
);

178 if(
Àn
<9) ;

179 if(
	`°Ωbrk
(
˝
+1,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")) ;

180 if(
	`°r•n
(
˝
+
Àn
-8,"0123456789abcdef")!=8) ;

181 
˝
[-1] = '\0';

183 
	}
}

187 c⁄° 
symb
 *
	$£¨ch
(
addªss
, 
symb
 *
idx
, 
cou¡
){

188 
À·
;

189 
mid
;

190 
right
;

191 if(!
idx
Ë 
NULL
;

192 if(
addªss
 < 
idx
[0].
addr
Ë 
NULL
;

193 if(
addªss
 >
idx
[
cou¡
-1].
addr
)  idx+count-1;

194 
À·
 = 0;

195 
right
 = 
cou¡
-1;

197 
mid
 = (
À·
 + 
right
) / 2;

198 if(
addªss
 >
idx
[
mid
].
addr
Ë
À·
 = mid;

199 if(
addªss
 <
idx
[
mid
].
addr
Ë
right
 = mid;

200 if(
right
-
À·
 <= 1) ;

202 if(
addªss
 =
idx
[
right
].
addr
)  idx+right;

203  
idx
+
À·
;

204 
	}
}

209 
	$ªad_fûe
(c⁄° *
fûíame
, **
buÂ
, *
roomp
) {

210 
fd
 = 0;

211 
ssize_t
 
d⁄e
;

212 *
buf
;

213 
ssize_t
 
tŸÆ
 = 0;

214 
room
 = *
roomp
;

215 
buf
 = *
buÂ
;

216 if(!
room
Ë
hñl
;

217 if(!
buf
Ëbu‡
	`mÆloc
(
room
);

218 if(!
buf
Ë
hñl
;

219 
›í_agaö
:

220 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
|
O_NOCTTY
|
O_NONBLOCK
);

221 if(
fd
<0){

222 
î∫o
){

223 
EINTR
: 
›í_agaö
;

224 : 
	`_exô
(101);

225 
EACCES
:

227 
ENOENT
:;

229 
hñl
;

232 
d⁄e
 = 
	`ªad
(
fd
, 
buf
+
tŸÆ
, 
room
-total-1);

233 if(
d⁄e
==0) ;

234 if(
d⁄e
==-1){

235 if(
î∫o
==
EINTR
) ;

236 
	`≥º‹
("");

237 
hñl
;

239 if(
d⁄e
==(
ssize_t
)
room
-
tŸÆ
-1){

240 *
tmp
;

241 
tŸÆ
 +
d⁄e
;

243 
room
 *= 2;

244 
tmp
 = 
	`ªÆloc
(
buf
, 
room
);

245 if(!
tmp
Ë
hñl
;

246 
buf
 = 
tmp
;

249 if(
d⁄e
>0 && d⁄e<(
ssize_t
)
room
-
tŸÆ
-1){

250 
tŸÆ
 +
d⁄e
;

253 
	`Ârötf
(
°dîr
,"%ld c™'àh≠≥n\n", ()
d⁄e
);

255 
	`_exô
(42);

257 *
buÂ
 = 
buf
;

258 *
roomp
 = 
room
;

259 
	`˛o£
(
fd
);

261 
hñl
:

262 if(
buf
Ë
	`‰ì
(buf);

263 *
buÂ
 = 
NULL
;

264 *
roomp
 = 0;

265 
tŸÆ
 = 0;

266 
	`˛o£
(
fd
);

268 
	}
}

272 
	$∑r£_ksyms
() {

273 *
ídp
;

274 if(!
ksyms_room
 || !
ksyms_d©a
Ë
quõt_goodbye
;

275 
ídp
 = 
ksyms_d©a
;

276 
ksyms_cou¡
 = 0;

277 if(
idx_room
Ë
by∑ss
;

278 
idx_room
 = 512;

280 *
vp
;

281 
idx_room
 *= 2;

282 
vp
 = 
	`ªÆloc
(
ksyms_ödex
, (
symb
)*
idx_room
);

283 if(!
vp
Ë
bad_Æloc
;

284 
ksyms_ödex
 = 
vp
;

285 
by∑ss
:

287 *
ßved
;

288 if(!*
ídp
)  1;

289 
ßved
 = 
ídp
;

290 
ksyms_ödex
[
ksyms_cou¡
].
addr
 = 
	`°πoul
(
ídp
, &endp, 16);

291 if(
ídp
==
ßved
 || *íd∞!' 'Ë
bad_∑r£
;

292 
ídp
++;

293 
ksyms_ödex
[
ksyms_cou¡
].
«me
 = 
ídp
;

294 
ßved
 = 
ídp
;

295 
ídp
 = 
	`°rchr
(endp,'\n');

296 if(!
ídp
Ë
bad_∑r£
;

297 *
ídp
 = '\0';

298 
	`ch›_vîsi⁄
(
ßved
);

299 ++
ídp
;

300 if(++
ksyms_cou¡
 >
idx_room
) ;

305 
bad_Æloc
:

306 
	`Ârötf
(
°dîr
, "Warning:ÇotÉnough memoryávailable\n");

309 
bad_∑r£
:

310 
	`Ârötf
(
°dîr
, "W¨nög: "
KSYMS_FILENAME
"ÇotÇormal\n");

312 
quõt_goodbye
:

313 
idx_room
 = 0;

314 if(
ksyms_d©a
Ë
	`‰ì
(ksyms_d©aË, ksyms_d©®
NULL
;

315 
ksyms_room
 = 0;

316 if(
ksyms_ödex
Ë
	`‰ì
(ksyms_ödexË, ksyms_ödex = 
NULL
;

317 
ksyms_cou¡
 = 0;

319 
	}
}

323 
	#VCNT
 16

	)

325 
sysm≠_mm≠
(c⁄° *
fûíame
, (*
mesßge
)(const *, ...)) {

326 
°©
 
sbuf
;

327 *
ídp
;

328 
fd
;

329 
Vîsi⁄
[32];

330 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
|
O_NOCTTY
|
O_NONBLOCK
);

331 if(
fd
<0)  0;

332 if(
	`f°©
(
fd
, &
sbuf
Ë< 0Ë
bad_›í
;

333 if(!
	`S_ISREG
(
sbuf
.
°_mode
)Ë
bad_›í
;

334 if(
sbuf
.
°_size
 < 5000Ë
bad_›í
;

336 
ídp
 = 
	`mm≠
(0, 
sbuf
.
°_size
 + 1, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
, 
fd
, 0);

337 
sysm≠_d©a
 = 
ídp
;

338 *
ídp
==' '){

339 if(
	`°∫cmp
(
ídp
," w ", 19)Ë
bad_∑r£
;

340 
ídp
 += 19;

341 
ídp
 = 
	`°rchr
(endp,'\n');

342 if(!
ídp
Ë
bad_∑r£
;

343 if(
	`°∫cmp
(
ídp
-3, "_mv\n", 4)Ë
bad_∑r£
;

344 
ídp
++;

346 if(
sysm≠_d©a
 =(
ˇddr_t
Ë-1Ë
bad_›í
;

347 
	`˛o£
(
fd
);

348 
fd
 = -1;

349 
	`•rötf
(
Vîsi⁄
, "Vîsi⁄_%d", 
löux_vîsi⁄_code
);

350 
sysm≠_room
 = 512;

352 *
vp
;

353 
sysm≠_room
 *= 2;

354 
vp
 = 
	`ªÆloc
(
sysm≠_ödex
, (
symb
)*
sysm≠_room
);

355 if(!
vp
Ë
bad_Æloc
;

356 
sysm≠_ödex
 = 
vp
;

358 *
v°¨t
;

359 if(
ídp
 - 
sysm≠_d©a
 >
sbuf
.
°_size
){

360 
i
 = 
VCNT
;

361 if(*
Vîsi⁄
Ë
bad_vîsi⁄
;

362 if(!
ksyms_ödex
)  1;

363 
i
--){

365 c⁄° 
symb
 *
födme
;

366 c⁄° 
symb
 *
m≠_symb
;

368 
födme
 = 
ksyms_ödex
 + (
ksyms_cou¡
*
i
/
VCNT
);

370 
m≠_symb
 = 
	`£¨ch
(
födme
->
addr
, 
sysm≠_ödex
, 
sysm≠_cou¡
);

371 if(
m≠_symb
){

372 if(
m≠_symb
->
addr
 !
födme
->addr) ;

374 
m≠_symb
 !
sysm≠_ödex
){

375 i‡(
m≠_symb
->
addr
 != (map_symb-1)->addr) ;

376 
m≠_symb
--;

379 
m≠_symb
 !(
sysm≠_ödex
+
sysm≠_cou¡
)){

380 i‡(
m≠_symb
->
addr
 !
födme
->addr) ;

381 i‡(!
	`°rcmp
(
m≠_symb
->
«me
,
födme
->«me)Ë
good_m©ch
;

382 
m≠_symb
++;

384 
m≠_symb
--;

385 
	`mesßge
("{%s} {%s}\n",
m≠_symb
->
«me
,
födme
->name);

386 
bad_m©ch
;

388 
good_m©ch
:;

393 
sysm≠_ödex
[
sysm≠_cou¡
].
addr
 = 
	`°πoul
(
ídp
, &endp, 16);

394 if(*
ídp
 !' 'Ë
bad_∑r£
;

395 
ídp
++;

396 if(!
	`°rchr
(
SYMBOL_TYPE_CHARS
, *
ídp
)Ë
bad_∑r£
;

397 
ídp
++;

398 if(*
ídp
 !' 'Ë
bad_∑r£
;

399 
ídp
++;

400 
sysm≠_ödex
[
sysm≠_cou¡
].
«me
 = 
ídp
;

401 
v°¨t
 = 
ídp
;

402 
ídp
 = 
	`°rchr
(endp,'\n');

403 if(!
ídp
Ë
bad_∑r£
;

404 *
ídp
 = '\0';

405 ++
ídp
;

406 
	`ch›_vîsi⁄
(
v°¨t
);

407 if(*
v°¨t
=='V' && *
Vîsi⁄
 && !
	`°rcmp
(Version,vstart)) *Version='\0';

408 if(++
sysm≠_cou¡
 >
sysm≠_room
) ;

413 
bad_m©ch
:

414 
	`mesßge
("W¨nög: %†d€†nŸ m©ch kî√»d©a.\n", 
fûíame
);

417 
bad_vîsi⁄
:

418 
	`mesßge
("W¨nög: %†ha†™ inc‹ª˘ kî√»vîsi⁄.\n", 
fûíame
);

421 
bad_Æloc
:

422 
	`mesßge
("Warning:ÇotÉnough memoryávailable\n");

425 
bad_∑r£
:

426 
	`mesßge
("W¨nög: %†nŸÖ¨£abÀá†®Sy°em.m≠\n", 
fûíame
);

429 
bad_›í
:

430 
	`mesßge
("W¨nög: %†couldÇŸ bê›íedá†®Sy°em.m≠\n", 
fûíame
);

433 
sysm≠_room
=0;

434 
sysm≠_cou¡
=0;

435 if(
sysm≠_ödex
Ë
	`‰ì
(sysmap_index);

436 
sysm≠_ödex
 = 
NULL
;

437 if(
fd
>=0Ë
	`˛o£
(fd);

438 if(
sysm≠_d©a
Ë
	`munm≠
(sysm≠_d©a, 
sbuf
.
°_size
 + 1);

439 
sysm≠_d©a
 = 
NULL
;

441 
	}
}

445 
	$ªad_™d_∑r£
(){

446 
time_t
 
°amp
;

447 if(
	`time
(
NULL
Ë!
°amp
){

448 
	`ªad_fûe
(
KSYMS_FILENAME
, &
ksyms_d©a
, &
ksyms_room
);

449 
	`∑r£_ksyms
();

450 
	`mem£t
((*)
hashèbÀ
,0,(hashtable));

451 
°amp
 = 
	`time
(
NULL
);

453 
	}
}

457 
	$deÁu…_mesßge
(c⁄° *
f‹m©
, ...) {

458 
va_li°
 
¨g
;

460 
	`va_°¨t
 (
¨g
, 
f‹m©
);

461 
	`vÂrötf
 (
°dîr
, 
f‹m©
, 
¨g
);

462 
	`va_íd
 (
¨g
);

463 
	}
}

467 
›í_psdb_mesßge
(c⁄° *
ovîride
, (*
mesßge
)(const *, ...)) {

468 c⁄° *
sysm≠_∑ths
[] = {

474 
NULL


476 
ut¢ame
 
uts
;

477 
∑th
[64];

478 c⁄° **
fmt
 = 
sysm≠_∑ths
;

479 c⁄° *
ív
;

480 
	`ªad_™d_∑r£
();

481 #ifde‡
SYSMAP_FILENAME


482 
ovîride
 = 
SYSMAP_FILENAME
;

484 if(
ovîride
){

485 if(
	`sysm≠_mm≠
(
ovîride
, 
mesßge
))  0;

490 i‡((
ív
 = 
	`gëív
("PS_SYSMAP")Ë&& 
	`sysm≠_mm≠
”nv, 
mesßge
))  0;

491 i‡((
ív
 = 
	`gëív
("PS_SYSTEM_MAP")Ë&& 
	`sysm≠_mm≠
”nv, 
mesßge
))  0;

492 
	`u«me
(&
uts
);

494 
	`¢¥ötf
(
∑th
, Ö©h, *
fmt
, 
uts
.
ªÀa£
);

495 i‡(
	`sysm≠_mm≠
(
∑th
, 
mesßge
))  0;

496 }*++
fmt
);

499 
	}
}

503 
	$›í_psdb
(c⁄° *
ovîride
) {

504  
	`›í_psdb_mesßge
(
ovîride
, 
deÁu…_mesßge
);

505 
	}
}

509 
	#MAX_OFFSET
 (0x1000*()Ë

	)

512 c⁄° * 
	$wch™
(
addªss
) {

513 c⁄° 
symb
 *
mod_symb
;

514 c⁄° 
symb
 *
m≠_symb
;

515 c⁄° 
symb
 *
good_symb
;

516 c⁄° *
ªt
;

517 
hash
 = (
addªss
 >> 4) & 0xff;

518 if(!
addªss
Ë 
dash
;

519 
	`ªad_™d_∑r£
();

521 if(
hashèbÀ
[
hash
].
addr
 =
addªss
Ë hashèbÀ[hash].
«me
;

522 
mod_symb
 = 
	`£¨ch
(
addªss
, 
ksyms_ödex
, 
ksyms_cou¡
);

523 if(!
mod_symb
Ëmod_symb = &
Áû
;

524 
m≠_symb
 = 
	`£¨ch
(
addªss
, 
sysm≠_ödex
, 
sysm≠_cou¡
);

525 if(!
m≠_symb
Ëm≠_symb = &
Áû
;

528 
good_symb
 = (
mod_symb
->
addr
 > 
m≠_symb
->addr)

529 ? 
mod_symb


530 : 
m≠_symb


532 if(
addªss
 > 
good_symb
->
addr
 + 
MAX_OFFSET
Ëgood_symb = &
Áû
;

535 
ªt
 = 
good_symb
->
«me
;

536 *
ªt
){

537 's': if(!
	`°∫cmp
(
ªt
, "sys_", 4))Ñet += 4; ;

538 'd': if(!
	`°∫cmp
(
ªt
, "do_", 3))Ñet += 3; ;

539 '_': *
ªt
=='_')Ñet++; ;

544 
hashèbÀ
[
hash
].
addr
 = 
addªss
;

545 
hashèbÀ
[
hash
].
«me
 = 
ªt
;

547  
ªt
;

548 
	}
}

	@proc/output.c

5 
	~<°dio.h
>

6 
	~<˘y≥.h
>

7 
	~<°rög.h
>

8 
	~"¥o˝s.h
"

13 
	$¥öt_°r
(
FILE
* 
fûe
, *
s
, 
max
) {

14 
i
;

15 
i
=0; 
s
[i] && i < 
max
; i++)

16 i‡(
	`i•röt
(
s
[
i
]) || s[i] == ' ')

17 
	`Âutc
(
s
[
i
], 
fûe
);

19 i‡(
max
 - 
i
 > 3) {

20 
	`Ârötf
(
fûe
, "\\%03o", ()
s
[
i
]);

21 
i
 += 3;

23  
max
 - 
i
;

25  
max
 - 
i
;

26 
	}
}

32 
	$¥öt_°æi°
(
FILE
* 
fûe
, **
°rs
, 
max
) {

33 
i
, 
n
;

34 
n
=0; *
°rs
 &&Ç < 
max
; strs++) {

35 
i
=0; 
°rs
[0][i] && 
n
+ò< 
max
; i++)

36 i‡(
	`i•röt
(
°rs
[0][
i
]) || strs[0][i] == ' ')

37 
	`Âutc
(
°rs
[0][
i
], 
fûe
);

39 i‡(
max
-(
n
+
i
) > 3) {

40 
	`Ârötf
(
fûe
, "\\%03o", ()
°rs
[0][
i
]);

41 
n
 += 3;

43  
max
 - 
n
;

45 
n
 +
i
;

46 i‡(
n
 + 1 < 
max
) {

47 
	`Âutc
(' ', 
fûe
);

48 
n
++;

50  
max
 - 
n
;

52  
max
 - 
n
;

53 
	}
}

	@proc/procps.h

2 
	~<°dio.h
>

3 
	~<sys/ty≥s.h
>

11 
	~<asm/∑øm.h
>

13 *
xªÆloc
(*
ﬁdp
, 
size
);

14 *
xmÆloc
(
size
);

15 *
xˇŒoc
(*
poöãr
, 
size
);

17 
mu…_lvl_cmp
(* 
a
, * 
b
);

19 *
u£r_‰om_uid
(
uid_t
 
uid
);

20 *
group_‰om_gid
(
gid_t
 
gid
);

22 c⁄° * 
wch™
(
addªss
);

23 
›í_psdb
(c⁄° *
ovîride
);

24 
›í_psdb_mesßge
(c⁄° *
ovîride
, (*
mesßge
)(const *, ...));

26 
	`¥öt_°r
 (
FILE
* 
fûe
, *
s
, 
max
);

27 
	`¥öt_°æi°
(
FILE
* 
fûe
, **
°rs
, 
max
);

	@proc/pwcache.c

9 
	~<°dio.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<°dlib.h
>

12 
	~<pwd.h
>

13 
	~"¥o˝s.h
"

14 
	~<gΩ.h
>

18 
	#HASHSIZE
 32

	)

19 
	#HASH
(
x
Ë((xË& (
HASHSIZE
 - 1))

	)

21 
	#NAMESIZE
 20

	)

22 
	#NAMELENGTH
 "19"

	)

24 
	spwbuf
 {

25 
pwbuf
 *
	m√xt
;

26 
uid_t
 
	muid
;

27 
	m«me
[
NAMESIZE
];

28 } *
	gpwhash
[
HASHSIZE
];

30 *
	$u£r_‰om_uid
(
uid_t
 
uid
)

32 
pwbuf
 **
p
;

33 
∑sswd
 *
pw
;

35 
p
 = &
pwhash
[
	`HASH
(
uid
)];

36 *
p
) {

37 i‡((*
p
)->
uid
 == uid)

38 ((*
p
)->
«me
);

39 
p
 = &(*p)->
√xt
;

41 *
p
 = (
pwbuf
 *Ë
	`xmÆloc
((pwbuf));

42 (*
p
)->
uid
 = uid;

43 i‡((
pw
 = 
	`gëpwuid
(
uid
)Ë=
NULL
)

44 
	`•rötf
((*
p
)->
«me
, "#%d", 
uid
);

46 
	`•rötf
((*
p
)->
«me
, "%-." 
NAMELENGTH
 "s", 
pw
->
pw_«me
);

47 (*
p
)->
√xt
 = 
NULL
;

48 ((*
p
)->
«me
);

49 
	}
}

51 
	sgΩbuf
 {

52 
gΩbuf
 *
	m√xt
;

53 
gid_t
 
	mgid
;

54 
	m«me
[
NAMESIZE
];

55 } *
	ggΩhash
[
HASHSIZE
];

57 *
	$group_‰om_gid
(
gid_t
 
gid
)

59 
gΩbuf
 **
g
;

60 
group
 *
gr
;

62 
g
 = &
gΩhash
[
	`HASH
(
gid
)];

63 *
g
) {

64 i‡((*
g
)->
gid
 == gid)

65 ((*
g
)->
«me
);

66 
g
 = &(*g)->
√xt
;

68 *
g
 = (
gΩbuf
 *Ë
	`mÆloc
((grpbuf));

69 (*
g
)->
gid
 = gid;

70 i‡((
gr
 = 
	`gëgrgid
(
gid
)Ë=
NULL
)

71 
	`•rötf
((*
g
)->
«me
, "#%d", 
gid
);

73 
	`•rötf
((*
g
)->
«me
, "%-." 
NAMELENGTH
 "s", 
gr
->
gr_«me
);

74 (*
g
)->
√xt
 = 
NULL
;

75 ((*
g
)->
«me
);

76 
	}
}

	@proc/readproc.c

8 #ifde‡
HAVE_CONFIG_H


9 
	~"c⁄fig.h
"

11 
	~"vîsi⁄.h
"

12 
	~"ªad¥oc.h
"

13 
	~"dev«me.h
"

14 
	~"¥o˝s.h
"

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°d¨g.h
>

18 
	~<°rög.h
>

19 
	~<uni°d.h
>

20 
	~<sig«l.h
>

21 
	~<f˙é.h
>

22 
	~<sys/dú.h
>

23 
	~<sys/ty≥s.h
>

24 
	~<sys/°©.h
>

26 #ifde‡
FLASK_LINUX


27 
	~<fs_£cuª.h
>

32 
PROCTAB
* 
	$›í¥oc
(
Êags
, ...) {

33 
va_li°
 
≠
;

34 
PROCTAB
* 
PT
 = 
	`xmÆloc
((PROCTAB));

36 i‡(
Êags
 & 
PROC_PID
)

37 
PT
->
¥ocfs
 = 
NULL
;

38 i‡(!(
PT
->
¥ocfs
 = 
	`›ídú
("/proc")))

39  
NULL
;

40 
PT
->
Êags
 = flags;

41 
	`va_°¨t
(
≠
, 
Êags
);

42 i‡(
Êags
 & 
PROC_PID
)

43 
PT
->
pids
 = 
	`va_¨g
(
≠
, 
pid_t
*);

44 i‡(
Êags
 & 
PROC_UID
) {

45 
PT
->
uids
 = 
	`va_¨g
(
≠
, 
uid_t
*);

46 
PT
->
nuid
 = 
	`va_¨g
(
≠
, );

48 
	`va_íd
(
≠
);

49  
PT
;

50 
	}
}

54 
	$˛o£¥oc
(
PROCTAB
* 
PT
) {

55 i‡(
PT
){

56 i‡(
PT
->
¥ocfs
Ë
	`˛o£dú
(PT->procfs);

57 
	`‰ì
(
PT
);

59 
	}
}

63 
	$‰ì¥oc
(
¥oc_t
* 
p
) {

64 i‡(!
p
)

68 i‡(
p
->
cmdlöe
)

69 
	`‰ì
((*)*
p
->
cmdlöe
);

70 i‡(
p
->
ívú⁄
)

71 
	`‰ì
((*)*
p
->
ívú⁄
);

72 
	`‰ì
(
p
);

73 
	}
}

77 
	$°©us2¥oc
 (* 
S
, 
¥oc_t
* 
P
, 
fûl
) {

78 * 
tmp
;

79 i‡(
fûl
 == 1) {

80 
	`mem£t
(
P
->
cmd
, 0,  P->cmd);

81 
	`ssˇnf
 (
S
, "Name:\t%15c", 
P
->
cmd
);

82 
tmp
 = 
	`°rchr
(
P
->
cmd
,'\n');

83 *
tmp
='\0';

84 
tmp
 = 
	`°r°r
 (
S
,"State");

85 
	`ssˇnf
 (
tmp
, "Sèã:\t%c", &
P
->
°©e
);

88 
tmp
 = 
	`°r°r
 (
S
,"Pid:");

89 if(
tmp
Ë
	`ssˇnf
 (tmp,

92 &
P
->
pid
,

93 &
P
->
µid


95 
	`Ârötf
(
°dîr
, "InternalÉrror!\n");

97 
tmp
 = 
	`°r°r
 (
S
,"Uid:");

98 if(
tmp
Ë
	`ssˇnf
 (tmp,

100 &
P
->
ruid
, &P->
euid
, &P->
suid
, &P->
fuid


102 
	`Ârötf
(
°dîr
, "InternalÉrror!\n");

104 
tmp
 = 
	`°r°r
 (
S
,"Gid:");

105 if(
tmp
Ë
	`ssˇnf
 (tmp,

107 &
P
->
rgid
, &P->
egid
, &P->
sgid
, &P->
fgid


109 
	`Ârötf
(
°dîr
, "InternalÉrror!\n");

111 
tmp
 = 
	`°r°r
 (
S
,"VmSize:");

112 if(
tmp
Ë
	`ssˇnf
 (tmp,

120 &
P
->
vm_size
, &P->
vm_lock
, &P->
vm_rss
, &P->
vm_d©a
,

121 &
P
->
vm_°ack
, &P->
vm_exe
, &P->
vm_lib


125 
P
->
vm_size
 = 0;

126 
P
->
vm_lock
 = 0;

127 
P
->
vm_rss
 = 0;

128 
P
->
vm_d©a
 = 0;

129 
P
->
vm_°ack
 = 0;

130 
P
->
vm_exe
 = 0;

131 
P
->
vm_lib
 = 0;

134 
tmp
 = 
	`°r°r
 (
S
,"SigPnd:");

135 if(
tmp
Ë
	`ssˇnf
 (tmp,

136 #ifde‡
SIGNAL_STRING


138 
P
->
sig«l
, P->
blocked
, P->
sigign‹e
, P->
sigˇtch


141 &
P
->
sig«l
, &P->
blocked
, &P->
sigign‹e
, &P->
sigˇtch


144 
	`Ârötf
(
°dîr
, "InternalÉrror!\n");

145 
	}
}

154 
	$°©2¥oc
(* 
S
, 
¥oc_t
* 
P
) {

155 
num
;

156 * 
tmp
 = 
	`°ºchr
(
S
, ')');

157 *
tmp
 = '\0';

159 
P
->
exô_sig«l
 = 
SIGCHLD
;

160 
P
->
¥o˚ss‹
 = 0;

161 
P
->
π¥io
 = -1;

162 
P
->
sched
 = -1;

164 
	`mem£t
(
P
->
cmd
, 0,  P->cmd);

165 
	`ssˇnf
(
S
, "%d (%15c", &
P
->
pid
, P->
cmd
);

166 
num
 = 
	`ssˇnf
(
tmp
 + 2,

180 &
P
->
°©e
,

181 &
P
->
µid
, &P->
pgΩ
, &P->
£ssi⁄
, &P->
ây
, &P->
çgid
,

182 &
P
->
Êags
, &P->
mö_Êt
, &P->
cmö_Êt
, &P->
maj_Êt
, &P->
cmaj_Êt
,

183 &
P
->
utime
, &P->
°ime
, &P->
cutime
, &P->
c°ime
,

184 &
P
->
¥i‹ôy
, &P->
ni˚
, &P->
timeout
, &P->
ô_ªÆ_vÆue
,

185 &
P
->
°¨t_time
,

186 &
P
->
vsize
,

187 &
P
->
rss
,

188 &
P
->
rss_æim
, &P->
°¨t_code
, &P->
íd_code
, &P->
°¨t_°ack
, &P->
k°k_e•
, &P->
k°k_eù
,

190 &
P
->
wch™
, &P->
nsw≠
, &P->
˙sw≠
,

192 &
P
->
exô_sig«l
, &P->
¥o˚ss‹
,

194 &
P
->
π¥io
, &P->
sched


198 i‡(
P
->
ây
 == 0)

199 
P
->
ây
 = -1;

200 
	}
}

202 
	$°©m2¥oc
(* 
s
, 
¥oc_t
* 
P
) {

203 
num
;

204 
num
 = 
	`ssˇnf
(
s
, "%ld %ld %ld %ld %ld %ld %ld",

205 &
P
->
size
, &P->
ªsidít
, &P->
sh¨e
,

206 &
P
->
ås
, &P->
Ãs
, &P->
drs
, &P->
dt
);

208 
	}
}

210 
	$fûe2°r
(c⁄° *
dúe˘‹y
, c⁄° *
wh©
, *
ªt
, 
ˇp
) {

211 
fûíame
[80];

212 
fd
, 
num_ªad
;

214 
	`•rötf
(
fûíame
, "%s/%s", 
dúe˘‹y
, 
wh©
);

215 i‡–(
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
, 0)) == -1 )  -1;

216 i‡–(
num_ªad
 = 
	`ªad
(
fd
, 
ªt
, 
ˇp
 - 1)) <= 0 )Çum_read = -1;

217 
ªt
[
num_ªad
] = 0;

218 
	`˛o£
(
fd
);

219  
num_ªad
;

220 
	}
}

222 ** 
	$fûe2°rvec
(c⁄° * 
dúe˘‹y
, c⁄° * 
wh©
) {

223 
buf
[2048];

224 *
p
, *
rbuf
 = 0, *
ídbuf
, **
q
, **
ªt
;

225 
fd
, 
tŸ
 = 0, 
n
, 
c
, 
íd_of_fûe
 = 0;

226 
Æign
;

228 
	`•rötf
(
buf
, "%s/%s", 
dúe˘‹y
, 
wh©
);

229 i‡–(
fd
 = 
	`›í
(
buf
, 
O_RDONLY
, 0ËË=-1 )  
NULL
;

232 (
n
 = 
	`ªad
(
fd
, 
buf
,  buf - 1)) > 0) {

233 i‡(
n
 < ()( 
buf
 - 1))

234 
íd_of_fûe
 = 1;

235 i‡(
n
 =0 && 
rbuf
 == 0)

236  
NULL
;

237 i‡(
n
 < 0) {

238 i‡(
rbuf
)

239 
	`‰ì
(
rbuf
);

240  
NULL
;

242 i‡(
íd_of_fûe
 && 
buf
[
n
-1])

243 
buf
[
n
++] = '\0';

244 
rbuf
 = 
	`xªÆloc
‘buf, 
tŸ
 + 
n
);

245 
	`mem˝y
(
rbuf
 + 
tŸ
, 
buf
, 
n
);

246 
tŸ
 +
n
;

247 i‡(
íd_of_fûe
)

250 
	`˛o£
(
fd
);

251 i‡(
n
 <0 && !
íd_of_fûe
) {

252 i‡(
rbuf
Ë
	`‰ì
(rbuf);

253  
NULL
;

255 
ídbuf
 = 
rbuf
 + 
tŸ
;

256 
Æign
 = ((*)-1Ë- ((
tŸ
 + (*)-1) & ((*)-1));

257 
c
 = 0, 
p
 = 
rbuf
;Ö < 
ídbuf
;Ö++)

258 i‡(!*
p
)

259 
c
 += (*);

260 
c
 += (*);

262 
rbuf
 = 
	`xªÆloc
‘buf, 
tŸ
 + 
c
 + 
Æign
);

263 
ídbuf
 = 
rbuf
 + 
tŸ
;

264 
q
 = 
ªt
 = (**Ë(
ídbuf
+
Æign
);

265 *
q
++ = 
p
 = 
rbuf
;

266 
ídbuf
--;

267 ++
p
 < 
ídbuf
)

268 i‡(!*
p
)

269 *
q
++ = 
p
+1;

271 *
q
 = 0;

272  
ªt
;

273 
	}
}

282 
	#XöL
(
T
, 
X
, 
L
) ( { \

283 
T
 
x
 = (
X
), *
l
 = (
L
); \

284 *
l
 && *»!
x
)Ü++; \

285 *
l
 =
x
; \

286 } )

	)

289 
	#XöLN
(
T
, 
X
, 
L
, 
N
) ( { \

290 
T
 
x
 = (
X
), *
l
 = (
L
); \

291 
i
 = 0, 
n
 = (
N
); \

292 
i
 < 
n
 && 
l
[i] !
x
) i++; \

293 
i
 < 
n
 && 
l
[i] =
x
; \

294 } )

	)

306 
¥oc_t
* 
	$ªad¥oc
(
PROCTAB
* 
PT
, 
¥oc_t
* 
p
) {

307 
dúe˘
 *
ít
;

308 
°©
 
sb
;

309 
∑th
[32], 
sbuf
[1024];

310 
m©ched
 = 0;

311 #ifde‡
FLASK_LINUX


312 
£curôy_id_t
 
£csid
;

317 
√xt_¥oc
:

320 
	#Êags
 (
PT
->
Êags
)

	)

322 i‡(
Êags
 & 
PROC_PID
) {

323 i‡(!*
PT
->
pids
)

324  
NULL
;

325 
	`•rötf
(
∑th
, "/¥oc/%d", *(
PT
->
pids
)++);

326 
m©ched
 = 1;

328 (
ít
 = 
	`ªaddú
(
PT
->
¥ocfs
)) &&

329 (*
ít
->
d_«me
 < '0' || *ent->d_name > '9'))

331 i‡(!
ít
 || !ít->
d_«me
)

332  
NULL
;

333 
	`•rötf
(
∑th
, "/¥oc/%s", 
ít
->
d_«me
);

335 #ifde‡
FLASK_LINUX


336 i‡–
	`°©_£cuª
(
∑th
, &
sb
, &
£csid
) == -1 )

338 i‡(
	`°©
(
∑th
, &
sb
) == -1)

340 
√xt_¥oc
;

342 i‡((
Êags
 & 
PROC_UID
Ë&& !
	`XöLN
(
uid_t
, 
sb
.
°_uid
, 
PT
->
uids
, PT->
nuid
))

343 
√xt_¥oc
;

345 i‡(!
p
)

346 
p
 = 
	`xˇŒoc
(p,  *p);

347 
p
->
euid
 = 
sb
.
°_uid
;

349 #ifde‡
FLASK_LINUX


350 
p
->
£csid
 = secsid;

353 i‡((
	`fûe2°r
(
∑th
, "°©", 
sbuf
,  sbuf)) == -1)

354 
√xt_¥oc
;

355 
	`°©2¥oc
(
sbuf
, 
p
);

357 i‡(
Êags
 & 
PROC_FILLMEM
) {

358 i‡((
	`fûe2°r
(
∑th
, "°©m", 
sbuf
,  sbuf)) != -1 )

359 
	`°©m2¥oc
(
sbuf
, 
p
);

362 i‡(
Êags
 & 
PROC_FILLSTATUS
) {

363 i‡((
	`fûe2°r
(
∑th
, "°©us", 
sbuf
,  sbuf)) != -1 ){

364 
	`°©us2¥oc
(
sbuf
, 
p
, 0 );

369 i‡(
Êags
 & 
PROC_FILLUSR
){

370 
	`°∫˝y
(
p
->
eu£r
, 
	`u£r_‰om_uid
’->
euid
), Ö->euser);

371 if(
Êags
 & 
PROC_FILLSTATUS
) {

372 
	`°∫˝y
(
p
->
ru£r
, 
	`u£r_‰om_uid
’->
ruid
), Ö->ruser);

373 
	`°∫˝y
(
p
->
su£r
, 
	`u£r_‰om_uid
’->
suid
), Ö->suser);

374 
	`°∫˝y
(
p
->
fu£r
, 
	`u£r_‰om_uid
’->
fuid
), Ö->fuser);

379 i‡(
Êags
 & 
PROC_FILLGRP
){

380 
	`°∫˝y
(
p
->
egroup
, 
	`group_‰om_gid
’->
egid
), Ö->egroup);

381 if(
Êags
 & 
PROC_FILLSTATUS
) {

382 
	`°∫˝y
(
p
->
rgroup
, 
	`group_‰om_gid
’->
rgid
), Ö->rgroup);

383 
	`°∫˝y
(
p
->
sgroup
, 
	`group_‰om_gid
’->
sgid
), Ö->sgroup);

384 
	`°∫˝y
(
p
->
fgroup
, 
	`group_‰om_gid
’->
fgid
), Ö->fgroup);

388 i‡((
Êags
 & 
PROC_FILLCOM
Ë|| (Êag†& 
PROC_FILLARG
))

389 
p
->
cmdlöe
 = 
	`fûe2°rvec
(
∑th
, "cmdline");

391 
p
->
cmdlöe
 = 
NULL
;

393 i‡(
Êags
 & 
PROC_FILLENV
)

394 
p
->
ívú⁄
 = 
	`fûe2°rvec
(
∑th
, "environ");

396 
p
->
ívú⁄
 = 
NULL
;

398 i‡(
p
->
°©e
 == 'Z')

399 
	`°∫ˇt
(
p
->
cmd
," <defunct>", Ö->cmd);

401  
p
;

402 
	}
}

403 #unde‡
Êags


415 
¥oc_t
* 
	$ps_ªad¥oc
(
PROCTAB
* 
PT
, 
¥oc_t
* 
p
) {

416 
dúe˘
 *
ít
;

417 
°©
 
sb
;

418 
∑th
[32], 
sbuf
[1024];

419 #ifde‡
FLASK_LINUX


420 
£curôy_id_t
 
£csid
;

425 
√xt_¥oc
:

428 
	#Êags
 (
PT
->
Êags
)

	)

430 (
ít
 = 
	`ªaddú
(
PT
->
¥ocfs
)) &&

431 (*
ít
->
d_«me
 < '0' || *ent->d_name > '9'))

433 i‡(!
ít
 || !ít->
d_«me
)

434  
NULL
;

435 
	`•rötf
(
∑th
, "/¥oc/%s", 
ít
->
d_«me
);

437 #ifde‡
FLASK_LINUX


438 i‡(
	`°©_£cuª
(
∑th
, &
sb
, &
£csid
) == -1)

440 i‡(
	`°©
(
∑th
, &
sb
) == -1)

442 
√xt_¥oc
;

444 i‡(!
p
)

445 
p
 = 
	`xˇŒoc
(p,  *p);

446 
p
->
euid
 = 
sb
.
°_uid
;

447 #ifde‡
FLASK_LINUX


448 
p
->
£csid
 = secsid;

451 i‡((
	`fûe2°r
(
∑th
, "°©", 
sbuf
,  sbuf)) == -1)

452 
√xt_¥oc
;

453 
	`°©2¥oc
(
sbuf
, 
p
);

455 i‡(
Êags
 & 
PROC_FILLMEM
) {

456 i‡((
	`fûe2°r
(
∑th
, "°©m", 
sbuf
,  sbuf)) != -1 )

457 
	`°©m2¥oc
(
sbuf
, 
p
);

461 i‡((
	`fûe2°r
(
∑th
, "°©us", 
sbuf
,  sbuf)) != -1 ){

462 
	`°©us2¥oc
(
sbuf
, 
p
, 0 );

467 i‡(
Êags
 & 
PROC_FILLUSR
){

468 
	`°∫˝y
(
p
->
eu£r
, 
	`u£r_‰om_uid
’->
euid
), Ö->euser);

470 
	`°∫˝y
(
p
->
ru£r
, 
	`u£r_‰om_uid
’->
ruid
), Ö->ruser);

471 
	`°∫˝y
(
p
->
su£r
, 
	`u£r_‰om_uid
’->
suid
), Ö->suser);

472 
	`°∫˝y
(
p
->
fu£r
, 
	`u£r_‰om_uid
’->
fuid
), Ö->fuser);

477 i‡(
Êags
 & 
PROC_FILLGRP
){

478 
	`°∫˝y
(
p
->
egroup
, 
	`group_‰om_gid
’->
egid
), Ö->egroup);

480 
	`°∫˝y
(
p
->
rgroup
, 
	`group_‰om_gid
’->
rgid
), Ö->rgroup);

481 
	`°∫˝y
(
p
->
sgroup
, 
	`group_‰om_gid
’->
sgid
), Ö->sgroup);

482 
	`°∫˝y
(
p
->
fgroup
, 
	`group_‰om_gid
’->
fgid
), Ö->fgroup);

486 i‡((
Êags
 & 
PROC_FILLCOM
Ë|| (Êag†& 
PROC_FILLARG
))

487 
p
->
cmdlöe
 = 
	`fûe2°rvec
(
∑th
, "cmdline");

489 
p
->
cmdlöe
 = 
NULL
;

491 i‡(
Êags
 & 
PROC_FILLENV
)

492 
p
->
ívú⁄
 = 
	`fûe2°rvec
(
∑th
, "environ");

494 
p
->
ívú⁄
 = 
NULL
;

496 i‡(
p
->
°©e
 == 'Z')

497 
	`°∫ˇt
(
p
->
cmd
," <defunct>", Ö->cmd);

499  
p
;

500 
	}
}

501 #unde‡
Êags


504 
	$look_up_our_£lf
(
¥oc_t
 *
p
) {

505 
∑th
[32], 
sbuf
[1024];

506 
	`•rötf
(
∑th
, "/¥oc/%d", 
	`gëpid
());

507 
	`fûe2°r
(
∑th
, "°©", 
sbuf
,  sbuf);

508 
	`°©2¥oc
(
sbuf
, 
p
);

509 
	`fûe2°r
(
∑th
, "°©m", 
sbuf
,  sbuf);

510 
	`°©m2¥oc
(
sbuf
, 
p
);

511 
	`fûe2°r
(
∑th
, "°©us", 
sbuf
,  sbuf);

512 
	`°©us2¥oc
(
sbuf
, 
p
, 0 );

513 
	}
}

521 
¥oc_t
** 
	$ªad¥o˘ab
(
Êags
, ...) {

522 
PROCTAB
* 
PT
 = 
NULL
;

523 
¥oc_t
** 
èb
 = 
NULL
;

524 
n
 = 0;

525 
va_li°
 
≠
;

527 
	`va_°¨t
(
≠
, 
Êags
);

528 i‡(
Êags
 & 
PROC_UID
) {

532 
uid_t
* 
u
;

533 
i
;

535 
u
 = 
	`va_¨g
(
≠
, 
uid_t
*);

536 
i
 = 
	`va_¨g
(
≠
, );

537 
PT
 = 
	`›í¥oc
(
Êags
, 
u
, 
i
);

539 i‡(
Êags
 & 
PROC_PID
)

540 
PT
 = 
	`›í¥oc
(
Êags
, 
	`va_¨g
(
≠
, *));

542 
PT
 = 
	`›í¥oc
(
Êags
);

543 
	`va_íd
(
≠
);

545 
èb
 = 
	`xªÆloc
—ab, (
n
+1)*(
¥oc_t
*));

546 
èb
[
n
] = 
	`ªad¥oc
(
PT
, 
NULL
);

547 } 
èb
[
n
++]);

548 
	`˛o£¥oc
(
PT
);

549  
èb
;

550 
	}
}

	@proc/readproc.h

1 #i‚de‡
PROCPS_PROC_READPROC_H


2 
	#PROCPS_PROC_READPROC_H


	)

13 
	#SIGNAL_STRING


	)

15 #ifde‡
FLASK_LINUX


16 
	~<fs_£cuª.h
>

34 
	s¥oc_t
 {

37 
	mpid
,

38 
	mµid
;

40 
	mp˝u
;

42 
	m°©e
,

43 
	m∑d_1
,

44 
	m∑d_2
,

45 
	m∑d_3
;

48 
	mutime
,

49 
	m°ime
,

51 
	mcutime
,

52 
	mc°ime
,

53 
	m°¨t_time
;

54 #ifde‡
SIGNAL_STRING


57 
	msig«l
[18],

58 
	mblocked
[18],

59 
	msigign‹e
[18],

60 
	msigˇtch
[18];

64 
	msig«l
,

65 
	mblocked
,

66 
	msigign‹e
,

67 
	msigˇtch
;

70 
	m¥i‹ôy
,

71 
	mtimeout
,

72 
	mni˚
,

73 
	mrss
,

74 
	mô_ªÆ_vÆue
,

76 
	msize
,

77 
	mªsidít
,

78 
	msh¨e
,

79 
	mås
,

80 
	mÃs
,

81 
	mdrs
,

82 
	mdt
;

84 
	mvm_size
,

85 
	mvm_lock
,

86 
	mvm_rss
,

87 
	mvm_d©a
,

88 
	mvm_°ack
,

89 
	mvm_exe
,

90 
	mvm_lib
,

91 
	mπ¥io
,

92 
	msched
,

93 
	mvsize
,

94 
	mrss_æim
,

95 
	mÊags
,

96 
	mmö_Êt
,

97 
	mmaj_Êt
,

98 
	mcmö_Êt
,

99 
	mcmaj_Êt
,

100 
	mnsw≠
,

101 
	m˙sw≠
,

102 
	m°¨t_code
,

103 
	míd_code
,

104 
	m°¨t_°ack
,

105 
	mk°k_e•
,

106 
	mk°k_eù
,

107 
	mwch™
;

109 **
	mívú⁄
,

110 **
	mcmdlöe
;

113 
	mru£r
[16],

114 
	meu£r
[16],

115 
	msu£r
[16],

116 
	mfu£r
[16],

117 
	mrgroup
[16],

118 
	megroup
[16],

119 
	msgroup
[16],

120 
	mfgroup
[16],

121 
	mcmd
[16];

123 
	mruid
, 
	mrgid
,

124 
	meuid
, 
	megid
,

125 
	msuid
, 
	msgid
,

126 
	mfuid
, 
	mfgid
,

127 
	mpgΩ
,

128 
	m£ssi⁄
,

129 
	mây
,

130 
	mçgid
,

131 
	mexô_sig«l
,

132 
	m¥o˚ss‹
;

133 #ifde‡
FLASK_LINUX


134 
£curôy_id_t
 
	msid
;

136 } 
	t¥oc_t
;

142 
	~<sys/ty≥s.h
>

143 
	~<dúít.h
>

144 
	~<uni°d.h
>

145 
	sPROCTAB
 {

146 
DIR
* 
	m¥ocfs
;

147 
	mÊags
;

148 
pid_t
* 
	mpids
;

149 
uid_t
* 
	muids
;

150 
	mnuid
;

151 #ifde‡
FLASK_LINUX


152 
£curôy_id_t
* 
	msids
;

154 } 
	tPROCTAB
;

158 
PROCTAB
* 
›í¥oc
(
Êags
, ... );

166 
¥oc_t
** 
ªad¥o˘ab
(
Êags
, ... );

170 
˛o£¥oc
(
PROCTAB
* 
PT
);

174 
¥oc_t
* 
ªad¥oc
(
PROCTAB
* 
PT
,Öroc_t* 
ªtu∫_buf
);

175 
¥oc_t
* 
ps_ªad¥oc
(
PROCTAB
* 
PT
,Öroc_t* 
ªtu∫_buf
);

177 
look_up_our_£lf
(
¥oc_t
 *
p
);

181 
‰ì¥oc
(
¥oc_t
* 
p
);

197 
	#PROC_FILLMEM
 0x0001

	)

198 
	#PROC_FILLCOM
 0x0002

	)

199 
	#PROC_FILLENV
 0x0004

	)

200 
	#PROC_FILLUSR
 0x0008

	)

201 
	#PROC_FILLGRP
 0x0010

	)

202 
	#PROC_FILLSTATUS
 0x0020

	)

203 
	#PROC_FILLSTAT
 0x0040

	)

204 
	#PROC_FILLWCHAN
 0x0080

	)

205 
	#PROC_FILLARG
 0x0100

	)

207 
	#PROC_FILLBUG
 0x0ff‡

	)

208 
	#PROC_FILLANY
 0x0000

	)

211 
	#PROC_PID
 0x1000

	)

212 
	#PROC_UID
 0x4000

	)

	@proc/sig.c

11 
	~<sig«l.h
>

12 
	~<°rög.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~"sig.h
"

32 #i‚de‡
SIGSYS


33 #w¨nög 
Sènd¨ds
 
ªquúe
 
th©
 <
sig«l
.
h
> 
deföe
 
SIGSYS


34 
	#SIGSYS
 
SIGUNUSED


	)

38 #ifde‡
SIGEMT


39 #unde‡
SIGSTKFLT


42 #i‚de‡
SIGRTMIN


43 #w¨nög 
Sènd¨ds
 
ªquúe
 
th©
 <
sig«l
.
h
> 
deföe
 
SIGRTMIN
; 
assumög
 32

44 
	#SIGRTMIN
 32

	)

48 #i‚de‡
SIGPWR


49 #w¨nög 
Your
 
hódî
 
fûes
 
œck
 
SIGPWR
. (
assumög
 
ô
 
is
 
numbî
 29)

50 
	#SIGPWR
 29

	)

53 
	sm≠°ru˘
 {

54 c⁄° *
	m«me
;

55 
	mnum
;

56 } 
	tm≠°ru˘
;

59 c⁄° 
m≠°ru˘
 
	gsigèbÀ
[] = {

60 {"ABRT", 
SIGABRT
},

61 {"ALRM", 
SIGALRM
},

62 {"BUS", 
SIGBUS
},

63 {"CHLD", 
SIGCHLD
},

64 {"CONT", 
SIGCONT
},

65 #ifde‡
SIGEMT


66 {"EMT", 
SIGEMT
},

68 {"FPE", 
SIGFPE
},

69 {"HUP", 
SIGHUP
},

70 {"ILL", 
SIGILL
},

71 {"INT", 
SIGINT
},

72 {"KILL", 
SIGKILL
},

73 {"PIPE", 
SIGPIPE
},

74 {"POLL", 
SIGPOLL
},

75 {"PROF", 
SIGPROF
},

76 {"PWR", 
SIGPWR
},

77 {"QUIT", 
SIGQUIT
},

78 {"SEGV", 
SIGSEGV
},

79 #ifde‡
SIGSTKFLT


80 {"STKFLT", 
SIGSTKFLT
},

82 {"STOP", 
SIGSTOP
},

83 {"SYS", 
SIGSYS
},

84 {"TERM", 
SIGTERM
},

85 {"TRAP", 
SIGTRAP
},

86 {"TSTP", 
SIGTSTP
},

87 {"TTIN", 
SIGTTIN
},

88 {"TTOU", 
SIGTTOU
},

89 {"URG", 
SIGURG
},

90 {"USR1", 
SIGUSR1
},

91 {"USR2", 
SIGUSR2
},

92 {"VTALRM", 
SIGVTALRM
},

93 {"WINCH", 
SIGWINCH
},

94 {"XCPU", 
SIGXCPU
},

95 {"XFSZ", 
SIGXFSZ
}

98 c⁄° 
	gnumbî_of_sig«ls
 = (
sigèbÀ
)/(
m≠°ru˘
);

100 
	$com∑ª_sig«l_«mes
(c⁄° *
a
, c⁄° *
b
){

101  
	`°rˇ£cmp
–((c⁄° 
m≠°ru˘
*)
a
)->
«me
, ((c⁄° m≠°ru˘*)
b
)->name );

102 
	}
}

105 
	$sig«l_«me_to_numbî
(*
«me
){

106 c⁄° 
m≠°ru˘
 *
±r
;

107 
m≠°ru˘
 
ms
;

108 
vÆ
;

109 *
ídp
;

110 
off£t
;

113 if(!
	`°∫ˇ£cmp
(
«me
,"SIG",3))Çame += 3;

115 if(!
	`°rˇ£cmp
(
«me
,"CLD")Ë 
SIGCHLD
;

116 if(!
	`°rˇ£cmp
(
«me
,"IO")Ë 
SIGPOLL
;

117 if(!
	`°rˇ£cmp
(
«me
,"IOT")Ë 
SIGABRT
;

120 
ms
.
«me
 =Çame;

121 
±r
 = 
	`b£¨ch
(&
ms
, 
sigèbÀ
, 
numbî_of_sig«ls
,

122 (
m≠°ru˘
), 
com∑ª_sig«l_«mes


124 if(
±r
ËÖå->
num
;

126 if(!
	`°rˇ£cmp
(
«me
,"RTMIN")Ë 
SIGRTMIN
;

127 if(!
	`°rˇ£cmp
(
«me
,"EXIT"))  0;

128 if(!
	`°rˇ£cmp
(
«me
,"NULL"))  0;

130 
off£t
 = 0;

131 if(!
	`°∫ˇ£cmp
(
«me
,"RTMIN+",6)){

132 
«me
 += 6;

133 
off£t
 = 
SIGRTMIN
;

137 
vÆ
 = 
	`°πﬁ
(
«me
,&
ídp
,10);

138 if(*
ídp
 ||Éndp==
«me
)  -1;

139 if(
vÆ
+
SIGRTMIN
>127)  -1;

140  
vÆ
+
off£t
;

141 
	}
}

143 c⁄° *
	$sig«l_numbî_to_«me
(
signo
){

144 
buf
[32];

145 
n
 = 
numbî_of_sig«ls
;

146 
signo
 &= 0x7f;

147 
n
--){

148 if(
sigèbÀ
[
n
].
num
==
signo
Ë sigèbÀ[n].
«me
;

150 if(
signo
 =
SIGRTMIN
)  "RTMIN";

151 if(
signo
Ë
	`•rötf
(
buf
, "RTMIN+%d", signo-
SIGRTMIN
);

152 
	`°r˝y
(
buf
,"0");

153  
buf
;

154 
	}
}

156 
	$¥öt_giví_sig«ls
(
¨gc
, *
¨gv
[], 
max_löe
){

157 
buf
[1280];

158 
ªt
 = 0;

159 
∂a˚
 = 0;

160 
amt
;

161 if(
¨gc
 > 128)  1;

162 
¨gc
--){

163 
tmpbuf
[16];

164 *
txt
;

165 
txt
 = *
¨gv
;

166 if(*
txt
 >= '0' && *txt <= '9'){

167 
vÆ
;

168 *
ídp
;

169 
vÆ
 = 
	`°πﬁ
(
txt
,&
ídp
,10);

170 if(*
ídp
){

171 
	`Ârötf
(
°dîr
, "Sig«»\"%s\"ÇŸ known.\n", 
txt
);

172 
ªt
 = 1;

173 
íd
;

175 
amt
 = 
	`•rötf
(
tmpbuf
, "%s", 
	`sig«l_numbî_to_«me
(
vÆ
));

177 
¢o
;

178 
¢o
 = 
	`sig«l_«me_to_numbî
(
txt
);

179 if(
¢o
 == -1){

180 
	`Ârötf
(
°dîr
, "Sig«»\"%s\"ÇŸ known.\n", 
txt
);

181 
ªt
 = 1;

182 
íd
;

184 
amt
 = 
	`•rötf
(
tmpbuf
, "%d", 
¢o
);

187 if(!
∂a˚
){

188 
	`°r˝y
(
buf
,
tmpbuf
);

189 
∂a˚
 = 
amt
;

190 
íd
;

192 if(
amt
+
∂a˚
+1 > 
max_löe
){

193 
	`¥ötf
("%s\n", 
buf
);

194 
	`°r˝y
(
buf
,
tmpbuf
);

195 
∂a˚
 = 
amt
;

196 
íd
;

198 
	`•rötf
(
buf
+
∂a˚
, " %s", 
tmpbuf
);

199 
∂a˚
 +
amt
+1;

200 
íd
:

201 
¨gv
++;

203 if(
∂a˚
Ë
	`¥ötf
("%s\n", 
buf
);

204  
ªt
;

205 
	}
}

207 
	$¥ëty_¥öt_sig«ls
(){

208 
i
 = 0;

209 ++
i
 <
numbî_of_sig«ls
){

210 
n
;

211 
n
 = 
	`¥ötf
("%2d %s", 
i
, 
	`sig«l_numbî_to_«me
(i));

212 if(
i
%7Ë
	`¥ötf
(" \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" + 
n
);

213 
	`¥ötf
("\n");

215 if((
i
-1)%7Ë
	`¥ötf
("\n");

216 
	}
}

218 
	$unix_¥öt_sig«ls
(){

219 
pos
 = 0;

220 
i
 = 0;

221 ++
i
 <
numbî_of_sig«ls
){

222 if(
i
-1Ë
	`¥ötf
("%c", (
pos
>73)?(pos=0,'\n'):(pos++,' ') );

223 
pos
 +
	`¥ötf
("%s", 
	`sig«l_numbî_to_«me
(
i
));

225 
	`¥ötf
("\n");

226 
	}
}

229 
	$öô_sig«l_li°
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

230 
	$öô_sig«l_li°
(){

231 if(
numbî_of_sig«ls
 != 31){

232 
	`Ârötf
(
°dîr
, "WARNING: %d sig«l†--ádju°ándÑecompûe.\n", 
numbî_of_sig«ls
);

235 
	}
}

	@proc/sig.h

13 
sig«l_«me_to_numbî
(*
«me
);

15 
¥öt_giví_sig«ls
(
¨gc
, *
¨gv
[], 
max_löe
);

17 
¥ëty_¥öt_sig«ls
();

19 
unix_¥öt_sig«ls
();

	@proc/status.c

10 
	~"¥o˝s.h
"

11 
	~"ªad¥oc.h
"

12 
	~"°©us.h
"

14 * 
	$°©us
(
¥oc_t
* 
èsk
) {

15 
buf
[4] = " ";

17 
buf
[0] = 
èsk
->
°©e
;

18 i‡(
èsk
->
rss
 =0 &&Åask->
°©e
 != 'Z')

19 
buf
[1] = 'W';

21 
buf
[1] = ' ';

22 i‡(
èsk
->
ni˚
 < 0)

23 
buf
[2] = '<';

24 i‡(
èsk
->
ni˚
 > 0)

25 
buf
[2] = 'N';

27 
buf
[2] = ' ';

29 (
buf
);

30 
	}
}

	@proc/status.h

1 #i‚de‡
__PROC_STATUS_H


2 
	#__PROC_STATUS_H


	)

3 *
°©us
(
¥oc_t
* 
èsk
);

	@proc/sysinfo.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<˘y≥.h
>

15 
	~<loˇÀ.h
>

17 
	~<uni°d.h
>

18 
	~<f˙é.h
>

19 
	~"vîsi⁄.h
"

20 
	~"sysöfo.h
"

22 #i‚de‡
HZ


23 
	~<√töë/ö.h
>

26 
	gsmp_num_˝us
;

28 
	#BAD_OPEN_MESSAGE
 \

32 " I¿thêmó¡ime, mou¡ /¥o¯/¥o¯-à¥oc\n"

	)

34 
	#STAT_FILE
 "/¥oc/°©"

	)

35 
	g°©_fd
 = -1;

36 
	#UPTIME_FILE
 "/¥oc/u±ime"

	)

37 
	gu±ime_fd
 = -1;

38 
	#LOADAVG_FILE
 "/¥oc/lﬂdavg"

	)

39 
	glﬂdavg_fd
 = -1;

40 
	#MEMINFO_FILE
 "/¥oc/memöfo"

	)

41 
	gmemöfo_fd
 = -1;

42 
	#VMINFO_FILE
 "/¥oc/vm°©"

	)

43 
	gvmöfo_fd
 = -1;

45 
	gbuf
[1024];

51 
	#FILE_TO_BUF
(
fûíame
, 
fd
) do{ \

52 
loˇl_n
; \

53 i‡(
fd
 =-1 && (fd = 
	`›í
(
fûíame
, 
O_RDONLY
)) == -1) { \

54 
	`Ârötf
(
°dîr
, 
BAD_OPEN_MESSAGE
); \

55 
	`fÊush
(
NULL
); \

56 
	`_exô
(102); \

58 
	`l£ek
(
fd
, 0L, 
SEEK_SET
); \

59 i‡((
loˇl_n
 = 
	`ªad
(
fd
, 
buf
,  buf - 1)) < 0) { \

60 
	`≥º‹
(
fûíame
); \

61 
	`fÊush
(
NULL
); \

62 
	`_exô
(103); \

64 
buf
[
loˇl_n
] = '\0'; \

65 }0)

	)

68 
	#SET_IF_DESIRED
(
x
,
y
Ëdo{ if(xË*(xË(y); }0)

	)

72 
	$u±ime
(*
u±ime_£cs
, *
idÀ_£cs
) {

73 
up
=0, 
idÀ
=0;

74 *
ßvñoˇÀ
;

76 
	`FILE_TO_BUF
(
UPTIME_FILE
,
u±ime_fd
);

77 
ßvñoˇÀ
 = 
	`£éoˇÀ
(
LC_NUMERIC
, 
NULL
);

78 
	`£éoˇÀ
(
LC_NUMERIC
,"C");

79 i‡(
	`ssˇnf
(
buf
, "%l‡%lf", &
up
, &
idÀ
) < 2) {

80 
	`£éoˇÀ
(
LC_NUMERIC
,
ßvñoˇÀ
);

81 
	`Ârötf
(
°dîr
, "bad d©®ö " 
UPTIME_FILE
 "\n");

84 
	`£éoˇÀ
(
LC_NUMERIC
,
ßvñoˇÀ
);

85 
	`SET_IF_DESIRED
(
u±ime_£cs
, 
up
);

86 
	`SET_IF_DESIRED
(
idÀ_£cs
, 
idÀ
);

87  
up
;

88 
	}
}

121 
	gHîtz
;

123 
	$ﬁd_Hîtz_hack
(){

124 
u£r_j
, 
ni˚_j
, 
sys_j
, 
Ÿhî_j
;

125 
up_1
, 
up_2
, 
£c⁄ds
;

126 
jiffõs
;

127 
h
;

128 *
ßvñoˇÀ
;

130 
ßvñoˇÀ
 = 
	`£éoˇÀ
(
LC_NUMERIC
, 
NULL
);

131 
	`£éoˇÀ
(
LC_NUMERIC
, "C");

133 
	`FILE_TO_BUF
(
UPTIME_FILE
,
u±ime_fd
); 
	`ssˇnf
(
buf
, "%lf", &
up_1
);

135 
	`FILE_TO_BUF
(
STAT_FILE
,
°©_fd
);

136 
	`ssˇnf
(
buf
, "˝u %Lu %Lu %Lu %Lu", &
u£r_j
, &
ni˚_j
, &
sys_j
, &
Ÿhî_j
);

137 
	`FILE_TO_BUF
(
UPTIME_FILE
,
u±ime_fd
); 
	`ssˇnf
(
buf
, "%lf", &
up_2
);

139 } ()–(
up_2
-
up_1
)*1000.0/up_1 ));

140 
	`£éoˇÀ
(
LC_NUMERIC
, 
ßvñoˇÀ
);

141 
jiffõs
 = 
u£r_j
 + 
ni˚_j
 + 
sys_j
 + 
Ÿhî_j
;

142 
£c⁄ds
 = (
up_1
 + 
up_2
) / 2;

143 
h
 = ()–()
jiffõs
/
£c⁄ds
/
smp_num_˝us
 );

145 
h
){

146 9 ... 11 : 
Hîtz
 = 10; ;

147 18 ... 22 : 
Hîtz
 = 20; ;

148 30 ... 34 : 
Hîtz
 = 32; ;

149 48 ... 52 : 
Hîtz
 = 50; ;

150 58 ... 61 : 
Hîtz
 = 60; ;

151 62 ... 65 : 
Hîtz
 = 64; ;

152 95 ... 105 : 
Hîtz
 = 100; ;

153 124 ... 132 : 
Hîtz
 = 128; ;

154 195 ... 204 : 
Hîtz
 = 200; ;

155 253 ... 260 : 
Hîtz
 = 256; ;

156 393 ... 408 : 
Hîtz
 = 400; ;

157 790 ... 808 : 
Hîtz
 = 800; ;

158 990 ... 1010 : 
Hîtz
 = 1000; ;

159 1015 ... 1035 : 
Hîtz
 = 1024; ;

160 1180 ... 1220 : 
Hîtz
 = 1200; ;

162 #ifde‡
HZ


163 
Hîtz
 = ()
HZ
;

166 
Hîtz
 = (()==(Ë|| 
	`ht⁄s
(999)==999) ? 100UL : 1024UL;

168 
	`Ârötf
(
°dîr
, "Unknow¿HZ vÆue! (%dËAssumê%Ld.\n", 
h
, 
Hîtz
);

170 
	}
}

172 #i‚de‡
AT_CLKTCK


173 
	#AT_CLKTCK
 17

	)

176 ** 
ívú⁄
;

179 
	$föd_ñf_nŸe
(
födme
){

180 *
ï
 = (*)
ívú⁄
;

181 *
ï
++);

182 *
ï
){

183 if(
ï
[0]==
födme
) Ép[1];

184 
ï
+=2;

187 
	}
}

189 
	$öô_lib¥oc
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

190 
	$öô_lib¥oc
(){

194 
smp_num_˝us
 = 
	`sysc⁄f
(
_SC_NPROCESSORS_CONF
);

195 if(
smp_num_˝us
<1) smp_num_cpus=1;

197 if(
löux_vîsi⁄_code
 > 
	`LINUX_VERSION
(2, 4, 0)){

198 
Hîtz
 = 
	`föd_ñf_nŸe
(
AT_CLKTCK
);

199 if(
Hîtz
!=42) ;

200 
	`Ârötf
(
°dîr
, "2.4 kernel w/o ELFÇotes? --ÑeportÅoálbert@users.sf.net\n");

202 
	`ﬁd_Hîtz_hack
();

203 
	}
}

211 #i‚de‡
NAN


212 
	#NAN
 (-0.0)

	)

214 
	#JT
 

	)

215 
	$five_˝u_numbîs
(*
uªt
, *
ƒë
, *
§ë
, *
úë
, *
wªt
){

216 
tmp_u
, 
tmp_n
, 
tmp_s
, 
tmp_i
, 
tmp_w
;

217 
sˇÀ
;

218 
JT
 
ﬁd_u
, 
ﬁd_n
, 
ﬁd_s
, 
ﬁd_i
, 
ﬁd_w
;

219 
JT
 
√w_u
, 
√w_n
, 
√w_s
, 
√w_i
, 
√w_w
;

220 
JT
 
ticks_∑°
;

222 
tmp_w
 = 0.0;

223 
√w_w
 = 0;

225 
	`FILE_TO_BUF
(
STAT_FILE
,
°©_fd
);

226 
	`ssˇnf
(
buf
, "˝u %Lu %Lu %Lu %Lu %Lu", &
√w_u
, &
√w_n
, &
√w_s
, &
√w_i
, &
√w_w
);

227 
ticks_∑°
 = (
√w_u
+
√w_n
+
√w_s
+
√w_i
+
√w_w
)-(
ﬁd_u
+
ﬁd_n
+
ﬁd_s
+
ﬁd_i
+
ﬁd_w
);

228 if(
ticks_∑°
){

229 
sˇÀ
 = 100.0 / ()
ticks_∑°
;

230 
tmp_u
 = ( ()
√w_u
 - ()
ﬁd_u
 ) * 
sˇÀ
;

231 
tmp_n
 = ( ()
√w_n
 - ()
ﬁd_n
 ) * 
sˇÀ
;

232 
tmp_s
 = ( ()
√w_s
 - ()
ﬁd_s
 ) * 
sˇÀ
;

233 
tmp_i
 = ( ()
√w_i
 - ()
ﬁd_i
 ) * 
sˇÀ
;

234 
tmp_w
 = ( ()
√w_w
 - ()
ﬁd_w
 ) * 
sˇÀ
;

236 
tmp_u
 = 
NAN
;

237 
tmp_n
 = 
NAN
;

238 
tmp_s
 = 
NAN
;

239 
tmp_i
 = 
NAN
;

240 
tmp_w
 = 
NAN
;

242 
	`SET_IF_DESIRED
(
uªt
, 
tmp_u
);

243 
	`SET_IF_DESIRED
(
ƒë
, 
tmp_n
);

244 
	`SET_IF_DESIRED
(
§ë
, 
tmp_s
);

245 
	`SET_IF_DESIRED
(
úë
, 
tmp_i
);

246 
	`SET_IF_DESIRED
(
wªt
, 
tmp_w
);

247 
ﬁd_u
=
√w_u
;

248 
ﬁd_n
=
√w_n
;

249 
ﬁd_s
=
√w_s
;

250 
ﬁd_i
=
√w_i
;

251 
ﬁd_w
=
√w_w
;

252 
	}
}

253 #unde‡
JT


256 
	$lﬂdavg
(*
av1
, *
av5
, *
av15
) {

257 
avg_1
=0, 
avg_5
=0, 
avg_15
=0;

258 *
ßvñoˇÀ
;

260 
	`FILE_TO_BUF
(
LOADAVG_FILE
,
lﬂdavg_fd
);

261 
ßvñoˇÀ
 = 
	`£éoˇÀ
(
LC_NUMERIC
, 
NULL
);

262 
	`£éoˇÀ
(
LC_NUMERIC
, "C");

263 i‡(
	`ssˇnf
(
buf
, "%l‡%l‡%lf", &
avg_1
, &
avg_5
, &
avg_15
) < 3) {

264 
	`Ârötf
(
°dîr
, "bad d©®ö " 
LOADAVG_FILE
 "\n");

265 
	`exô
(1);

267 
	`£éoˇÀ
(
LC_NUMERIC
, 
ßvñoˇÀ
);

268 
	`SET_IF_DESIRED
(
av1
, 
avg_1
);

269 
	`SET_IF_DESIRED
(
av5
, 
avg_5
);

270 
	`SET_IF_DESIRED
(
av15
, 
avg_15
);

271 
	}
}

285 
	smem_èbÀ_°ru˘
 {

286 c⁄° *
	m«me
;

287 *
	m¶Ÿ
;

288 } 
	tmem_èbÀ_°ru˘
;

290 
	$com∑ª_mem_èbÀ_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

291  
	`°rcmp
(((c⁄° 
mem_èbÀ_°ru˘
*)
a
)->
«me
,((c⁄° mem_èbÀ_°ru˘*)
b
)->name);

292 
	}
}

322 
	gkb_maö_sh¨ed
;

324 
	gkb_maö_buf„rs
;

325 
	gkb_maö_ˇched
;

326 
	gkb_maö_‰ì
;

327 
	gkb_maö_tŸÆ
;

328 
	gkb_sw≠_‰ì
;

329 
	gkb_sw≠_tŸÆ
;

331 
	gkb_high_‰ì
;

332 
	gkb_high_tŸÆ
;

333 
	gkb_low_‰ì
;

334 
	gkb_low_tŸÆ
;

336 
	gkb_a˘ive
;

337 
	gkb_öa˘_dúty
;

338 
	gkb_öa˘_˛ón
;

339 
	gkb_öa˘_èrgë
;

340 
	gkb_sw≠_ˇched
;

342 
	gkb_sw≠_u£d
;

343 
	gkb_maö_u£d
;

345 
	gkb_wrôeback
;

346 
	gkb_¶ab
;

347 
	gƒ_ªvî£m≠s
;

348 
	gkb_commôãd_as
;

349 
	gkb_dúty
;

350 
	gkb_öa˘ive
;

351 
	gkb_m≠≥d
;

352 
	gkb_∑gëabÀs
;

354 
	$memöfo
(){

355 
«mebuf
[16];

356 
mem_èbÀ_°ru˘
 
födme
 = { 
«mebuf
, 
NULL
};

357 
mem_èbÀ_°ru˘
 *
found
;

358 *
hód
;

359 *
èû
;

360 c⁄° 
mem_èbÀ_°ru˘
 
mem_èbÀ
[] = {

361 {"A˘ive", &
kb_a˘ive
},

362 {"Buf„rs", &
kb_maö_buf„rs
},

363 {"Cached", &
kb_maö_ˇched
},

364 {"Commôãd_AS", &
kb_commôãd_as
},

365 {"Dúty", &
kb_dúty
},

366 {"HighFªe", &
kb_high_‰ì
},

367 {"HighTŸÆ", &
kb_high_tŸÆ
},

368 {"I«˘_˛ón", &
kb_öa˘_˛ón
},

369 {"I«˘_dúty", &
kb_öa˘_dúty
},

370 {"I«˘_èrgë", &
kb_öa˘_èrgë
},

371 {"I«˘ive", &
kb_öa˘ive
},

372 {"LowFªe", &
kb_low_‰ì
},

373 {"LowTŸÆ", &
kb_low_tŸÆ
},

374 {"M≠≥d", &
kb_m≠≥d
},

375 {"MemFªe", &
kb_maö_‰ì
},

376 {"MemSh¨ed", &
kb_maö_sh¨ed
},

377 {"MemTŸÆ", &
kb_maö_tŸÆ
},

378 {"PageTabÀs", &
kb_∑gëabÀs
},

379 {"Revî£M≠s", &
ƒ_ªvî£m≠s
},

380 {"Sœb", &
kb_¶ab
},

381 {"Sw≠Cached", &
kb_sw≠_ˇched
},

382 {"Sw≠Fªe", &
kb_sw≠_‰ì
},

383 {"Sw≠TŸÆ", &
kb_sw≠_tŸÆ
},

384 {"Wrôeback", &
kb_wrôeback
}

386 c⁄° 
mem_èbÀ_cou¡
 = (
mem_èbÀ
)/(
mem_èbÀ_°ru˘
);

388 
	`FILE_TO_BUF
(
MEMINFO_FILE
,
memöfo_fd
);

390 
kb_öa˘ive
 = ~0U;

392 
hód
 = 
buf
;

394 
èû
 = 
	`°rchr
(
hód
, ':');

395 if(!
èû
) ;

396 *
èû
 = '\0';

397 if(
	`°æí
(
hód
Ë>(
«mebuf
)){

398 
hód
 = 
èû
+1;

399 
√xéöe
;

401 
	`°r˝y
(
«mebuf
,
hód
);

402 
found
 = 
	`b£¨ch
(&
födme
, 
mem_èbÀ
, 
mem_èbÀ_cou¡
,

403 (
mem_èbÀ_°ru˘
), 
com∑ª_mem_èbÀ_°ru˘s


405 
hód
 = 
èû
+1;

406 if(!
found
Ë
√xéöe
;

407 *(
found
->
¶Ÿ
Ë
	`°πoul
(
hód
,&
èû
,10);

408 
√xéöe
:

409 
èû
 = 
	`°rchr
(
hód
, '\n');

410 if(!
èû
) ;

411 
hód
 = 
èû
+1;

413 if(!
kb_low_tŸÆ
){

414 
kb_low_tŸÆ
 = 
kb_maö_tŸÆ
;

415 
kb_low_‰ì
 = 
kb_maö_‰ì
;

417 if(
kb_öa˘ive
==~0U){

418 
kb_öa˘ive
 = 
kb_öa˘_dúty
 + 
kb_öa˘_˛ón
;

420 
kb_sw≠_u£d
 = 
kb_sw≠_tŸÆ
 - 
kb_sw≠_‰ì
;

421 
kb_maö_u£d
 = 
kb_maö_tŸÆ
 - 
kb_maö_‰ì
;

422 
	}
}

428 
	svm_èbÀ_°ru˘
 {

429 c⁄° *
	m«me
;

430 *
	m¶Ÿ
;

431 } 
	tvm_èbÀ_°ru˘
;

433 
	$com∑ª_vm_èbÀ_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

434  
	`°rcmp
(((c⁄° 
vm_èbÀ_°ru˘
*)
a
)->
«me
,((c⁄° vm_èbÀ_°ru˘*)
b
)->name);

435 
	}
}

437 
	gvm_ƒ_dúty
;

438 
	gvm_ƒ_wrôeback
;

439 
	gvm_ƒ_∑geˇche
;

440 
	gvm_ƒ_∑ge_èbÀ_∑ges
;

441 
	gvm_ƒ_ªvî£_m≠s
;

442 
	gvm_ƒ_m≠≥d
;

443 
	gvm_ƒ_¶ab
;

444 
	gvm_pgpgö
;

445 
	gvm_pgpgout
;

446 
	gvm_pswpö
;

447 
	gvm_pswpout
;

448 
	gvm_pgÆloc
;

449 
	gvm_pg‰ì
;

450 
	gvm_pga˘iv©e
;

451 
	gvm_pgdó˘iv©e
;

452 
	gvm_pgÁu…
;

453 
	gvm_pgmajÁu…
;

454 
	gvm_pgsˇn
;

455 
	gvm_pgªfûl
;

456 
	gvm_pg°ól
;

457 
	gvm_ksw≠d_°ól
;

458 
	gvm_∑geouåun
;

459 
	gvm_Æloc°Æl
;

461 
	$vmöfo
(){

462 
«mebuf
[16];

463 
vm_èbÀ_°ru˘
 
födme
 = { 
«mebuf
, 
NULL
};

464 
vm_èbÀ_°ru˘
 *
found
;

465 *
hód
;

466 *
èû
;

467 c⁄° 
vm_èbÀ_°ru˘
 
vm_èbÀ
[] = {

468 {"Æloc°Æl", &
vm_Æloc°Æl
},

469 {"ksw≠d_°ól", &
vm_ksw≠d_°ól
},

470 {"ƒ_dúty", &
vm_ƒ_dúty
},

471 {"ƒ_m≠≥d", &
vm_ƒ_m≠≥d
},

472 {"ƒ_∑ge_èbÀ_∑ges", &
vm_ƒ_∑ge_èbÀ_∑ges
},

473 {"ƒ_∑geˇche", &
vm_ƒ_∑geˇche
},

474 {"ƒ_ªvî£_m≠s", &
vm_ƒ_ªvî£_m≠s
},

475 {"ƒ_¶ab", &
vm_ƒ_¶ab
},

476 {"ƒ_wrôeback", &
vm_ƒ_wrôeback
},

477 {"∑geouåun", &
vm_∑geouåun
},

478 {"pga˘iv©e", &
vm_pga˘iv©e
},

479 {"pgÆloc", &
vm_pgÆloc
},

480 {"pgdó˘iv©e", &
vm_pgdó˘iv©e
},

481 {"pgÁu…", &
vm_pgÁu…
},

482 {"pg‰ì", &
vm_pg‰ì
},

483 {"pgmajÁu…", &
vm_pgmajÁu…
},

484 {"pgpgö", &
vm_pgpgö
},

485 {"pgpgout", &
vm_pgpgout
},

486 {"pgªfûl", &
vm_pgªfûl
},

487 {"pgsˇn", &
vm_pgsˇn
},

488 {"pg°ól", &
vm_pg°ól
},

489 {"pswpö", &
vm_pswpö
},

490 {"pswpout", &
vm_pswpout
}

492 c⁄° 
vm_èbÀ_cou¡
 = (
vm_èbÀ
)/(
vm_èbÀ_°ru˘
);

494 
	`FILE_TO_BUF
(
VMINFO_FILE
,
vmöfo_fd
);

496 
hód
 = 
buf
;

498 
èû
 = 
	`°rchr
(
hód
, ' ');

499 if(!
èû
) ;

500 *
èû
 = '\0';

501 if(
	`°æí
(
hód
Ë>(
«mebuf
)){

502 
hód
 = 
èû
+1;

503 
√xéöe
;

505 
	`°r˝y
(
«mebuf
,
hód
);

506 
found
 = 
	`b£¨ch
(&
födme
, 
vm_èbÀ
, 
vm_èbÀ_cou¡
,

507 (
vm_èbÀ_°ru˘
), 
com∑ª_vm_èbÀ_°ru˘s


509 
hód
 = 
èû
+1;

510 if(!
found
Ë
√xéöe
;

511 *(
found
->
¶Ÿ
Ë
	`°πoul
(
hód
,&
èû
,10);

512 
√xéöe
:

517 
èû
 = 
	`°rchr
(
hód
, '\n');

518 if(!
èû
) ;

519 
hód
 = 
èû
+1;

521 
	}
}

	@proc/sysinfo.h

1 #i‚de‡
SYSINFO_H


2 
	#SYSINFO_H


	)

4 
Hîtz
;

5 
smp_num_˝us
;

7 
	#JT
 

	)

8 
five_˝u_numbîs
(
JT
 *
uªt
, JT *
ƒë
, JT *
§ë
, JT *
úë
, JT *
wªt
);

9 #unde‡
JT


11 
u±ime
 (*
u±ime_£cs
, *
idÀ_£cs
);

12 
lﬂdavg
(*
av1
, *
av5
, *
av15
);

16 
kb_maö_sh¨ed
;

18 
kb_maö_buf„rs
;

19 
kb_maö_ˇched
;

20 
kb_maö_‰ì
;

21 
kb_maö_tŸÆ
;

22 
kb_sw≠_‰ì
;

23 
kb_sw≠_tŸÆ
;

25 
kb_high_‰ì
;

26 
kb_high_tŸÆ
;

27 
kb_low_‰ì
;

28 
kb_low_tŸÆ
;

30 
kb_a˘ive
;

31 
kb_öa˘_dúty
;

32 
kb_öa˘_˛ón
;

33 
kb_öa˘_èrgë
;

34 
kb_sw≠_ˇched
;

36 
kb_sw≠_u£d
;

37 
kb_maö_u£d
;

39 
kb_wrôeback
;

40 
kb_¶ab
;

41 
ƒ_ªvî£m≠s
;

42 
kb_commôãd_as
;

43 
kb_dúty
;

44 
kb_öa˘ive
;

45 
kb_m≠≥d
;

46 
kb_∑gëabÀs
;

48 
memöfo
();

51 
vm_ƒ_dúty
;

52 
vm_ƒ_wrôeback
;

53 
vm_ƒ_∑geˇche
;

54 
vm_ƒ_∑ge_èbÀ_∑ges
;

55 
vm_ƒ_ªvî£_m≠s
;

56 
vm_ƒ_m≠≥d
;

57 
vm_ƒ_¶ab
;

58 
vm_pgpgö
;

59 
vm_pgpgout
;

60 
vm_pswpö
;

61 
vm_pswpout
;

62 
vm_pgÆloc
;

63 
vm_pg‰ì
;

64 
vm_pga˘iv©e
;

65 
vm_pgdó˘iv©e
;

66 
vm_pgÁu…
;

67 
vm_pgmajÁu…
;

68 
vm_pgsˇn
;

69 
vm_pgªfûl
;

70 
vm_pg°ól
;

71 
vm_ksw≠d_°ól
;

72 
vm_∑geouåun
;

73 
vm_Æloc°Æl
;

75 
vmöfo
();

	@proc/version.c

7 #ifde‡
HAVE_CONFIG_H


8 
	~<c⁄fig.h
>

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~"vîsi⁄.h
"

14 #ifde‡
MINORVERSION


15 c⁄° 
	g¥o˝s_vîsi⁄
[] = "¥o˝†vîsi⁄ " 
VERSION
 "." 
SUBVERSION
 "." 
MINORVERSION
;

17 c⁄° 
	g¥o˝s_vîsi⁄
[] = "¥o˝†vîsi⁄ " 
VERSION
 "." 
SUBVERSION
;

20 
	$di•œy_vîsi⁄
() {

21 
	`Ârötf
(
°dout
, "%s\n", 
¥o˝s_vîsi⁄
);

22 
	}
}

27 
	~<sys/ut¢ame.h
>

29 
	#LINUX_VERSION
(
x
,
y
,
z
Ë(0x10000*(xË+ 0x100*(yË+ z)

	)

31 
	glöux_vîsi⁄_code
 = 0;

33 
	$öô_Löux_vîsi⁄
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

34 
	$öô_Löux_vîsi⁄
() {

35 
ut¢ame
 
uts
;

36 
x
 = 0, 
y
 = 0, 
z
 = 0;

38 i‡(
löux_vîsi⁄_code
) ;

39 i‡(
	`u«me
(&
uts
) == -1)

40 
	`exô
(1);

41 i‡(
	`ssˇnf
(
uts
.
ªÀa£
, "%d.%d.%d", &
x
, &
y
, &
z
) < 3)

42 
	`Ârötf
(
°dîr
,

45 
uts
.
ªÀa£
, 
x
, 
y
, 
z
, 
	`LINUX_VERSION
(x,y,z));

46 
löux_vîsi⁄_code
 = 
	`LINUX_VERSION
(
x
, 
y
, 
z
);

47 
	}
}

	@proc/version.h

1 #i‚de‡
PROC_VERSION_H


2 
	#PROC_VERSION_H


	)

11 
di•œy_vîsi⁄
();

12 c⁄° 
¥o˝s_vîsi⁄
[];

14 
löux_vîsi⁄_code
;

18 
	#LINUX_VERSION
(
x
,
y
,
z
Ë(0x10000*(xË+ 0x100*(yË+ z)

	)

19 
	#LINUX_VERSION_MAJOR
(
x
Ë(((x)>>16Ë& 0xFF)

	)

20 
	#LINUX_VERSION_MINOR
(
x
Ë(((x)>> 8Ë& 0xFF)

	)

21 
	#LINUX_VERSION_PATCH
(
x
Ë–(xË& 0xFF)

	)

	@proc/whattime.c

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<f˙é.h
>

20 
	~<uni°d.h
>

21 
	~<time.h
>

22 
	~<utmp.h
>

23 
	~<sys/io˘l.h
>

24 
	~"wh©time.h
"

25 
	~"sysöfo.h
"

27 
	gbuf
[128];

28 
	gav
[3];

30 *
	$•röt_u±ime
() {

31 
utmp
 *
utmp°ru˘
;

32 
upmöuãs
, 
uphours
, 
updays
;

33 
pos
;

34 
tm
 *
ªÆtime
;

35 
time_t
 
ªÆ£c⁄ds
;

36 
numu£r
;

37 
u±ime_£cs
, 
idÀ_£cs
;

41 
	`time
(&
ªÆ£c⁄ds
);

42 
ªÆtime
 = 
	`loˇ…ime
(&
ªÆ£c⁄ds
);

43 
pos
 = 
	`•rötf
(
buf
, " %02d:%02d:%02d ",

44 
ªÆtime
->
tm_hour
,Ñó…ime->
tm_mö
,Ñó…ime->
tm_£c
);

48 
	`u±ime
(&
u±ime_£cs
, &
idÀ_£cs
);

50 
updays
 = (Ë
u±ime_£cs
 / (60*60*24);

51 
	`°rˇt
 (
buf
, "up ");

52 
pos
 += 3;

53 i‡(
updays
)

54 
pos
 +
	`•rötf
(
buf
 +Öos, "%d day%s, ", 
updays
, (updays != 1) ? "s" : "");

55 
upmöuãs
 = (Ë
u±ime_£cs
 / 60;

56 
uphours
 = 
upmöuãs
 / 60;

57 
uphours
 = uphours % 24;

58 
upmöuãs
 = upminutes % 60;

59 if(
uphours
)

60 
pos
 +
	`•rötf
(
buf
 +Öos, "%2d:%02d, ", 
uphours
, 
upmöuãs
);

62 
pos
 +
	`•rötf
(
buf
 +Öos, "%d mö, ", 
upmöuãs
);

66 
numu£r
 = 0;

67 
	`£tuã¡
();

68 (
utmp°ru˘
 = 
	`gëuã¡
())) {

69 i‡((
utmp°ru˘
->
ut_ty≥
 =
USER_PROCESS
) &&

70 (
utmp°ru˘
->
ut_«me
[0] != '\0'))

71 
numu£r
++;

73 
	`íduã¡
();

75 
pos
 +
	`•rötf
(
buf
 +Öos, "%2d u£r%s, ", 
numu£r
,Çumuser == 1 ? "" : "s");

77 
	`lﬂdavg
(&
av
[0], &av[1], &av[2]);

79 
pos
 +
	`•rötf
(
buf
 +Öos, "Üoadáverage: %.2f, %.2f, %.2f",

80 
av
[0],áv[1],áv[2]);

82  
buf
;

83 
	}
}

85 
	$¥öt_u±ime
()

87 
	`¥ötf
("%s\n", 
	`•röt_u±ime
());

88 
	}
}

	@proc/whattime.h

3 #i‚de‡
__WHATTIME_H


4 
	#__WHATTIME_H


	)

6 
¥öt_u±ime
();

7 *
•röt_u±ime
();

	@ps/common.h

12 #i‚de‡
PROCPS_PS_H


13 
	#PROCPS_PS_H


	)

15 
	~"../¥oc/ªad¥oc.h
"

17 
	~<asm/∑øm.h
>

19 
	#åa˚
(
¨gs
...Ë
	`¥ötf
(##árgs)

	)

21 
	#åa˚
(
¨gs
...)

	)

29 
	#SEL_RUID
 1

	)

30 
	#SEL_EUID
 2

	)

31 
	#SEL_SUID
 3

	)

32 
	#SEL_FUID
 4

	)

33 
	#SEL_RGID
 5

	)

34 
	#SEL_EGID
 6

	)

35 
	#SEL_SGID
 7

	)

36 
	#SEL_FGID
 8

	)

37 
	#SEL_PGRP
 9

	)

38 
	#SEL_PID
 10

	)

39 
	#SEL_TTY
 11

	)

40 
	#SEL_SESS
 12

	)

41 
	#SEL_COMM
 13

	)

44 
	#U98
 0

	)

45 
	#XXX
 1

	)

46 
	#DEC
 2

	)

47 
	#AIX
 3

	)

48 
	#SCO
 4

	)

49 
	#LNX
 5

	)

50 
	#BSD
 6

	)

51 
	#SUN
 7

	)

52 
	#HPU
 8

	)

53 
	#SGI
 9

	)

54 
	#SOE
 10

	)

69 
	#ESC_STRETCH
 6

	)

71 
	#PAGE_SIZE
 4096

	)

72 
	#OUTBUF_SIZE
 (32*
PAGE_SIZE
*
ESC_STRETCH
 + 8*PAGE_SIZE)

	)

74 
	#SPACE_AMOUNT
 ()(
PAGE_SIZE
)

	)

79 
	#PER_BROKEN_o
 0x0001

	)

80 
	#PER_BSD_h
 0x0002

	)

81 
	#PER_BSD_m
 0x0004

	)

82 
	#PER_CUMUL_MARKED
 0x0008

	)

83 
	#PER_FORCE_BSD
 0x0010

	)

84 
	#PER_GOOD_o
 0x0020

	)

85 
	#PER_OLD_m
 0x0040

	)

86 
	#PER_NO_DEFAULT_g
 0x0080

	)

87 
	#PER_ZAP_ADDR
 0x0100

	)

88 
	#PER_SANE_USER
 0x0200

	)

89 
	#PER_IRIX_l
 0x0400

	)

92 
	#SS_B_x
 0x01

	)

93 
	#SS_B_g
 0x02

	)

94 
	#SS_U_d
 0x04

	)

95 
	#SS_U_a
 0x08

	)

96 
	#SS_B_a
 0x10

	)

99 
	#FF_Uf
 0x0001

	)

100 
	#FF_Uj
 0x0002

	)

101 
	#FF_Ul
 0x0004

	)

102 
	#FF_Bj
 0x0008

	)

103 
	#FF_Bl
 0x0010

	)

104 
	#FF_Bs
 0x0020

	)

105 
	#FF_Bu
 0x0040

	)

106 
	#FF_Bv
 0x0080

	)

107 
	#FF_LX
 0x0100

	)

108 
	#FF_Lm
 0x0200

	)

109 
	#FF_Fc
 0x0400

	)

110 
	#FF_Fs
 0x0800

	)

113 
	#FM_c
 0x0001

	)

114 
	#FM_j
 0x0002

	)

115 
	#FM_y
 0x0004

	)

116 
	#FM_L
 0x0008

	)

117 
	#FM_P
 0x0010

	)

118 
	#FM_M
 0x0020

	)

119 
	#FM_T
 0x0040

	)

120 
	#FM_F
 0x0080

	)

124 
	#SF_U_O
 1

	)

125 
	#SF_U_o
 2

	)

126 
	#SF_B_O
 3

	)

127 
	#SF_B_o
 4

	)

128 
	#SF_B_m
 5

	)

129 
	#SF_G_s‹t
 6

	)

130 
	#SF_G_f‹m©
 7

	)

133 
	#HEAD_SINGLE
 0

	)

134 
	#HEAD_NONE
 1

	)

135 
	#HEAD_MULTI
 2

	)

149 
	u£l_uni⁄
 {

150 
pid_t
 
	mpid
;

151 
uid_t
 
	muid
;

152 
gid_t
 
	mgid
;

153 
dev_t
 
	mây
;

154 
	mcmd
[8];

155 } 
	t£l_uni⁄
;

157 
	s£À˘i⁄_node
 {

158 
£À˘i⁄_node
 *
	m√xt
;

159 
£l_uni⁄
 *
	mu
;

160 
	mn
;

161 
	mty≥code
;

162 } 
	t£À˘i⁄_node
;

164 
	ss‹t_node
 {

165 
s‹t_node
 *
	m√xt
;

166 (*
	m§
)(c⁄° 
¥oc_t
* 
	mP
, c⁄°Öroc_t* 
	mQ
);

167 
	mªvî£
;

168 
	mty≥code
;

169 
	m√ed
;

170 } 
	ts‹t_node
;

172 
	sf‹m©_node
 {

173 
f‹m©_node
 *
	m√xt
;

174 *
	m«me
;

175 (*
	m¥
)();

177 
	mwidth
;

178 
	m√ed
;

179 
	mvíd‹
;

180 
	mÊags
;

181 
	mty≥code
;

182 } 
	tf‹m©_node
;

184 
	sf‹m©_°ru˘
 {

185 c⁄° *
	m•ec
;

186 c⁄° *
	mhód
;

187 (* c⁄° 
	m¥
)();

188 (* c⁄° 
	m§
)(c⁄° 
¥oc_t
* 
	mP
, c⁄°Öroc_t* 
	mQ
);

189 c⁄° 
	mwidth
;

190 c⁄° 
	m√ed
;

191 c⁄° 
	mvíd‹
;

192 c⁄° 
	mÊags
;

193 } 
	tf‹m©_°ru˘
;

196 
	sma¸o_°ru˘
 {

197 c⁄° *
	m•ec
;

198 c⁄° *
	mhód
;

199 } 
	tma¸o_°ru˘
;

203 
	saix_°ru˘
 {

204 c⁄° 
	mdesc
;

205 c⁄° *
	m•ec
;

206 c⁄° *
	mhód
;

207 } 
	taix_°ru˘
;

209 
	ssh‹ts‹t_°ru˘
 {

210 c⁄° 
	mdesc
;

211 c⁄° *
	m•ec
;

212 } 
	tsh‹ts‹t_°ru˘
;

215 
	ssf_node
 {

216 
sf_node
 *
	m√xt
;

217 
f‹m©_node
 *
	mf_cooked
;

218 
s‹t_node
 *
	ms_cooked
;

219 *
	msf
;

220 
	msf_code
;

221 } 
	tsf_node
;

227 
esˇ≥_°æi°
(*
d°
, c⁄° **
§c
, 
size_t
 
n
);

228 
esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
);

229 
o˘Æ_esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
);

230 
sim∂e_esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
);

235 
show_⁄e_¥oc
(
¥oc_t
* 
p
);

236 
¥öt_f‹m©_•ecifõrs
();

237 c⁄° 
aix_°ru˘
 *
£¨ch_aix_¨øy
(c⁄° 
födme
);

238 c⁄° 
sh‹ts‹t_°ru˘
 *
£¨ch_sh‹ts‹t_¨øy
(c⁄° 
födme
);

239 c⁄° 
f‹m©_°ru˘
 *
£¨ch_f‹m©_¨øy
(c⁄° *
födme
);

240 c⁄° 
ma¸o_°ru˘
 *
£¨ch_ma¸o_¨øy
(c⁄° *
födme
);

241 
öô_ouçut
();

244 
ª£t_globÆ
();

247 
Æl_¥o˚s£s
;

248 c⁄° *
bsd_j_f‹m©
;

249 c⁄° *
bsd_l_f‹m©
;

250 c⁄° *
bsd_s_f‹m©
;

251 c⁄° *
bsd_u_f‹m©
;

252 c⁄° *
bsd_v_f‹m©
;

253 
bsd_c_›ti⁄
;

254 
bsd_e_›ti⁄
;

255 
uid_t
 
ˇched_euid
;

256 
dev_t
 
ˇched_ây
;

257 
f‹e°_¥efix
[4 * 32*1024 + 100];

258 
f‹e°_ty≥
;

259 
f‹m©_Êags
;

260 
f‹m©_node
 *
f‹m©_li°
;

261 
f‹m©_modifõrs
;

262 
hódî_g≠
;

263 
hódî_ty≥
;

264 
ö˛ude_dód_chûdªn
;

265 
löes_to_√xt_hódî
;

266 
max_löe_width
;

267 c⁄° *
«mñi°_fûe
;

268 
√g©e_£À˘i⁄
;

269 
≥rs⁄Æôy
;

270 
¥e„r_bsd_deÁu…s
;

271 
ru¬ög_⁄ly
;

272 
s¸ìn_cﬁs
;

273 
s¸ìn_rows
;

274 
£c⁄ds_sö˚_boŸ
;

275 
£À˘i⁄_node
 *
£À˘i⁄_li°
;

276 
sim∂e_£À˘
;

277 
s‹t_node
 *
s‹t_li°
;

278 c⁄° *
sysv_f_f‹m©
;

279 c⁄° *
sysv_Ê_f‹m©
;

280 c⁄° *
sysv_j_f‹m©
;

281 c⁄° *
sysv_l_f‹m©
;

282 
unix_f_›ti⁄
;

283 
u£r_is_numbî
;

284 
wch™_is_numbî
;

289 
de„r_sf_›ti⁄
(c⁄° *
¨g
, 
sour˚
);

290 c⁄° *
¥o˚ss_sf_›ti⁄s
(
loˇlbrokí
);

291 
ª£t_s‹tf‹m©
();

294 
w™t_this_¥oc
(
¥oc_t
 *
buf
);

295 c⁄° *
£À˘_bôs_£tup
();

298 c⁄° *
hñp_mesßge
;

301 
£lf_öfo
();

304 
¨g_∑r£
(
¨gc
, *
¨gv
[]);

	@ps/display.c

12 
	~<°dlib.h
>

13 
	~<°dio.h
>

14 
	~<°rög.h
>

15 
	~<uni°d.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<pwd.h
>

20 
	~<gΩ.h
>

23 
	~<sys/sysma¸os.h
>

25 
	~<sig«l.h
>

27 
	~"comm⁄.h
"

28 
	~"../¥oc/¥o˝s.h
"

29 
	~"../¥oc/vîsi⁄.h
"

30 
	~"../¥oc/ªad¥oc.h
"

31 
	~"../¥oc/sysöfo.h
"

33 #i‚de‡
SIGCHLD


34 
	#SIGCHLD
 
SIGCLD


	)

38 
	$sig«l_h™dÀr
(
signo
){

39 if(
signo
==
SIGPIPE
Ë
	`_exô
(0);

41 
	`Ârötf
(
°dîr
,

45 
signo
,

46 
¥o˝s_vîsi⁄


48 
	`_exô
(
signo
+128);

49 
	}
}

52 #unde‡
DEBUG


53 #ifde‡
DEBUG


54 
öô_°ack_åa˚
(*
¥og_«me
);

56 
	~<˘y≥.h
>

58 
	$hex_dump
(*
vp
){

59 *
ch¨li°
;

60 
i
 = 0;

61 
löe
 = 45;

62 *
˝
 = (*)
vp
;

64 
löe
--){

65 
	`¥ötf
("%8lx ", ()
˝
);

66 
ch¨li°
 = 
˝
;

67 
˝
 += 16;

68 
i
=0; i<16; i++){

69 if((
ch¨li°
[
i
]>31) && (charlist[i]<127)){

70 
	`¥ötf
("%c", 
ch¨li°
[
i
]);

72 
	`¥ötf
(".");

75 
	`¥ötf
(" ");

76 
i
=0; i<16; i++Ë
	`¥ötf
(" %2x",()(()(
ch¨li°
[i])));

77 
	`¥ötf
("\n");

78 
i
=0;

80 
	}
}

82 
	$show_pid
(*
s
, 
n
, 
£l_uni⁄
 *
d©a
){

83 
	`¥ötf
("%† ", 
s
);

84 --
n
){

85 
	`¥ötf
("%d,", 
d©a
[
n
].
pid
);

87 
	`¥ötf
("%d\n", 
d©a
[0].
pid
);

88 
	}
}

90 
	$show_uid
(*
s
, 
n
, 
£l_uni⁄
 *
d©a
){

91 
∑sswd
 *
pw_d©a
;

92 
	`¥ötf
("%† ", 
s
);

93 --
n
){

94 
pw_d©a
 = 
	`gëpwuid
(
d©a
[
n
].
uid
);

95 if(
pw_d©a
Ë
	`¥ötf
("%s,",Öw_d©a->
pw_«me
);

96 
	`¥ötf
("%d,", 
d©a
[
n
].
uid
);

98 
pw_d©a
 = 
	`gëpwuid
(
d©a
[
n
].
uid
);

99 if(
pw_d©a
Ë
	`¥ötf
("%s\n",Öw_d©a->
pw_«me
);

100 
	`¥ötf
("%d\n", 
d©a
[
n
].
uid
);

101 
	}
}

103 
	$show_gid
(*
s
, 
n
, 
£l_uni⁄
 *
d©a
){

104 
group
 *
gr_d©a
;

105 
	`¥ötf
("%† ", 
s
);

106 --
n
){

107 
gr_d©a
 = 
	`gëgrgid
(
d©a
[
n
].
gid
);

108 if(
gr_d©a
Ë
	`¥ötf
("%s,", gr_d©a->
gr_«me
);

109 
	`¥ötf
("%d,", 
d©a
[
n
].
gid
);

111 
gr_d©a
 = 
	`gëgrgid
(
d©a
[
n
].
gid
);

112 if(
gr_d©a
Ë
	`¥ötf
("%s\n", gr_d©a->
gr_«me
);

113 
	`¥ötf
("%d\n", 
d©a
[
n
].
gid
);

114 
	}
}

116 
	$show_ây
(*
s
, 
n
, 
£l_uni⁄
 *
d©a
){

117 
	`¥ötf
("%† ", 
s
);

118 --
n
){

119 
	`¥ötf
("%d:%d,", ()
	`maj‹
(
d©a
[
n
].
ây
), ()
	`mö‹
(data[n].tty));

121 
	`¥ötf
("%d:%d\n", ()
	`maj‹
(
d©a
[
n
].
ây
), ()
	`mö‹
(data[n].tty));

122 
	}
}

124 
	$show_cmd
(*
s
, 
n
, 
£l_uni⁄
 *
d©a
){

125 
	`¥ötf
("%† ", 
s
);

126 --
n
){

127 
	`¥ötf
("%.8s,", 
d©a
[
n
].
cmd
);

129 
	`¥ötf
("%.8s\n", 
d©a
[0].
cmd
);

130 
	}
}

132 
	$¨g_show
(){

133 
£À˘i⁄_node
 *
wÆk
 = 
£À˘i⁄_li°
;

134 
wÆk
){

135 
wÆk
->
ty≥code
){

136 
SEL_RUID
: 
	`show_uid
("RUID", 
wÆk
->
n
, wÆk->
u
); ;

137 
SEL_EUID
: 
	`show_uid
("EUID", 
wÆk
->
n
, wÆk->
u
); ;

138 
SEL_SUID
: 
	`show_uid
("SUID", 
wÆk
->
n
, wÆk->
u
); ;

139 
SEL_FUID
: 
	`show_uid
("FUID", 
wÆk
->
n
, wÆk->
u
); ;

140 
SEL_RGID
: 
	`show_gid
("RGID", 
wÆk
->
n
, wÆk->
u
); ;

141 
SEL_EGID
: 
	`show_gid
("EGID", 
wÆk
->
n
, wÆk->
u
); ;

142 
SEL_SGID
: 
	`show_gid
("SGID", 
wÆk
->
n
, wÆk->
u
); ;

143 
SEL_FGID
: 
	`show_gid
("FGID", 
wÆk
->
n
, wÆk->
u
); ;

144 
SEL_PGRP
: 
	`show_pid
("PGRP", 
wÆk
->
n
, wÆk->
u
); ;

145 
SEL_PID
 : 
	`show_pid
("PID ", 
wÆk
->
n
, wÆk->
u
); ;

146 
SEL_TTY
 : 
	`show_ây
("TTY ", 
wÆk
->
n
, wÆk->
u
); ;

147 
SEL_SESS
: 
	`show_pid
("SESS", 
wÆk
->
n
, wÆk->
u
); ;

148 
SEL_COMM
: 
	`show_cmd
("COMM", 
wÆk
->
n
, wÆk->
u
); ;

149 : 
	`¥ötf
("GarbageÅypecode value!\n");

151 
wÆk
 = wÆk->
√xt
;

153 
	}
}

160 
	$check_hódîs
(){

161 
f‹m©_node
 *
wÆk
 = 
f‹m©_li°
;

162 
hód_n‹mÆ
 = 0;

163 if(
hódî_ty≥
==
HEAD_MULTI
){

164 
hódî_g≠
 = 
s¸ìn_rows
-1;

167 if(
hódî_ty≥
==
HEAD_NONE
){

168 
löes_to_√xt_hódî
 = -1;

171 
wÆk
){

172 if(!*(
wÆk
->
«me
)){

173 
wÆk
 = wÆk->
√xt
;

176 if(
wÆk
->
¥
){

177 
hód_n‹mÆ
++;

178 
wÆk
 = wÆk->
√xt
;

181 
wÆk
 = wÆk->
√xt
;

183 if(!
hód_n‹mÆ
Ë
löes_to_√xt_hódî
 = -1;

184 
	}
}

186 
	g√eds_f‹_f‹m©
;

187 
	g√eds_f‹_s‹t
;

191 
	$check_√eds
(){

192 
f‹m©_node
 *
wÆk_¥
 = 
f‹m©_li°
;

193 
s‹t_node
 *
wÆk_§
 = 
s‹t_li°
;

196 
wÆk_¥
){

197 
√eds_f‹_f‹m©
 |
wÆk_¥
->
√ed
;

198 
wÆk_¥
 = wÆk_¥->
√xt
;

200 if(
bsd_e_›ti⁄
Ë
√eds_f‹_f‹m©
 |
PROC_FILLENV
;

202 
wÆk_§
){

203 
√eds_f‹_s‹t
 |
wÆk_§
->
√ed
;

204 
wÆk_§
 = wÆk_§->
√xt
;

207 
	}
}

211 
	$fûl_p˝u
(
¥oc_t
 *
buf
){

212 
u£d_jiffõs
;

213 
p˝u
 = 0;

214 
avaû_jiffõs
;

216 
u£d_jiffõs
 = 
buf
->
utime
 + buf->
°ime
;

217 if(
ö˛ude_dód_chûdªn
Ë
u£d_jiffõs
 +(
buf
->
cutime
 + buf->
c°ime
);

219 
avaû_jiffõs
 = 
£c⁄ds_sö˚_boŸ
 * 
Hîtz
 - 
buf
->
°¨t_time
;

220 if(
avaû_jiffõs
Ë
p˝u
 = (
u£d_jiffõs
 << 24) /ávail_jiffies;

222 
buf
->
p˝u
 =Öcpu;

223 
	}
}

226 
	$compuã_√eds
(){

227 if(
bsd_c_›ti⁄
){

228 
√eds_f‹_f‹m©
 &~
PROC_FILLARG
;

229 
√eds_f‹_s‹t
 &~
PROC_FILLARG
;

231 if(!
unix_f_›ti⁄
){

232 
√eds_f‹_f‹m©
 &~
PROC_FILLCOM
;

233 
√eds_f‹_s‹t
 &~
PROC_FILLCOM
;

235 
	}
}

238 
	$sim∂e_•ew
(){

239 
¥oc_t
 
buf
;

240 
PROCTAB
* 
±p
;

241 
±p
 = 
	`›í¥oc
(
√eds_f‹_f‹m©
 | 
√eds_f‹_s‹t
);

242 if(!
±p
) {

243 
	`Ârötf
(
°dîr
, "Error: canÇotáccess /proc.\n");

244 
	`exô
(1);

246 
	`mem£t
(&
buf
, '#', (
¥oc_t
));

248 
	`ps_ªad¥oc
(
±p
,&
buf
)){

249 if(
	`w™t_this_¥oc
(&
buf
)Ë
	`show_⁄e_¥oc
(&buf);

250 if(
buf
.
cmdlöe
Ë
	`‰ì
((*)*buf.cmdline);

251 if(
buf
.
ívú⁄
Ë
	`‰ì
((*)*buf.environ);

254 
	`˛o£¥oc
(
±p
);

255 
	}
}

258 
	$¥ï_f‹e°_s‹t
(){

259 
s‹t_node
 *
tmp_li°
 = 
s‹t_li°
;

260 c⁄° 
f‹m©_°ru˘
 *
öcomög
;

262 if(!
s‹t_li°
) {

263 
öcomög
 = 
	`£¨ch_f‹m©_¨øy
("start_time");

264 if(!
öcomög
Ë
	`Ârötf
(
°dîr
, "CouldÇot find start_time!\n");

265 
tmp_li°
 = 
	`mÆloc
((
s‹t_node
));

266 
tmp_li°
->
ªvî£
 = 0;

267 
tmp_li°
->
ty≥code
 = '?';

268 
tmp_li°
->
§
 = 
öcomög
->sr;

269 
tmp_li°
->
√ed
 = 
öcomög
->need;

270 
tmp_li°
->
√xt
 = 
s‹t_li°
;

271 
s‹t_li°
 = 
tmp_li°
;

274 
öcomög
 = 
	`£¨ch_f‹m©_¨øy
("ppid");

275 if(!
öcomög
Ë
	`Ârötf
(
°dîr
, "CouldÇot findÖpid!\n");

276 
tmp_li°
 = 
	`mÆloc
((
s‹t_node
));

277 
tmp_li°
->
ªvî£
 = 0;

278 
tmp_li°
->
ty≥code
 = '?';

279 
tmp_li°
->
§
 = 
öcomög
->sr;

280 
tmp_li°
->
√ed
 = 
öcomög
->need;

281 
tmp_li°
->
√xt
 = 
s‹t_li°
;

282 
s‹t_li°
 = 
tmp_li°
;

283 
	}
}

286 
¥oc_t
 *
	g¥o˚s£s
[32*1024];

289 
	$com∑ª_two_¥ocs
(c⁄° *
a
, c⁄° *
b
){

290 
s‹t_node
 *
tmp_li°
 = 
s‹t_li°
;

291 
tmp_li°
){

292 
ªsu…
;

293 
ªsu…
 = (*
tmp_li°
->
§
)(*(c⁄° 
¥oc_t
 *c⁄°*)
a
, *(c⁄°Öroc_à*c⁄°*)
b
);

294 if(
ªsu…
Ë (
tmp_li°
->
ªvî£
) ? -result :Ñesult;

295 
tmp_li°
 =Åmp_li°->
√xt
;

298 
	}
}

301 
	$show_¥oc_¨øy
(
n
){

302 
¥oc_t
 **
p
 = 
¥o˚s£s
;

303 
n
--){

304 
	`show_⁄e_¥oc
(*
p
);

310 
p
++;

312 
	}
}

316 
	#ADOPTED
(
x
Ë1

	)

317 
	$show_åì
(c⁄° 
£lf
, c⁄° 
n
, c⁄° 
Àvñ
, c⁄° 
have_siblög
){

318 
i
 = 0;

319 if(
Àvñ
){

321 if(
have_siblög
Ë
f‹e°_¥efix
[
Àvñ
-1] = '+';

322 
f‹e°_¥efix
[
Àvñ
-1] = 'L';

323 
f‹e°_¥efix
[
Àvñ
] = '\0';

325 
	`show_⁄e_¥oc
(
¥o˚s£s
[
£lf
]);

330 if(
i
 >
n
) ;

331 if(
¥o˚s£s
[
i
]->
µid
 =¥o˚s£s[
£lf
]->
pid
) ;

332 
i
++;

334 if(
Àvñ
){

336 if(
have_siblög
Ë
f‹e°_¥efix
[
Àvñ
-1] = '|';

337 
f‹e°_¥efix
[
Àvñ
-1] = ' ';

338 
f‹e°_¥efix
[
Àvñ
] = '\0';

341 
£lf_pid
;

342 
m‹e_chûdªn
 = 1;

343 if(
i
 >
n
) ;

344 
£lf_pid
=
¥o˚s£s
[
£lf
]->
pid
;

345 if(
i
+1 >
n
)

346 
m‹e_chûdªn
 = 0;

348 if(
¥o˚s£s
[
i
+1]->
µid
 !
£lf_pid
Ë
m‹e_chûdªn
 = 0;

349 if(
£lf_pid
==1 && 
	`ADOPTED
(
¥o˚s£s
[
i
]Ë&& 
f‹e°_ty≥
!='u')

350 
	`show_åì
(
i
++, 
n
, 
Àvñ
, 
m‹e_chûdªn
);

352 
	`show_åì
(
i
++, 
n
, 
Àvñ
+1, 
m‹e_chûdªn
);

353 if(!
m‹e_chûdªn
) ;

356 
f‹e°_¥efix
[
Àvñ
] = '\0';

358 
	}
}

361 
	$show_f‹e°
(c⁄° 
n
){

362 
i
 = 
n
;

363 
j
;

364 
i
--){

365 
j
 = 
n
;

366 
j
--){

367 if(
¥o˚s£s
[
j
]->
pid
 =¥o˚s£s[
i
]->
µid
Ë
nŸ_roŸ
;

369 
	`show_åì
(
i
,
n
,0,0);

370 
nŸ_roŸ
:

374 
	}
}

377 
	$Áncy_•ew
(){

378 
¥oc_t
 *
ªtbuf
 = 
NULL
;

379 
PROCTAB
* 
±p
;

380 
n
 = 0;

381 
±p
 = 
	`›í¥oc
(
√eds_f‹_f‹m©
 | 
√eds_f‹_s‹t
);

382 if(!
±p
) {

383 
	`Ârötf
(
°dîr
, "Error: canÇotáccess /proc.\n");

384 
	`exô
(1);

386 (
ªtbuf
 = 
	`ps_ªad¥oc
(
±p
,retbuf))){

387 if(
	`w™t_this_¥oc
(
ªtbuf
)){

388 
	`fûl_p˝u
(
ªtbuf
);

389 
¥o˚s£s
[
n
++] = 
ªtbuf
;

390 
ªtbuf
 = 
NULL
;

393 if(
ªtbuf
Ë
	`‰ì
(retbuf);

394 
	`˛o£¥oc
(
±p
);

395 if(!
n
) ;

396 if(
f‹e°_ty≥
Ë
	`¥ï_f‹e°_s‹t
();

397 
	`qs‹t
(
¥o˚s£s
, 
n
, (
¥oc_t
*), 
com∑ª_two_¥ocs
);

398 if(
f‹e°_ty≥
Ë
	`show_f‹e°
(
n
);

399 
	`show_¥oc_¨øy
(
n
);

400 
	}
}

404 
	$maö
(
¨gc
, *
¨gv
[]){

405 #ifde‡
DEBUG


406 
	`öô_°ack_åa˚
(
¨gv
[0]);

409 
siga˘i⁄
 
ß
;

410 
i
 = 32;

411 
	`mem£t
(&
ß
, 0, (sa));

412 
ß
.
ß_h™dÀr
 = 
sig«l_h™dÀr
;

413 
	`sigfûl£t
(&
ß
.
ß_mask
);

414 
i
--) i){

416 
	`siga˘i⁄
(
i
,&
ß
,
NULL
);

418 
SIGINT
:

419 
SIGQUIT
:

420 
SIGPROF
:

421 
SIGKILL
:

422 
SIGSTOP
:

423 
SIGWINCH
:

429 
	`ª£t_globÆ
();

430 
	`¨g_∑r£
(
¨gc
,
¨gv
);

433 
	`åa˚
("s¸ì¿i†%ux%u\n",
s¸ìn_cﬁs
,
s¸ìn_rows
);

435 
	`åa˚
("=======Ös output follows =======\n");

437 
	`öô_ouçut
();

438 
	`check_hódîs
();

440 
	`check_√eds
();

442 if––(
√eds_f‹_f‹m©
|
√eds_f‹_s‹t
Ë& 
PROC_FILLWCHAN
Ë&& !
wch™_is_numbî
)

443 i‡(
	`›í_psdb
(
«mñi°_fûe
)Ë
wch™_is_numbî
 = 1;

444 
	`compuã_√eds
();

446 if(
f‹e°_ty≥
 || 
s‹t_li°
Ë
	`Áncy_•ew
();

447 
	`sim∂e_•ew
();

448 
	`show_⁄e_¥oc
((
¥oc_t
 *)-1);

450 
	}
}

	@ps/escape.c

11 
	~<sys/ty≥s.h
>

15 
	$o˘Æ_esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
){

16 
c
;

17 
d
;

18 
size_t
 
i
;

19 c⁄° *
codes
 =

28 
i
=0; i<
n
;){

29 
c
 = (Ë*(
§c
++);

30 
d
 = 
codes
[
c
];

31 
d
){

33 
Àave
;

35 
i
++;

36 *(
d°
++Ë
c
;

39 if(
i
+4 > 
n
Ë
Àave
;

40 
i
 += 4;

41 *(
d°
++) = '\\';

42 *(
d°
++Ë"01234567"[
c
>>6];

43 *(
d°
++Ë"01234567"[(
c
>>3)&07];

44 *(
d°
++Ë"01234567"[
c
&07];

47 if(
i
+2 > 
n
Ë
Àave
;

48 
i
 += 2;

49 *(
d°
++) = '\\';

50 *(
d°
++Ë
d
;

54 
Àave
:

55 *(
d°
++) = '\0';

56  
i
;

57 
	}
}

60 
	$sim∂e_esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
){

61 
c
;

62 
size_t
 
i
;

63 c⁄° *
codes
 =

72 
i
=0; i<
n
;){

73 
c
 = (Ë*(
§c
++);

74 
codes
[
c
]){

76 
Àave
;

78 
i
++;

79 *(
d°
++Ë
c
;

82 
i
++;

83 *(
d°
++) = '?';

87 
Àave
:

88 *(
d°
++) = '\0';

89  
i
;

90 
	}
}

93 
	$esˇ≥_°r
(*
d°
, c⁄° *
§c
, 
size_t
 
n
){

94  
	`sim∂e_esˇ≥_°r
(
d°
, 
§c
, 
n
);

95 
	}
}

98 
	$esˇ≥_°æi°
(*
d°
, c⁄° **
§c
, 
size_t
 
n
){

99 
size_t
 
i
 = 0;

100 *
§c
){

101 
i
 +
	`sim∂e_esˇ≥_°r
(
d°
+i, *
§c
, 
n
-i);

102 if((
n
-
i
 > 1Ë&& (*(
§c
+1))Ë
d°
[i++] = ' ';

103 
§c
++;

105  
i
;

106 
	}
}

	@ps/global.c

11 
	~<°dlib.h
>

12 
	~<°dio.h
>

13 
	~<uni°d.h
>

14 
	~<sys/io˘l.h
>

15 
	~<sys/ty≥s.h
>

16 
	~<pwd.h
>

17 
	~<gΩ.h
>

18 
	~<°rög.h
>

20 
	~"comm⁄.h
"

22 
	~<sys/sysma¸os.h
>

23 
	~"../¥oc/vîsi⁄.h
"

24 
	~"../¥oc/sysöfo.h
"

27 #i‚de‡
__GNU_LIBRARY__


28 
	#__GNU_LIBRARY__
 -1

	)

30 #i‚de‡
__GLIBC__


31 
	#__GLIBC__
 -1

	)

33 #i‚de‡
__GLIBC_MINOR__


34 
	#__GLIBC_MINOR__
 -1

	)

38 c⁄° * 
	gßved_≥rs⁄Æôy_ãxt
 = "You foundá bug!";

40 
	gÆl_¥o˚s£s
 = -1;

41 c⁄° *
	gbsd_j_f‹m©
 = (const *)0xdeadbeef;

42 c⁄° *
	gbsd_l_f‹m©
 = (const *)0xdeadbeef;

43 c⁄° *
	gbsd_s_f‹m©
 = (const *)0xdeadbeef;

44 c⁄° *
	gbsd_u_f‹m©
 = (const *)0xdeadbeef;

45 c⁄° *
	gbsd_v_f‹m©
 = (const *)0xdeadbeef;

46 
	gbsd_c_›ti⁄
 = -1;

47 
	gbsd_e_›ti⁄
 = -1;

48 
uid_t
 
	gˇched_euid
 = -1;

49 
dev_t
 
	gˇched_ây
 = -1;

50 
	gf‹e°_¥efix
[4 * 32*1024 + 100];

51 
	gf‹e°_ty≥
 = -1;

52 
	gf‹m©_Êags
 = 0xffffffff;

53 
f‹m©_node
 *
	gf‹m©_li°
 = (format_node *)0xdeadbeef;

54 
	gf‹m©_modifõrs
 = 0xffffffff;

55 
	ghódî_g≠
 = -1;

56 
	ghódî_ty≥
 = -1;

57 
	gö˛ude_dód_chûdªn
 = -1;

58 
	glöes_to_√xt_hódî
 = -1;

59 c⁄° *
	g«mñi°_fûe
 = (const *)0xdeadbeef;

60 
	g√g©e_£À˘i⁄
 = -1;

61 
	gru¬ög_⁄ly
 = -1;

62 
	g≥rs⁄Æôy
 = 0xffffffff;

63 
	g¥e„r_bsd_deÁu…s
 = -1;

64 
	gs¸ìn_cﬁs
 = -1;

65 
	gs¸ìn_rows
 = -1;

66 
	g£c⁄ds_sö˚_boŸ
 = -1;

67 
£À˘i⁄_node
 *
	g£À˘i⁄_li°
 = (selection_node *)0xdeadbeef;

68 
	gsim∂e_£À˘
 = 0xffffffff;

69 
s‹t_node
 *
	gs‹t_li°
 = (sort_node *)0xdeadbeef;

70 c⁄° *
	gsysv_f_f‹m©
 = (const *)0xdeadbeef;

71 c⁄° *
	gsysv_Ê_f‹m©
 = (const *)0xdeadbeef;

72 c⁄° *
	gsysv_j_f‹m©
 = (const *)0xdeadbeef;

73 c⁄° *
	gsysv_l_f‹m©
 = (const *)0xdeadbeef;

74 
	gunix_f_›ti⁄
 = -1;

75 
	gu£r_is_numbî
 = -1;

76 
	gwch™_is_numbî
 = -1;

79 
	$ª£t_£À˘i⁄_li°
(){

80 
£À˘i⁄_node
 *
ﬁd
;

81 
£À˘i⁄_node
 *
wÆk
 = 
£À˘i⁄_li°
;

82 if(
£À˘i⁄_li°
 =(
£À˘i⁄_node
 *)0xdeadbeef){

83 
£À˘i⁄_li°
 = 
NULL
;

86 
wÆk
){

87 
ﬁd
 = 
wÆk
;

88 
wÆk
 = 
ﬁd
->
√xt
;

89 
	`‰ì
(
ﬁd
->
u
);

90 
	`‰ì
(
ﬁd
);

92 
£À˘i⁄_li°
 = 
NULL
;

93 
	}
}

101 
	$£t_s¸ìn_size
(){

102 
wösize
 
ws
;

103 *
cﬁumns
;

104 *
löes
;

105 if(
	`io˘l
(1, 
TIOCGWINSZ
, &
ws
Ë!-1 && ws.
ws_cﬁ
>0 && ws.
ws_row
>0){

106 
s¸ìn_cﬁs
 = 
ws
.
ws_cﬁ
;

107 
s¸ìn_rows
 = 
ws
.
ws_row
;

109 
s¸ìn_cﬁs
 = 80;

110 
s¸ìn_rows
 = 24;

112 if(!
	`ißây
(
STDOUT_FILENO
)Ë
s¸ìn_cﬁs
 = 
OUTBUF_SIZE
;

113 
cﬁumns
 = 
	`gëív
("COLUMNS");

114 if(
cﬁumns
 && *columns){

115 
t
;

116 *
íd±r
;

117 
t
 = 
	`°πﬁ
(
cﬁumns
, &
íd±r
, 0);

118 if(!*
íd±r
 && (
t
>0Ë&& (t<()
OUTBUF_SIZE
)Ë
s¸ìn_cﬁs
 = ()t;

120 
löes
 = 
	`gëív
("LINES");

121 if(
löes
 && *lines){

122 
t
;

123 *
íd±r
;

124 
t
 = 
	`°πﬁ
(
löes
, &
íd±r
, 0);

125 if(!*
íd±r
 && (
t
>0Ë&& (t<()
OUTBUF_SIZE
)Ë
s¸ìn_rows
 = ()t;

127 if((
s¸ìn_cﬁs
<9Ë|| (
s¸ìn_rows
<2))

128 
	`Ârötf
(
°dîr
,"Your %dx%d screen size is bogus. ExpectÅrouble.\n",

129 
s¸ìn_cﬁs
, 
s¸ìn_rows


131 
	}
}

135 
	s≥rs⁄Æôy_èbÀ_°ru˘
 {

136 c⁄° *
	m«me
;

137 c⁄° *
	mjump
;

138 } 
	t≥rs⁄Æôy_èbÀ_°ru˘
;

140 
	$com∑ª_≥rs⁄Æôy_èbÀ_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

141  
	`°rˇ£cmp
(((c⁄° 
≥rs⁄Æôy_èbÀ_°ru˘
*)
a
)->
«me
,((c⁄°Öîs⁄Æôy_èbÀ_°ru˘*)
b
)->name);

142 
	}
}

144 c⁄° *
	$£t_≥rs⁄Æôy
(){

145 c⁄° *
s
;

146 
size_t
 
¶
;

147 
buf
[16];

148 
≥rs⁄Æôy_èbÀ_°ru˘
 
födme
 = { 
buf
, 
NULL
};

149 
≥rs⁄Æôy_èbÀ_°ru˘
 *
found
;

150 c⁄° 
≥rs⁄Æôy_èbÀ_°ru˘
 
≥rs⁄Æôy_èbÀ
[] = {

151 {"390", &&
ˇ£_390
},

152 {"aix", &&
ˇ£_aix
},

153 {"bsd", &&
ˇ£_bsd
},

154 {"com∑q", &&
ˇ£_com∑q
},

155 {"debün", &&
ˇ£_debün
},

156 {"deÁu…", &&
ˇ£_deÁu…
},

157 {"digôÆ", &&
ˇ£_digôÆ
},

158 {"gnu", &&
ˇ£_gnu
},

159 {"hp", &&
ˇ£_hp
},

160 {"hpux", &&
ˇ£_hpux
},

161 {"úix", &&
ˇ£_úix
},

162 {"löux", &&
ˇ£_löux
},

163 {"ﬁd", &&
ˇ£_ﬁd
},

164 {"os390", &&
ˇ£_os390
},

165 {"posix", &&
ˇ£_posix
},

166 {"s390", &&
ˇ£_s390
},

167 {"sco", &&
ˇ£_sco
},

168 {"sgi", &&
ˇ£_sgi
},

169 {"sﬁ¨is2", &&
ˇ£_sﬁ¨is2
},

170 {"sunos4", &&
ˇ£_sunos4
},

171 {"sysv", &&
ˇ£_sysv
},

172 {"åu64", &&
ˇ£_åu64
},

173 {"unix", &&
ˇ£_unix
},

174 {"unix95", &&
ˇ£_unix95
},

175 {"unix98", &&
ˇ£_unix98
},

176 {"unknown", &&
ˇ£_unknown
}

178 c⁄° 
≥rs⁄Æôy_èbÀ_cou¡
 = (
≥rs⁄Æôy_èbÀ
)/(
≥rs⁄Æôy_èbÀ_°ru˘
);

180 
≥rs⁄Æôy
 = 0;

181 
¥e„r_bsd_deÁu…s
 = 0;

183 
bsd_j_f‹m©
 = "OL_j";

184 
bsd_l_f‹m©
 = "OL_l";

185 
bsd_s_f‹m©
 = "OL_s";

186 
bsd_u_f‹m©
 = "OL_u";

187 
bsd_v_f‹m©
 = "OL_v";

190 
sysv_f_f‹m©
 = 
NULL
;

191 
sysv_Ê_f‹m©
 = 
NULL
;

192 
sysv_j_f‹m©
 = 
NULL
;

193 
sysv_l_f‹m©
 = 
NULL
;

195 
s
 = 
	`gëív
("PS_PERSONALITY");

196 if(!
s
 || !*sË†
	`gëív
("CMD_ENV");

197 if(!
s
 || !*s) s="unknown";

198 if(
	`gëív
("I_WANT_A_BROKEN_PS")Ë
s
="old";

199 
¶
 = 
	`°æí
(
s
);

200 if(
¶
 > 15)  "Environment specifiedán unknownÖersonality.";

201 
	`°∫˝y
(
buf
, 
s
, 
¶
);

202 
buf
[
¶
] = '\0';

203 
ßved_≥rs⁄Æôy_ãxt
 = 
	`°rdup
(
buf
);

205 
found
 = 
	`b£¨ch
(&
födme
, 
≥rs⁄Æôy_èbÀ
, 
≥rs⁄Æôy_èbÀ_cou¡
,

206 (
≥rs⁄Æôy_èbÀ_°ru˘
), 
com∑ª_≥rs⁄Æôy_èbÀ_°ru˘s


209 if(!
found
)  "Environment specifiedán unknownÖersonality.";

211 *(
found
->
jump
);

213 
ˇ£_bsd
:

214 
≥rs⁄Æôy
 = 
PER_FORCE_BSD
 | 
PER_BSD_h
 | 
PER_BSD_m
;

215 
¥e„r_bsd_deÁu…s
 = 1;

216 
bsd_j_f‹m©
 = "FB_j";

217 
bsd_l_f‹m©
 = "FB_l";

219 
bsd_u_f‹m©
 = "FB_u";

220 
bsd_v_f‹m©
 = "FB_v";

221  
NULL
;

223 
ˇ£_ﬁd
:

224 
≥rs⁄Æôy
 = 
PER_FORCE_BSD
 | 
PER_OLD_m
;

225 
¥e„r_bsd_deÁu…s
 = 1;

226  
NULL
;

228 
ˇ£_debün
:

229 
ˇ£_gnu
:

230 
≥rs⁄Æôy
 = 
PER_GOOD_o
 | 
PER_CUMUL_MARKED
 | 
PER_OLD_m
;

231 
¥e„r_bsd_deÁu…s
 = 1;

232 
sysv_f_f‹m©
 = "RD_f";

234 
sysv_j_f‹m©
 = "RD_j";

235 
sysv_l_f‹m©
 = "RD_l";

236  
NULL
;

238 
ˇ£_löux
:

239 
≥rs⁄Æôy
 = 
PER_GOOD_o
 | 
PER_ZAP_ADDR
 | 
PER_SANE_USER
;

240  
NULL
;

242 
ˇ£_deÁu…
:

243  
NULL
;

245 
ˇ£_unknown
:

247 
	`gëív
("UNIX95")

248 || 
	`gëív
("POSIXLY_CORRECT")

249 || (
	`gëív
("POSIX2"Ë&& !
	`°rcmp
(getenv("POSIX2"), "on"))

250 Ë
≥rs⁄Æôy
 = 
PER_BROKEN_o
;

251  
NULL
;

253 
ˇ£_aix
:

254 
bsd_j_f‹m©
 = "FB_j";

255 
bsd_l_f‹m©
 = "FB_l";

257 
bsd_u_f‹m©
 = "FB_u";

258 
bsd_v_f‹m©
 = "FB_v";

259  
NULL
;

261 
ˇ£_åu64
:

262 
ˇ£_com∑q
:

263 
ˇ£_digôÆ
:

264 
≥rs⁄Æôy
 = 
PER_GOOD_o
 | 
PER_BSD_h
;

265 
¥e„r_bsd_deÁu…s
 = 1;

266 
sysv_f_f‹m©
 = "F5FMT";

267 
sysv_Ê_f‹m©
 = "FL5FMT";

268 
sysv_j_f‹m©
 = "JFMT";

269 
sysv_l_f‹m©
 = "L5FMT";

270 
bsd_j_f‹m©
 = "JFMT";

271 
bsd_l_f‹m©
 = "LFMT";

272 
bsd_s_f‹m©
 = "SFMT";

273 
bsd_u_f‹m©
 = "UFMT";

274 
bsd_v_f‹m©
 = "VFMT";

275  
NULL
;

277 
ˇ£_sunos4
:

278 
≥rs⁄Æôy
 = 
PER_NO_DEFAULT_g
;

279 
¥e„r_bsd_deÁu…s
 = 1;

280 
bsd_j_f‹m©
 = "FB_j";

281 
bsd_l_f‹m©
 = "FB_l";

283 
bsd_u_f‹m©
 = "FB_u";

284 
bsd_v_f‹m©
 = "FB_v";

285  
NULL
;

287 
ˇ£_úix
:

288 
ˇ£_sgi
:

289 
s
 = 
	`gëív
("_XPG");

290 if(
s
 && s[0]>'0' && s[0]<='9'Ë
≥rs⁄Æôy
 = 
PER_BROKEN_o
;

291 
≥rs⁄Æôy
 = 
PER_IRIX_l
;

292  
NULL
;

294 
ˇ£_os390
:

295 
ˇ£_s390
:

296 
ˇ£_390
:

297 
sysv_j_f‹m©
 = "J390";

298  
NULL
;

300 
ˇ£_hp
:

301 
ˇ£_hpux
:

302 
ˇ£_posix
:

303 
ˇ£_sco
:

304 
ˇ£_sﬁ¨is2
:

305 
ˇ£_sysv
:

306 
ˇ£_unix95
:

307 
ˇ£_unix98
:

308 
ˇ£_unix
:

309 
≥rs⁄Æôy
 = 
PER_BROKEN_o
;

310  
NULL
;

311 
	}
}

315 
	$ª£t_globÆ
(){

316 
¥oc_t
 
p
;

317 
	`ª£t_£À˘i⁄_li°
();

318 
	`look_up_our_£lf
(&
p
);

319 
	`£t_s¸ìn_size
();

320 
	`£t_≥rs⁄Æôy
();

322 
Æl_¥o˚s£s
 = 0;

323 
bsd_c_›ti⁄
 = 0;

324 
bsd_e_›ti⁄
 = 0;

325 
ˇched_euid
 = 
	`gëeuid
();

326 
ˇched_ây
 = 
p
.
ây
;

328 
f‹e°_ty≥
 = 0;

329 
f‹m©_Êags
 = 0;

330 
f‹m©_li°
 = 
NULL
;

331 
f‹m©_modifõrs
 = 0;

332 
hódî_g≠
 = -1;

333 
hódî_ty≥
 = 
HEAD_SINGLE
;

334 
ö˛ude_dód_chûdªn
 = 0;

335 
löes_to_√xt_hódî
 = 1;

336 
«mñi°_fûe
 = 
NULL
;

337 
√g©e_£À˘i⁄
 = 0;

338 
ru¬ög_⁄ly
 = 0;

339 
£c⁄ds_sö˚_boŸ
 = 
	`u±ime
(0,0);

340 
£À˘i⁄_li°
 = 
NULL
;

341 
sim∂e_£À˘
 = 0;

342 
s‹t_li°
 = 
NULL
;

343 
unix_f_›ti⁄
 = 0;

344 
u£r_is_numbî
 = 0;

345 
wch™_is_numbî
 = 0;

346 
	}
}

349 
	$£lf_öfo
(){

350 
	`Ârötf
(
°dîr
,

361 
bsd_j_f‹m©
 ? bsd_j_format : "(none)",

362 
bsd_l_f‹m©
 ? bsd_l_format : "(none)",

363 
bsd_s_f‹m©
 ? bsd_s_format : "(none)",

364 
bsd_u_f‹m©
 ? bsd_u_format : "(none)",

365 
bsd_v_f‹m©
 ? bsd_v_format : "(none)",

366 
sysv_f_f‹m©
 ? sysv_f_format : "(none)",

367 
sysv_Ê_f‹m©
 ? sysv_fl_format : "(none)",

368 
sysv_j_f‹m©
 ? sysv_j_format : "(none)",

369 
sysv_l_f‹m©
 ? sysv_l_format : "(none)"

372 
	`di•œy_vîsi⁄
();

373 
	`Ârötf
(
°dîr
, "Linux version %d.%d.%d\n",

374 
	`LINUX_VERSION_MAJOR
(
löux_vîsi⁄_code
),

375 
	`LINUX_VERSION_MINOR
(
löux_vîsi⁄_code
),

376 
	`LINUX_VERSION_PATCH
(
löux_vîsi⁄_code
)

379 
	`Ârötf
(
°dîr
, "Compiled with:Üibc %d, internal version %d.%d\n\n",

380 
__GNU_LIBRARY__
, 
__GLIBC__
, 
__GLIBC_MINOR__


383 
	`Ârötf
(
°dîr
,

387 
hódî_g≠
, 
löes_to_√xt_hódî
,

388 
s¸ìn_cﬁs
, 
s¸ìn_rows


392 
	`Ârötf
(
°dîr
,

397 
≥rs⁄Æôy
, 
ßved_≥rs⁄Æôy_ãxt
,

398 
ˇched_euid
, ()
	`maj‹
(
ˇched_ây
), ()
	`mö‹
(ˇched_ây), 
Hîtz


401 
	}
}

	@ps/help.c

16 #ifde‡
HAVE_CONFIG_H


17 
	~"c⁄fig.h
"

20 c⁄° *
	ghñp_mesßge
 =

38 #ifde‡
FLASK_LINUX


	@ps/output.c

41 #ifde‡
HAVE_CONFIG_H


42 
	~"c⁄fig.h
"

46 
	#PO
(
q
Ë(()(&(((
¥oc_t
*)0)->q)))

	)

48 
	~<˘y≥.h
>

49 
	~<f˙é.h
>

50 
	~<gΩ.h
>

51 
	~<limôs.h
>

52 
	~<pwd.h
>

53 
	~<°dio.h
>

54 
	~<°dlib.h
>

55 
	~<°rög.h
>

56 
	~<sys/io˘l.h
>

57 
	~<sys/ªsour˚.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<sys/mm™.h
>

60 
	~<time.h
>

61 
	~<uni°d.h
>

63 
	~"../¥oc/ªad¥oc.h
"

64 
	~"../¥oc/sysöfo.h
"

65 
	~"../¥oc/¥o˝s.h
"

66 
	~"../¥oc/dev«me.h
"

67 
	~"comm⁄.h
"

69 #ifde‡
FLASK_LINUX


70 
	~<î∫o.h
>

71 
	~<fs_£cuª.h
>

72 
	~<ss.h
>

73 
	#DEF_CTXTLEN
 255

	)

81 
	#COLWID
 240

	)

83 
	gwhôe•a˚_™d_outbuf
[
OUTBUF_SIZE
 + 
SPACE_AMOUNT
 + 
PAGE_SIZE
*2];

84 *
	goutbuf
 = 
whôe•a˚_™d_outbuf
+
SPACE_AMOUNT
;

85 *
	gwhôe•a˚
 = 
whôe•a˚_™d_outbuf
;

86 
	gmax_rightw¨d
 = 0x12345678;

87 
	gmax_À·w¨d
 = 0x12345678;

90 
	#JUST_MASK
 0x0f

	)

92 
	#USER
 1

	)

93 
	#LEFT
 2

	)

94 
	#RIGHT
 3

	)

95 
	#UNLIMITED
 4

	)

96 
	#WCHAN
 5

	)

97 
	#SIGNAL
 6

	)

99 
	#CUMUL
 16

	)

101 
	gwide_sig«ls
;

103 
¥oc_t
 *
	gµ
;

105 
	g£c⁄ds_sö˚_1970
;

106 
	gtime_of_boŸ
;

107 
	g∑ge_shi·
;

113 
	$§_n›
(c⁄° 
¥oc_t
* 
a
, c⁄°Öroc_t* 
b
){

114 ()
a
;()
b
;

116 
	}
}

118 
	#CMP_STR
(
NAME
) \

119 
§_
 ## 
	`NAME
(c⁄° 
¥oc_t
* 
P
, c⁄°Öroc_t* 
Q
) { \

120  
	`°rcmp
(
P
->
NAME
, 
Q
->NAME); \

121 }

	)

123 
	#CMP_INT
(
NAME
) \

124 
§_
 ## 
	`NAME
 (c⁄° 
¥oc_t
* 
P
, c⁄°Öroc_t* 
Q
) { \

125 i‡(
P
->
NAME
 < 
Q
->NAME)  -1; \

126 i‡(
P
->
NAME
 > 
Q
->NAME)  1; \

128 }

	)

134 
	#CMP_SMALL
(
NAME
) \

135 
§_
 ## 
	`NAME
 (c⁄° 
¥oc_t
* 
P
, c⁄°Öroc_t* 
Q
) { \

136  ()(
P
->
NAME
Ë- ()(
Q
->NAME); \

137 }

	)

139 
	$CMP_INT
(
π¥io
)

140 
	$CMP_SMALL
(
sched
)

141 
	$CMP_INT
(
cutime
)

142 
	$CMP_INT
(
c°ime
)

143 
	$CMP_SMALL
(
¥i‹ôy
)

144 
	$CMP_INT
(
timeout
)

145 
	$CMP_SMALL
(
ni˚
)

146 
	$CMP_INT
(
rss
)

147 
	$CMP_INT
(
ô_ªÆ_vÆue
)

148 
	$CMP_INT
(
size
)

149 
	$CMP_INT
(
ªsidít
)

150 
	$CMP_INT
(
sh¨e
)

151 
	$CMP_INT
(
ås
)

152 
	$CMP_INT
(
Ãs
)

153 
	$CMP_INT
(
drs
)

154 
	$CMP_INT
(
dt
)

156 
	$CMP_INT
(
vm_size
)

157 
	$CMP_INT
(
vm_lock
)

158 
	$CMP_INT
(
vm_rss
)

159 
	$CMP_INT
(
vm_d©a
)

160 
	$CMP_INT
(
vm_°ack
)

161 
	$CMP_INT
(
vm_exe
)

162 
	$CMP_INT
(
vm_lib
)

163 
	$CMP_INT
(
vsize
)

164 
	$CMP_INT
(
rss_æim
)

165 
	$CMP_SMALL
(
Êags
)

166 
	$CMP_INT
(
mö_Êt
)

167 
	$CMP_INT
(
maj_Êt
)

168 
	$CMP_INT
(
cmö_Êt
)

169 
	$CMP_INT
(
cmaj_Êt
)

170 
	$CMP_INT
(
nsw≠
)

171 
	$CMP_INT
(
˙sw≠
)

172 
	$CMP_INT
(
utime
)

173 
	$CMP_INT
(
°ime
)

174 
	$CMP_INT
(
°¨t_code
)

175 
	$CMP_INT
(
íd_code
)

176 
	$CMP_INT
(
°¨t_°ack
)

177 
	$CMP_INT
(
k°k_e•
)

178 
	$CMP_INT
(
k°k_eù
)

179 
	$CMP_INT
(
°¨t_time
)

180 
	$CMP_INT
(
wch™
)

185 
	$CMP_STR
(
ru£r
)

186 
	$CMP_STR
(
eu£r
)

187 
	$CMP_STR
(
su£r
)

188 
	$CMP_STR
(
fu£r
)

189 
	$CMP_STR
(
rgroup
)

190 
	$CMP_STR
(
egroup
)

191 
	$CMP_STR
(
sgroup
)

192 
	$CMP_STR
(
fgroup
)

193 
	$CMP_STR
(
cmd
)

196 
	$CMP_INT
(
ruid
)

197 
	$CMP_INT
(
rgid
)

198 
	$CMP_INT
(
euid
)

199 
	$CMP_INT
(
egid
)

200 
	$CMP_INT
(
suid
)

201 
	$CMP_INT
(
sgid
)

202 
	$CMP_INT
(
fuid
)

203 
	$CMP_INT
(
fgid
)

204 
	$CMP_SMALL
(
pid
)

205 
	$CMP_SMALL
(
µid
)

206 
	$CMP_SMALL
(
pgΩ
)

207 
	$CMP_SMALL
(
£ssi⁄
)

208 
	$CMP_INT
(
ây
)

209 
	$CMP_SMALL
(
çgid
)

211 
	$CMP_SMALL
(
p˝u
)

213 
	$CMP_SMALL
(
°©e
)

216 
	$§_sw≠abÀ
(c⁄° 
¥oc_t
* 
P
, c⁄°Öroc_t* 
Q
) {

217 
p_sw≠abÀ
 = 
P
->
vm_d©a
 + P->
vm_°ack
;

218 
q_sw≠abÀ
 = 
Q
->
vm_d©a
 + Q->
vm_°ack
;

219 i‡(
p_sw≠abÀ
 < 
q_sw≠abÀ
)  -1;

220 i‡(
p_sw≠abÀ
 > 
q_sw≠abÀ
)  1;

222 
	}
}

228 
	$¥_n›
(){

229  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%c", '-');

230 
	}
}

302 
	$f‹e°_hñ≥r
(){

303 *
p
 = 
f‹e°_¥efix
;

304 *
q
 = 
outbuf
;

305 if(!*
p
)  0;

307 if(
f‹e°_ty≥
 ='u'Ë
unixy
;

308 *
p
){

309 *
p
){

310 ' ': 
	`°r˝y
(
q
, " "); ;

311 'L': 
	`°r˝y
(
q
, " \\_ "); ;

312 '+': 
	`°r˝y
(
q
, " \\_ "); ;

313 '|': 
	`°r˝y
(
q
, " | "); ;

314 '\0':  
q
-
outbuf
;

316 
q
 += 4;

317 
p
++;

319  
q
-
outbuf
;

320 
unixy
:

321 *
p
){

322 *
p
){

323 ' ': 
	`°r˝y
(
q
, " "); ;

324 'L': 
	`°r˝y
(
q
, " "); ;

325 '+': 
	`°r˝y
(
q
, " "); ;

326 '|': 
	`°r˝y
(
q
, " "); ;

327 '\0':  
q
-
outbuf
;

329 
q
 += 2;

330 
p
++;

332  
q
-
outbuf
;

333 
	}
}

348 
	$¥_¨gs
(){

349 *
ídp
;

350 
ídp
 = 
outbuf
 + 
	`f‹e°_hñ≥r
();

351 if(
bsd_c_›ti⁄
){

352 
ídp
 +
	`esˇ≥_°r
”ndp, 
µ
->
cmd
, 
PAGE_SIZE
);

354 c⁄° **
lc
 = (c⁄° **)
µ
->
cmdlöe
;

355 if(
lc
 && *lc) {

356 
ídp
 +
	`esˇ≥_°æi°
”ndp, 
lc
, 
OUTBUF_SIZE
);

358 
buf
[
ESC_STRETCH
*
PAGE_SIZE
];

359 
	`esˇ≥_°r
(
buf
, 
µ
->
cmd
, 
ESC_STRETCH
*
PAGE_SIZE
);

360 
ídp
 +
	`¢¥ötf
”ndp, 
COLWID
, "[%s]", 
buf
);

363 if(
bsd_e_›ti⁄
){

364 c⁄° **
ív
 = (c⁄° **)
µ
->
ívú⁄
;

365 if(
ív
 && *env){

366 *
ídp
++ = ' ';

367 
ídp
 +
	`esˇ≥_°æi°
”ndp, 
ív
, 
OUTBUF_SIZE
);

370  
ídp
 - 
outbuf
;

371 
	}
}

374 
	$¥_comm
(){

375 *
ídp
;

376 
ídp
 = 
outbuf
 + 
	`f‹e°_hñ≥r
();

377 if(!
unix_f_›ti⁄
){

378 
ídp
 +
	`esˇ≥_°r
”ndp, 
µ
->
cmd
, 
PAGE_SIZE
);

380 c⁄° **
lc
 = (c⁄° **)
µ
->
cmdlöe
;

381 if(
lc
 && *lc) {

382 
ídp
 +
	`esˇ≥_°æi°
”ndp, 
lc
, 
OUTBUF_SIZE
);

384 
buf
[
ESC_STRETCH
*
PAGE_SIZE
];

385 
	`esˇ≥_°r
(
buf
, 
µ
->
cmd
, 
ESC_STRETCH
*
PAGE_SIZE
);

386 
ídp
 +
	`¢¥ötf
”ndp, 
COLWID
, "[%s]", 
buf
);

389 if(
bsd_e_›ti⁄
){

390 c⁄° **
ív
 = (c⁄° **)
µ
->
ívú⁄
;

391 if(
ív
 && *env){

392 *
ídp
++ = ' ';

393 
ídp
 +
	`esˇ≥_°æi°
”ndp, 
ív
, 
OUTBUF_SIZE
);

396  
ídp
 - 
outbuf
;

397 
	}
}

399 
	$¥_‚ame
(){

400 *
ídp
;

401 
ídp
 = 
outbuf
 + 
	`f‹e°_hñ≥r
();

402 
ídp
 +
	`esˇ≥_°r
”ndp, 
µ
->
cmd
, 8);

403  
ídp
 - 
outbuf
;

404 
	}
}

407 
	$¥_ëime
(){

408 
t
;

409 
dd
,
hh
,
mm
,
ss
;

410 *
˝
 = 
outbuf
;

411 
t
 = 
£c⁄ds_sö˚_boŸ
 - ()(
µ
->
°¨t_time
 / 
Hîtz
);

412 
ss
 = 
t
%60;

413 
t
 /= 60;

414 
mm
 = 
t
%60;

415 
t
 /= 60;

416 
hh
 = 
t
%24;

417 
t
 /= 24;

418 
dd
 = 
t
;

419 
˝
 +=–
dd
 ? 
	`¢¥ötf
(˝, 
COLWID
, "%u-", dd) : 0 );

420 
˝
 +=–(
dd
 || 
hh
Ë? 
	`¢¥ötf
(˝, 
COLWID
, "%02u:", hh) : 0 );

421 
˝
 +
	`¢¥ötf
(˝, 
COLWID
, "%02u:%02u", 
mm
, 
ss
) ;

422  ()(
˝
-
outbuf
);

423 
	}
}

424 
	$¥_ni˚
(){

425  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
ni˚
);

426 
	}
}

429 
	$¥_c
(){

430 
tŸÆ_time
;

431 
p˝u
 = 0;

432 
£c⁄ds
;

433 
tŸÆ_time
 = 
µ
->
utime
 +Öp->
°ime
;

434 if(
ö˛ude_dód_chûdªn
Ë
tŸÆ_time
 +(
µ
->
cutime
 +Öp->
c°ime
);

435 
£c⁄ds
 = 
£c⁄ds_sö˚_boŸ
 - 
µ
->
°¨t_time
 / 
Hîtz
;

436 if(
£c⁄ds
Ë
p˝u
 = (
tŸÆ_time
 * 100ULL / 
Hîtz
) / seconds;

437 i‡(
p˝u
 > 99U)Öcpu = 99U;

438  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%2u", 
p˝u
);

439 
	}
}

441 
	$¥_p˝u
(){

442 
tŸÆ_time
;

443 
p˝u
 = 0;

444 
£c⁄ds
;

445 
tŸÆ_time
 = 
µ
->
utime
 +Öp->
°ime
;

446 if(
ö˛ude_dód_chûdªn
Ë
tŸÆ_time
 +(
µ
->
cutime
 +Öp->
c°ime
);

447 
£c⁄ds
 = 
£c⁄ds_sö˚_boŸ
 - 
µ
->
°¨t_time
 / 
Hîtz
;

448 if(
£c⁄ds
Ë
p˝u
 = (
tŸÆ_time
 * 1000ULL / 
Hîtz
) / seconds;

449 i‡(
p˝u
 > 999U)Öcpu = 999U;

450  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%2u.%u", 
p˝u
/10U,Öcpu%10U);

451 
	}
}

453 
	$¥_˝
(){

454 
tŸÆ_time
;

455 
p˝u
 = 0;

456 
£c⁄ds
;

457 
tŸÆ_time
 = 
µ
->
utime
 +Öp->
°ime
;

458 if(
ö˛ude_dód_chûdªn
Ë
tŸÆ_time
 +(
µ
->
cutime
 +Öp->
c°ime
);

459 
£c⁄ds
 = 
£c⁄ds_sö˚_boŸ
 - 
µ
->
°¨t_time
 / 
Hîtz
 ;

460 if(
£c⁄ds
Ë
p˝u
 = (
tŸÆ_time
 * 1000ULL / 
Hîtz
) / seconds;

461 i‡(
p˝u
 > 999U)Öcpu = 999U;

462  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%3u", 
p˝u
);

463 
	}
}

465 
	$¥_pgid
(){

466  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u", 
µ
->
pgΩ
);

467 
	}
}

468 
	$¥_pid
(){

469  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u", 
µ
->
pid
);

470 
	}
}

471 
	$¥_µid
(){

472  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u", 
µ
->
µid
);

473 
	}
}

477 
	$¥_time
(){

478 
t
;

479 
dd
,
hh
,
mm
,
ss
;

480 
c
;

481 
t
 = (
µ
->
utime
 +Öp->
°ime
Ë/ 
Hîtz
;

482 
ss
 = 
t
%60;

483 
t
 /= 60;

484 
mm
 = 
t
%60;

485 
t
 /= 60;

486 
hh
 = 
t
%24;

487 
t
 /= 24;

488 
dd
 = 
t
;

489 
c
 =–
dd
 ? 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u-", dd) : 0 );

490 
c
 +=–
	`¢¥ötf
(
outbuf
+c, 
COLWID
, "%02u:%02u:%02u", 
hh
, 
mm
, 
ss
) );

491  
c
;

492 
	}
}

502 
	$¥_vsz
(){

503  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%lu", 
µ
->
vm_size
);

504 
	}
}

512 
	$¥_ru£r
(){

513 
width
 = 
COLWID
;

515 if(
u£r_is_numbî
)

516  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
ruid
);

517 i‡(
	`°æí
(
µ
->
ru£r
)>
max_rightw¨d
)

518 
width
 = 
max_rightw¨d
;

519  
	`¢¥ötf
(
outbuf
, 
width
, "%s", 
µ
->
ru£r
);

520 
	}
}

521 
	$¥_egroup
(){

522 if(
	`°æí
(
µ
->
egroup
)>
max_rightw¨d
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d",Öp->
egid
);

523  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
µ
->
egroup
);

524 
	}
}

525 
	$¥_rgroup
(){

526 if(
	`°æí
(
µ
->
rgroup
)>
max_rightw¨d
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d",Öp->
rgid
);

527  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
µ
->
rgroup
);

528 
	}
}

529 
	$¥_eu£r
(){

530 
width
 = 
COLWID
;

531 if(
u£r_is_numbî
)

532  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
euid
);

533 i‡(
	`°æí
(
µ
->
eu£r
)>
max_rightw¨d
)

534 
width
 = 
max_rightw¨d
;

535  
	`¢¥ötf
(
outbuf
, 
width
, "%s", 
µ
->
eu£r
);

536 
	}
}

548 
	$¥_¥i‹ôy
(){

549  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
¥i‹ôy
);

550 
	}
}

551 
	$¥_¥i
(){

552  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 39 - 
µ
->
¥i‹ôy
);

553 
	}
}

554 
	$¥_›ri
(){

555  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 60 + 
µ
->
¥i‹ôy
);

556 
	}
}

558 
	$¥_wch™
(){

571 if(!(
µ
->
wch™
 & 0xffffff)Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", "-");

572 if(
wch™_is_numbî
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%lx", 
µ
->
wch™
 & 0xffffff);

573  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
	`wch™
(
µ
->
wch™
));

574 
	}
}

578 
	$¥_ây4
(){

580  
	`dev_to_ây
(
outbuf
, 4, 
µ
->
ây
,Öp->
pid
, 
ABBREV_DEV
|
ABBREV_TTY
|
ABBREV_PTS
);

581 
	}
}

584 
	$¥_ây8
(){

586  
	`dev_to_ây
(
outbuf
, 
PAGE_SIZE
-1, 
µ
->
ây
,Öp->
pid
, 
ABBREV_DEV
);

587 
	}
}

591 
	$¥_ﬁd°©e
(){

592  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
	`°©us
(
µ
));

593 
	}
}

597 
	$¥_°©
(){

598 
íd
 = 0;

599 
outbuf
[
íd
++] = 
µ
->
°©e
;

600 if(
µ
->
rss
 =0 &&Öp->
°©e
 !'Z'Ë
outbuf
[
íd
++] = 'W';

601 if(
µ
->
ni˚
 < 0Ë
outbuf
[
íd
++] = '<';

602 if(
µ
->
ni˚
 > 0Ë
outbuf
[
íd
++] = 'N';

603 if(
µ
->
vm_lock
Ë
outbuf
[
íd
++] = 'L';

604 
outbuf
[
íd
] = '\0';

605  
íd
;

606 
	}
}

609 
	$¥_s
(){

610 
outbuf
[0] = 
µ
->
°©e
;

611 
outbuf
[1] = '\0';

613 
	}
}

615 
	$¥_Êag
(){

618  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%o", ()(
µ
->
Êags
>>6U)&0x7U);

619 
	}
}

621 
	$¥_euid
(){

622  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
euid
);

623 
	}
}

639 
	$¥_°ackp
(){

640  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%08lx", 
µ
->
°¨t_°ack
);

641 
	}
}

643 
	$¥_e•
(){

644  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%08lx", 
µ
->
k°k_e•
);

645 
	}
}

647 
	$¥_eù
(){

648  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%08lx", 
µ
->
k°k_eù
);

649 
	}
}

652 
	$ﬁd_time_hñ≥r
(*
d°
, 
t
, 
ªl
) {

653 if(!
t
Ë 
	`¢¥ötf
(
d°
, 
COLWID
, " -");

654 if(
t
 =~0ULLË 
	`¢¥ötf
(
d°
, 
COLWID
, " xx");

655 if(()(
t
-=
ªl
) < 0)Å=0ULL;

656 if(
t
>9999ULLË 
	`¢¥ötf
(
d°
, 
COLWID
, "%5Lu",Å/100ULL);

657  
	`¢¥ötf
(
d°
, 
COLWID
, "%2u.%02u", ()
t
/100U, ()t%100U);

658 
	}
}

660 
	$¥_bsdtime
(){

661 
t
;

662 
u
;

663 
t
 = 
µ
->
utime
 +Öp->
°ime
;

664 if(
ö˛ude_dód_chûdªn
Ë
t
 +(
µ
->
cutime
 +Öp->
c°ime
);

665 
u
 = 
t
 / 
Hîtz
;

666  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%3u:%02u", 
u
/60U, u%60U);

667 
	}
}

669 
	$¥_bsd°¨t
(){

670 
time_t
 
°¨t
;

671 
time_t
 
£c⁄ds_ago
;

672 
°¨t
 = 
time_of_boŸ
 + 
µ
->
°¨t_time
 / 
Hîtz
;

673 
£c⁄ds_ago
 = 
£c⁄ds_sö˚_1970
 - 
°¨t
;

674 if(
£c⁄ds_ago
 < 0) seconds_ago=0;

675 if(
£c⁄ds_ago
 > 3600*24Ë
	`°r˝y
(
outbuf
, 
	`˘ime
(&
°¨t
)+4);

676 
	`°r˝y
(
outbuf
, 
	`˘ime
(&
°¨t
)+10);

677 
outbuf
[6] = '\0';

679 
	}
}

681 
	$¥_timeout
(){

682  
	`ﬁd_time_hñ≥r
(
outbuf
, 
µ
->
timeout
, 
£c⁄ds_sö˚_boŸ
*
Hîtz
);

683 
	}
}

685 
	$¥_Æ¨m
(){

686  
	`ﬁd_time_hñ≥r
(
outbuf
, 
µ
->
ô_ªÆ_vÆue
, 0ULL);

687 
	}
}

690 
	$¥_sz
(){

691  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%lu", (
µ
->
vm_size
)/(
PAGE_SIZE
/1024));

692 
	}
}

711 
	$¥_dsiz
(){

712 
dsiz
 = 0;

713 if(
µ
->
vsize
Ë
dsiz
 +’p->vsizê-Öp->
íd_code
 +Öp->
°¨t_code
) >> 10;

714  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
dsiz
);

715 
	}
}

718 
	$¥_tsiz
(){

719 
tsiz
 = 0;

720 if(
µ
->
vsize
Ë
tsiz
 +’p->
íd_code
 -Öp->
°¨t_code
) >> 10;

721  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
tsiz
);

722 
	}
}

725 
	$¥_drs
(){

726 
drs
 = 0;

727 if(
µ
->
vsize
Ë
drs
 +’p->vsizê-Öp->
íd_code
 +Öp->
°¨t_code
) >> 10;

728  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
drs
);

729 
	}
}

732 
	$¥_ås
(){

733 
ås
 = 0;

734 if(
µ
->
vsize
Ë
ås
 +’p->
íd_code
 -Öp->
°¨t_code
) >> 10;

735  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
ås
);

736 
	}
}

739 
	$¥_sw≠abÀ
() {

740  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
vm_d©a
 +Öp->
vm_°ack
);

741 
	}
}

744 
	$¥_size
() {

745  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
size
);

746 
	}
}

749 
	$¥_möÊt
(){

750 
Êt
 = 
µ
->
mö_Êt
;

751 if(
ö˛ude_dód_chûdªn
Ë
Êt
 +
µ
->
cmö_Êt
;

752  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
Êt
);

753 
	}
}

755 
	$¥_majÊt
(){

756 
Êt
 = 
µ
->
maj_Êt
;

757 if(
ö˛ude_dód_chûdªn
Ë
Êt
 +
µ
->
cmaj_Êt
;

758  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
Êt
);

759 
	}
}

761 
	$¥_lim
(){

762 if(
µ
->
rss_æim
 =
RLIM_INFINITY
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", "xx");

763  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%5ld", 
µ
->
rss_æim
 >> 10);

764 
	}
}

767 
	$¥_p§
(){

768  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
¥o˚ss‹
);

769 
	}
}

771 
	$¥_w«me
(){

778 if(!(
µ
->
wch™
 & 0xffffff)Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", "-");

779  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
	`wch™
(
µ
->
wch™
));

780 
	}
}

782 
	$¥_nwch™
(){

783 if(!(
µ
->
wch™
 & 0xffffff)Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "-");

784  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%lx", 
µ
->
wch™
 & 0xffffff);

785 
	}
}

787 
	$¥_rss
(){

788  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%lu", 
µ
->
vm_rss
);

789 
	}
}

792 
	$¥_pmem
(){

793 
pmem
 = 0;

794 
pmem
 = 
µ
->
vm_rss
 * 1000ULL / 
kb_maö_tŸÆ
;

795 i‡(
pmem
 > 999)Ömem = 999;

796  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%2u.%u", ()(
pmem
/10), ()(pmem%10));

797 
	}
}

799 
	$¥_˛ass
(){

800 
µ
->
sched
){

801 -1:  
	`¢¥ötf
(
outbuf
, 
COLWID
, "-");

802 0:  
	`¢¥ötf
(
outbuf
, 
COLWID
, "TS");

803 1:  
	`¢¥ötf
(
outbuf
, 
COLWID
, "FF");

804 2:  
	`¢¥ötf
(
outbuf
, 
COLWID
, "RR");

805 :  
	`¢¥ötf
(
outbuf
, 
COLWID
, "?");

807 
	}
}

808 
	$¥_π¥io
(){

809 if(
µ
->
sched
==0 ||Öp->sched==-1Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "-");

810  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
π¥io
);

811 
	}
}

812 
	$¥_sched
(){

813 if(
µ
->
sched
==-1Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "-");

814  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%ld", 
µ
->
sched
);

815 
	}
}

817 
	$¥_l°¨t
(){

818 
time_t
 
t
;

819 
t
 = 
time_of_boŸ
 + 
µ
->
°¨t_time
 / 
Hîtz
;

820  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%24.24s", 
	`˘ime
(&
t
));

821 
	}
}

832 
	$¥_°ime
(){

833 
tm
 *
¥oc_time
;

834 
tm
 *
our_time
;

835 
time_t
 
t
;

836 c⁄° *
fmt
;

837 
tm_yór
;

838 
tm_yday
;

839 
our_time
 = 
	`loˇ…ime
(&
£c⁄ds_sö˚_1970
);

840 
tm_yór
 = 
our_time
->tm_year;

841 
tm_yday
 = 
our_time
->tm_yday;

842 
t
 = 
time_of_boŸ
 + 
µ
->
°¨t_time
 / 
Hîtz
;

843 
¥oc_time
 = 
	`loˇ…ime
(&
t
);

844 
fmt
 = "%H:%M";

845 if(
tm_yday
 !
¥oc_time
->tm_ydayË
fmt
 = "%b%d";

846 if(
tm_yór
 !
¥oc_time
->tm_yórË
fmt
 = "%Y";

847  
	`°r·ime
(
outbuf
, 42, 
fmt
, 
¥oc_time
);

848 
	}
}

850 
	$¥_°¨t
(){

851 
time_t
 
t
;

852 *
°r
;

853 
t
 = 
time_of_boŸ
 + 
µ
->
°¨t_time
 / 
Hîtz
;

854 
°r
 = 
	`˘ime
(&
t
);

855 if(
°r
[8]==' ') str[8]='0';

856 if(
°r
[11]==' ') str[11]='0';

857 if(()
t
+60*60*24 > 
£c⁄ds_sö˚_1970
)

858  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%8.8s", 
°r
+11);

859  
	`¢¥ötf
(
outbuf
, 
COLWID
, " %6.6s", 
°r
+4);

860 
	}
}

863 #ifde‡
SIGNAL_STRING


864 
	$hñp_¥_sig
(c⁄° *
sig
){

865 
Àn
 = 0;

866 
Àn
 = 
	`°æí
(
sig
);

867 if(
wide_sig«ls
){

868 if(
Àn
>8Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
sig
);

869  
	`¢¥ötf
(
outbuf
, 
COLWID
, "00000000%s", 
sig
);

871 if(
Àn
-
	`°r•n
(
sig
,"0") > 8)

872  
	`¢¥ötf
(
outbuf
, 
COLWID
, "<%s", 
sig
+
Àn
-8);

873  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
sig
+
Àn
-8);

874 
	}
}

876 
	$hñp_¥_sig
(
sig
){

877 if(
wide_sig«ls
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%016Lx", 
sig
);

878 if(
sig
>>32Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "<%08Lx", sig&0xffffffffLL);

879  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%08Lx", 
sig
&0xffffffffLL);

880 
	}
}

883 
	$¥_sig
(){

884  
	`hñp_¥_sig
(
µ
->
sig«l
);

885 
	}
}

886 
	$¥_sigmask
(){

887  
	`hñp_¥_sig
(
µ
->
blocked
);

888 
	}
}

889 
	$¥_sigign‹e
(){

890  
	`hñp_¥_sig
(
µ
->
sigign‹e
);

891 
	}
}

892 
	$¥_sigˇtch
(){

893  
	`hñp_¥_sig
(
µ
->
sigˇtch
);

894 
	}
}

897 
	$¥_egid
(){

898  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
egid
);

899 
	}
}

900 
	$¥_rgid
(){

901  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
rgid
);

902 
	}
}

903 
	$¥_sgid
(){

904  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
sgid
);

905 
	}
}

906 
	$¥_fgid
(){

907  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
fgid
);

908 
	}
}

909 
	$¥_ruid
(){

910  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
ruid
);

911 
	}
}

912 
	$¥_suid
(){

913  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
suid
);

914 
	}
}

915 
	$¥_fuid
(){

916  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
fuid
);

917 
	}
}

920 
	$¥_fgroup
(){

921 if(
	`°æí
(
µ
->
fgroup
)>
max_rightw¨d
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d",Öp->
fgid
);

922  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
µ
->
fgroup
);

923 
	}
}

924 
	$¥_sgroup
(){

925 if(
	`°æí
(
µ
->
sgroup
)>
max_rightw¨d
Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d",Öp->
sgid
);

926  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%s", 
µ
->
sgroup
);

927 
	}
}

928 
	$¥_fu£r
(){

929 
width
 = 
COLWID
;

931 if(
u£r_is_numbî
)

932  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
fuid
);

933 i‡(
	`°æí
(
µ
->
fu£r
)>
max_rightw¨d
)

934 
width
 = 
max_rightw¨d
;

935  
	`¢¥ötf
(
outbuf
, 
width
, "%s", 
µ
->
fu£r
);

936 
	}
}

937 
	$¥_su£r
(){

938 
width
 = 
COLWID
;

940 if(
u£r_is_numbî
)

941  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
suid
);

942 i‡(
	`°æí
(
µ
->
su£r
)>
max_rightw¨d
)

943 
width
 = 
max_rightw¨d
;

944  
	`¢¥ötf
(
outbuf
, 
width
, "%s", 
µ
->
su£r
);

945 
	}
}

948 
	$¥_thªad
(){

949  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u", 
µ
->
pid
);

950 
	}
}

951 
	$¥_∆wp
(){

952  
	`¢¥ötf
(
outbuf
, 
COLWID
, "-");

953 
	}
}

955 
	$¥_£ss
(){

956  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%u", 
µ
->
£ssi⁄
);

957 
	}
}

958 
	$¥_çgid
(){

959  
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d", 
µ
->
çgid
);

960 
	}
}

964 
	$¥_sgi_p
(){

965 if(
µ
->
°©e
 ='R'Ë 
	`¢¥ötf
(
outbuf
, 
COLWID
, "%d",Öp->
¥o˚ss‹
);

966  
	`¢¥ötf
(
outbuf
, 
COLWID
, "*");

967 
	}
}

971 #ifde‡
FLASK_LINUX


980 
	$CMP_INT
(
£csid
)

982 
	$¥_£csid
 ( ) {

983  
	`•rötf
(
outbuf
, "%d", (Ë
µ
->
£csid
);

984 
	}
}

986 
	$¥_c⁄ãxt
 ( ) {

987 *
˘xt
;

988 
Àn
;

989 
rv
;

991 
Àn
 = 
DEF_CTXTLEN
;

992 
˘xt
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

993 i‡–
˘xt
 !
NULL
 )

994 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
µ
->
£csid
, (
£curôy_c⁄ãxt_t
Ë
˘xt
, &
Àn
);

996  
	`•rötf
(
outbuf
, "-");

998 i‡–
rv
 ) {

999 i‡–
î∫o
 !
ENOSPC
 ) {

1000 
	`‰ì
(
˘xt
);

1001  
	`•rötf
(
outbuf
, "-");

1003 
	`‰ì
(
˘xt
);

1004 
˘xt
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

1005 i‡–
˘xt
 !
NULL
 ) {

1006 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
µ
->
£csid
, (
£curôy_c⁄ãxt_t
Ë
˘xt
, &
Àn
);

1007 i‡–
rv
 ) {

1008 
	`‰ì
(
˘xt
);

1009  
	`•rötf
(
outbuf
, "-");

1011 
rv
 = 
	`•rötf
(
outbuf
, "%s", 
˘xt
);

1012 
	`‰ì
(
˘xt
);

1013  
rv
;

1016  
	`•rötf
(
outbuf
, "-");

1020 
rv
 = 
	`•rötf
(
outbuf
, "%s", 
˘xt
);

1021 
	`‰ì
(
˘xt
);

1022  
rv
;

1024 
	}
}

1027 
	$§_c⁄ãxt
 ( c⁄° 
¥oc_t
* 
P
, c⁄°Öroc_t* 
Q
 ) {

1028 *
˘xt_P
, *
˘xt_Q
;

1029 
Àn
;

1030 
rv
;

1032 
Àn
 = 
DEF_CTXTLEN
;

1033 
˘xt_P
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

1034 
˘xt_Q
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

1036 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
P
->
£csid
, (
£curôy_c⁄ãxt_t
Ë
˘xt_P
, &
Àn
);

1037 i‡–
rv
 ) {

1038 i‡–
î∫o
 !
ENOSPC
 ) {

1039 
	`‰ì
(
˘xt_P
);

1043 
	`‰ì
(
˘xt_P
);

1044 
˘xt_P
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

1045 i‡–
˘xt_P
 !
NULL
 ) {

1046 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
P
->
£csid
, (
£curôy_c⁄ãxt_t
Ë
˘xt_P
, &
Àn
);

1047 i‡–
rv
 ) {

1048 
	`‰ì
(
˘xt_P
);

1059 
Àn
 = 
DEF_CTXTLEN
;

1061 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
Q
->
£csid
, (
£curôy_c⁄ãxt_t
Ë
˘xt_Q
, &
Àn
);

1062 i‡–
rv
 ) {

1063 i‡–
î∫o
 !
ENOSPC
 ) {

1064 
	`‰ì
(
˘xt_P
);

1065 
	`‰ì
(
˘xt_Q
);

1069 
	`‰ì
(
˘xt_Q
);

1070 
˘xt_Q
 = (*Ë
	`ˇŒoc
(1, 
Àn
);

1071 i‡–
˘xt_Q
 !
NULL
 ) {

1072 
rv
 = 
	`£curôy_sid_to_c⁄ãxt
(
Q
->
sid
, (
£curôy_c⁄ãxt_t
Ë
˘xt_Q
, &
Àn
);

1073 i‡–
rv
 ) {

1074 
	`‰ì
(
˘xt_P
);

1075 
	`‰ì
(
˘xt_Q
);

1081 
	`‰ì
(
˘xt_P
);

1087 
rv
 = 
	`°rcmp
(
˘xt_P
, 
˘xt_Q
);

1089 
	`‰ì
(
˘xt_P
);

1090 
	`‰ì
(
˘xt_Q
);

1092 –
rv
 );

1093 
	}
}

1099 
	#¥_£csid
 
¥_n›


	)

1100 
	#§_£csid
 
§_n›


	)

1101 
	#¥_c⁄ãxt
 
¥_n›


	)

1102 
	#§_c⁄ãxt
 
§_n›


	)

1133 
	#MEM
 
PROC_FILLMEM


	)

1134 
	#ARG
 
PROC_FILLARG


	)

1135 
	#COM
 
PROC_FILLCOM


	)

1136 
	#ENV
 
PROC_FILLENV


	)

1137 
	#USR
 
PROC_FILLUSR


	)

1138 
	#GRP
 
PROC_FILLGRP


	)

1139 
	#WCH
 
PROC_FILLWCHAN


	)

1147 
	#LNx
 
LNX


	)

1152 c⁄° 
f‹m©_°ru˘
 
	gf‹m©_¨øy
[] = {

1154 {"%˝u", "%CPU", 
¥_p˝u
, 
§_p˝u
, 4, 0, 
BSD
, 
RIGHT
},

1155 {"%mem", "%MEM", 
¥_pmem
, 
§_n›
, 4, 0, 
BSD
, 
RIGHT
},

1156 {"acÊag", "ACFLG", 
¥_n›
, 
§_n›
, 5, 0, 
XXX
, 
RIGHT
},

1157 {"acÊg", "ACFLG", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1158 {"addr", "ADDR", 
¥_n›
, 
§_n›
, 4, 0, 
XXX
, 
RIGHT
},

1159 {"addr_1", "ADDR", 
¥_n›
, 
§_n›
, 1, 0, 
LNX
, 
LEFT
},

1160 {"Æ¨m", "ALARM", 
¥_Æ¨m
, 
§_ô_ªÆ_vÆue
, 5, 0, 
LNX
, 
RIGHT
},

1161 {"¨gc", "ARGC", 
¥_n›
, 
§_n›
, 4, 0, 
LNX
, 
RIGHT
},

1162 {"¨gs", "COMMAND", 
¥_¨gs
, 
§_n›
, 16, 
ARG
, 
U98
, 
UNLIMITED
},

1163 {"©ime", "TIME", 
¥_time
, 
§_n›
, 8, 0, 
SOE
, 
CUMUL
|
RIGHT
},

1164 {"blocked", "BLOCKED", 
¥_sigmask
, 
§_n›
, 9, 0, 
BSD
, 
SIGNAL
},

1165 {"bnd", "BND", 
¥_n›
, 
§_n›
, 1, 0, 
AIX
, 
RIGHT
},

1166 {"bsd°¨t", "START", 
¥_bsd°¨t
, 
§_n›
, 6, 0, 
LNX
, 
RIGHT
},

1167 {"bsdtime", "TIME", 
¥_bsdtime
, 
§_n›
, 6, 0, 
LNX
, 
RIGHT
},

1168 {"c", "C", 
¥_c
, 
§_p˝u
, 2, 0, 
SUN
, 
RIGHT
},

1169 {"ˇught", "CAUGHT", 
¥_sigˇtch
, 
§_n›
, 9, 0, 
BSD
, 
SIGNAL
},

1170 {"˛ass", "CLS", 
¥_˛ass
, 
§_sched
, 3, 0, 
XXX
, 
LEFT
},

1171 {"˛s", "-", 
¥_n›
, 
§_n›
, 1, 0, 
HPU
, 
RIGHT
},

1172 {"cmaj_Êt", "-", 
¥_n›
, 
§_cmaj_Êt
, 1, 0, 
LNX
, 
RIGHT
},

1173 {"cmd", "CMD", 
¥_¨gs
, 
§_cmd
, 16, 
ARG
, 
DEC
, 
UNLIMITED
},

1174 {"cmö_Êt", "-", 
¥_n›
, 
§_cmö_Êt
, 1, 0, 
LNX
, 
RIGHT
},

1175 {"˙sw≠", "-", 
¥_n›
, 
§_˙sw≠
, 1, 0, 
LNX
, 
RIGHT
},

1176 {"comm", "COMMAND", 
¥_comm
, 
§_n›
, 16, 
COM
, 
U98
, 
UNLIMITED
},

1177 {"comm™d", "COMMAND", 
¥_¨gs
, 
§_n›
, 16, 
ARG
, 
XXX
, 
UNLIMITED
},

1178 {"c⁄ãxt", "CONTEXT", 
¥_c⁄ãxt
, 
§_c⁄ãxt
,40, 0, 
LNX
, 
LEFT
},

1179 {"˝", "CP", 
¥_˝
, 
§_p˝u
, 3, 0, 
DEC
, 
RIGHT
},

1180 {"˝u", "CPU", 
¥_n›
, 
§_n›
, 3, 0, 
BSD
, 
RIGHT
},

1181 {"˝utime", "TIME", 
¥_time
, 
§_n›
, 8, 0, 
DEC
, 
RIGHT
},

1182 {"c°ime", "-", 
¥_n›
, 
§_c°ime
, 1, 0, 
LNX
, 
RIGHT
},

1183 {"cursig", "CURSIG", 
¥_n›
, 
§_n›
, 6, 0, 
DEC
, 
RIGHT
},

1184 {"cutime", "-", 
¥_n›
, 
§_cutime
, 1, 0, 
LNX
, 
RIGHT
},

1185 {"cwd", "CWD", 
¥_n›
, 
§_n›
, 3, 0, 
LNX
, 
LEFT
},

1186 {"drs", "DRS", 
¥_drs
, 
§_drs
, 4, 
MEM
, 
LNX
, 
RIGHT
},

1187 {"dsiz", "DSIZ", 
¥_dsiz
, 
§_n›
, 4, 0, 
LNX
, 
RIGHT
},

1188 {"egid", "EGID", 
¥_egid
, 
§_egid
, 5, 0, 
LNX
, 
RIGHT
},

1189 {"egroup", "EGROUP", 
¥_egroup
, 
§_egroup
, 8, 
GRP
, 
LNX
, 
USER
},

1190 {"eù", "EIP", 
¥_eù
, 
§_k°k_eù
, 8, 0, 
LNX
, 
RIGHT
},

1191 {"íd_code", "E_CODE", 
¥_n›
, 
§_íd_code
, 8, 0, 
LNx
, 
RIGHT
},

1192 {"ívú⁄","ENVIRONMENT",
¥_n›
, 
§_n›
, 11, 
ENV
, 
LNx
, 
UNLIMITED
},

1193 {"e•", "ESP", 
¥_e•
, 
§_k°k_e•
, 8, 0, 
LNX
, 
RIGHT
},

1194 {"ëime", "ELAPSED", 
¥_ëime
, 
§_n›
, 11, 0, 
U98
, 
RIGHT
},

1195 {"euid", "EUID", 
¥_euid
, 
§_euid
, 5, 0, 
LNX
, 
RIGHT
},

1196 {"eu£r", "EUSER", 
¥_eu£r
, 
§_eu£r
, 8, 
USR
, 
LNX
, 
USER
},

1197 {"f", "F", 
¥_Êag
, 
§_n›
, 1, 0, 
XXX
, 
RIGHT
},

1198 {"fgid", "FGID", 
¥_fgid
, 
§_fgid
, 5, 0, 
LNX
, 
RIGHT
},

1199 {"fgroup", "FGROUP", 
¥_fgroup
, 
§_fgroup
, 8, 
GRP
, 
LNX
, 
USER
},

1200 {"Êag", "F", 
¥_Êag
, 
§_Êags
, 1, 0, 
DEC
, 
RIGHT
},

1201 {"Êags", "F", 
¥_Êag
, 
§_Êags
, 1, 0, 
BSD
, 
RIGHT
},

1202 {"‚ame", "COMMAND", 
¥_‚ame
, 
§_n›
, 8, 0, 
SUN
, 
LEFT
},

1203 {"fsgid", "FSGID", 
¥_fgid
, 
§_fgid
, 5, 0, 
LNX
, 
RIGHT
},

1204 {"fsgroup", "FSGROUP", 
¥_fgroup
, 
§_fgroup
, 8, 
GRP
, 
LNX
, 
USER
},

1205 {"fsuid", "FSUID", 
¥_fuid
, 
§_fuid
, 5, 0, 
LNX
, 
RIGHT
},

1206 {"fsu£r", "FSUSER", 
¥_fu£r
, 
§_fu£r
, 8, 
USR
, 
LNX
, 
USER
},

1207 {"fuid", "FUID", 
¥_fuid
, 
§_fuid
, 5, 0, 
LNX
, 
RIGHT
},

1208 {"fu£r", "FUSER", 
¥_fu£r
, 
§_fu£r
, 8, 
USR
, 
LNX
, 
USER
},

1209 {"gid", "GID", 
¥_egid
, 
§_egid
, 5, 0, 
SUN
, 
RIGHT
},

1210 {"group", "GROUP", 
¥_egroup
, 
§_egroup
, 5, 
GRP
, 
U98
, 
USER
},

1211 {"ign‹ed", "IGNORED", 
¥_sigign‹e
,
§_n›
, 9, 0, 
BSD
, 
SIGNAL
},

1212 {"öblk", "INBLK", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1213 {"öblock", "INBLK", 
¥_n›
, 
§_n›
, 5, 0, 
DEC
, 
RIGHT
},

1214 {"öçri", "PRI", 
¥_›ri
, 
§_¥i‹ôy
, 3, 0, 
HPU
, 
RIGHT
},

1215 {"jobc", "JOBC", 
¥_n›
, 
§_n›
, 4, 0, 
XXX
, 
RIGHT
},

1216 {"kåa˚", "KTRACE", 
¥_n›
, 
§_n›
, 8, 0, 
BSD
, 
RIGHT
},

1217 {"kåa˚p", "KTRACEP", 
¥_n›
, 
§_n›
, 8, 0, 
BSD
, 
RIGHT
},

1218 {"œbñ", "LABEL", 
¥_n›
, 
§_n›
, 25, 0, 
SGI
, 
LEFT
},

1219 {"lim", "LIM", 
¥_lim
, 
§_rss_æim
, 5, 0, 
BSD
, 
RIGHT
},

1220 {"logö", "LOGNAME", 
¥_n›
, 
§_n›
, 8, 0, 
BSD
, 
LEFT
},

1221 {"log«me", "LOGNAME", 
¥_n›
, 
§_n›
, 8, 0, 
XXX
, 
LEFT
},

1222 {"l⁄gäame", "TTY", 
¥_ây8
, 
§_ây
, 8, 0, 
DEC
, 
LEFT
},

1223 {"l°¨t", "STARTED", 
¥_l°¨t
, 
§_n›
, 24, 0, 
XXX
, 
RIGHT
},

1224 {"luid", "LUID", 
¥_n›
, 
§_n›
, 5, 0, 
LNX
, 
RIGHT
},

1225 {"lu£r", "LUSER", 
¥_n›
, 
§_n›
, 8, 
USR
, 
LNX
, 
USER
},

1226 {"lwp", "LWP", 
¥_thªad
, 
§_n›
, 5, 0, 
SUN
, 
RIGHT
},

1227 {"m_drs", "DRS", 
¥_drs
, 
§_drs
, 5, 
MEM
, 
LNx
, 
RIGHT
},

1228 {"m_dt", "DT", 
¥_n›
, 
§_dt
, 4, 
MEM
, 
LNx
, 
RIGHT
},

1229 {"m_Ãs", "LRS", 
¥_n›
, 
§_Ãs
, 5, 
MEM
, 
LNx
, 
RIGHT
},

1230 {"m_ªsidít", "RES", 
¥_n›
, 
§_ªsidít
, 5,
MEM
, 
LNx
, 
RIGHT
},

1231 {"m_sh¨e", "SHRD", 
¥_n›
, 
§_sh¨e
, 5, 
MEM
, 
LNx
, 
RIGHT
},

1232 {"m_size", "SIZE", 
¥_size
, 
§_size
, 5, 
MEM
, 
LNX
, 
RIGHT
},

1233 {"m_sw≠", "SWAP", 
¥_n›
, 
§_n›
, 5, 0, 
LNx
, 
RIGHT
},

1234 {"m_ås", "TRS", 
¥_ås
, 
§_ås
, 5, 
MEM
, 
LNx
, 
RIGHT
},

1235 {"maj_Êt", "MAJFL", 
¥_majÊt
, 
§_maj_Êt
, 6, 0, 
LNX
, 
CUMUL
|
RIGHT
},

1236 {"majÊt", "MAJFLT", 
¥_majÊt
, 
§_maj_Êt
, 6, 0, 
XXX
, 
RIGHT
},

1237 {"mö_Êt", "MINFL", 
¥_möÊt
, 
§_mö_Êt
, 6, 0, 
LNX
, 
CUMUL
|
RIGHT
},

1238 {"möÊt", "MINFLT", 
¥_möÊt
, 
§_mö_Êt
, 6, 0, 
XXX
, 
RIGHT
},

1239 {"msgrcv", "MSGRCV", 
¥_n›
, 
§_n›
, 6, 0, 
XXX
, 
RIGHT
},

1240 {"msg¢d", "MSGSND", 
¥_n›
, 
§_n›
, 6, 0, 
XXX
, 
RIGHT
},

1241 {"ni", "NI", 
¥_ni˚
, 
§_ni˚
, 3, 0, 
BSD
, 
RIGHT
},

1242 {"ni˚", "NI", 
¥_ni˚
, 
§_ni˚
, 3, 0, 
U98
, 
RIGHT
},

1243 {"nivcsw", "IVCSW", 
¥_n›
, 
§_n›
, 5, 0, 
XXX
, 
RIGHT
},

1244 {"∆wp", "NLWP", 
¥_∆wp
, 
§_n›
, 4, 0, 
SUN
, 
RIGHT
},

1245 {"nsig«ls", "NSIGS", 
¥_n›
, 
§_n›
, 5, 0, 
DEC
, 
RIGHT
},

1246 {"nsigs", "NSIGS", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1247 {"nsw≠", "NSWAP", 
¥_n›
, 
§_nsw≠
, 5, 0, 
XXX
, 
RIGHT
},

1248 {"nvcsw", "VCSW", 
¥_n›
, 
§_n›
, 5, 0, 
XXX
, 
RIGHT
},

1249 {"nwch™", "WCHAN", 
¥_nwch™
, 
§_n›
, 6, 0, 
XXX
, 
RIGHT
},

1250 {"›ri", "PRI", 
¥_›ri
, 
§_¥i‹ôy
, 3, 0, 
SUN
, 
RIGHT
},

1251 {"osz", "SZ", 
¥_n›
, 
§_n›
, 2, 0, 
SUN
, 
RIGHT
},

1252 {"oublk", "OUBLK", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1253 {"oublock", "OUBLK", 
¥_n›
, 
§_n›
, 5, 0, 
DEC
, 
RIGHT
},

1254 {"p_ru", "P_RU", 
¥_n›
, 
§_n›
, 6, 0, 
BSD
, 
RIGHT
},

1255 {"∑ddr", "PADDR", 
¥_n›
, 
§_n›
, 6, 0, 
BSD
, 
RIGHT
},

1256 {"∑geö", "PAGEIN", 
¥_majÊt
, 
§_n›
, 6, 0, 
XXX
, 
RIGHT
},

1257 {"p˝u", "%CPU", 
¥_p˝u
, 
§_p˝u
, 4, 0, 
U98
, 
RIGHT
},

1258 {"≥ndög", "PENDING", 
¥_sig
, 
§_n›
, 9, 0, 
BSD
, 
SIGNAL
},

1259 {"pgid", "PGID", 
¥_pgid
, 
§_pgΩ
, 5, 0, 
U98
, 
RIGHT
},

1260 {"pgΩ", "PGRP", 
¥_pgid
, 
§_pgΩ
, 5, 0, 
LNX
, 
RIGHT
},

1261 {"pid", "PID", 
¥_pid
, 
§_pid
, 5, 0, 
U98
, 
RIGHT
},

1262 {"pmem", "%MEM", 
¥_pmem
, 
§_n›
, 4, 0, 
XXX
, 
RIGHT
},

1263 {"poù", "-", 
¥_n›
, 
§_n›
, 1, 0, 
BSD
, 
RIGHT
},

1264 {"pﬁicy", "POL", 
¥_˛ass
, 
§_sched
, 3, 0, 
DEC
, 
LEFT
},

1265 {"µid", "PPID", 
¥_µid
, 
§_µid
, 5, 0, 
U98
, 
RIGHT
},

1266 {"¥i", "PRI", 
¥_¥i
, 
§_n›
, 3, 0, 
XXX
, 
RIGHT
},

1267 {"¥i‹ôy", "PRI", 
¥_¥i‹ôy
, 
§_¥i‹ôy
, 3, 0, 
LNX
, 
RIGHT
},

1268 {"¥mgΩ", "-", 
¥_n›
, 
§_n›
, 1, 0, 
HPU
, 
RIGHT
},

1269 {"¥mid", "-", 
¥_n›
, 
§_n›
, 1, 0, 
HPU
, 
RIGHT
},

1270 {"p£t", "PSET", 
¥_n›
, 
§_n›
, 4, 0, 
DEC
, 
RIGHT
},

1271 {"p§", "PSR", 
¥_p§
, 
§_n›
, 3, 0, 
DEC
, 
RIGHT
},

1272 {"psx¥i", "PPR", 
¥_n›
, 
§_n›
, 3, 0, 
DEC
, 
RIGHT
},

1273 {"ª", "RE", 
¥_n›
, 
§_n›
, 3, 0, 
BSD
, 
RIGHT
},

1274 {"ªsidít", "RES", 
¥_n›
, 
§_ªsidít
, 5,
MEM
, 
LNX
, 
RIGHT
},

1275 {"rgid", "RGID", 
¥_rgid
, 
§_rgid
, 5, 0, 
XXX
, 
RIGHT
},

1276 {"rgroup", "RGROUP", 
¥_rgroup
, 
§_rgroup
, 8, 
GRP
, 
U98
, 
USER
},

1277 {"æök", "RLINK", 
¥_n›
, 
§_n›
, 8, 0, 
BSD
, 
RIGHT
},

1278 {"rss", "RSS", 
¥_rss
, 
§_rss
, 4, 0, 
XXX
, 
RIGHT
},

1279 {"rssize", "RSS", 
¥_rss
, 
§_vm_rss
, 4, 0, 
DEC
, 
RIGHT
},

1280 {"rsz", "RSZ", 
¥_rss
, 
§_vm_rss
, 4, 0, 
BSD
, 
RIGHT
},

1281 {"π¥io", "RTPRIO", 
¥_π¥io
, 
§_π¥io
, 6, 0, 
BSD
, 
RIGHT
},

1282 {"ruid", "RUID", 
¥_ruid
, 
§_ruid
, 5, 0, 
XXX
, 
RIGHT
},

1283 {"ru£r", "RUSER", 
¥_ru£r
, 
§_ru£r
, 8, 
USR
, 
U98
, 
USER
},

1284 {"s", "S", 
¥_s
, 
§_°©e
, 1, 0, 
SUN
, 
LEFT
},

1285 {"sched", "SCH", 
¥_sched
, 
§_sched
, 3, 0, 
AIX
, 
RIGHT
},

1286 {"s˙t", "SCNT", 
¥_n›
, 
§_n›
, 4, 0, 
DEC
, 
RIGHT
},

1287 {"scou¡", "SC", 
¥_n›
, 
§_n›
, 4, 0, 
AIX
, 
RIGHT
},

1288 {"£csid", "SID", 
¥_£csid
, 
§_£csid
, 6, 0, 
LNX
, 
RIGHT
},

1289 {"£ss", "SESS", 
¥_£ss
, 
§_£ssi⁄
, 5, 0, 
XXX
, 
RIGHT
},

1290 {"£ssi⁄", "SESS", 
¥_£ss
, 
§_£ssi⁄
, 5, 0, 
LNX
, 
RIGHT
},

1291 {"sgi_p", "P", 
¥_sgi_p
, 
§_n›
, 1, 0, 
LNX
, 
RIGHT
},

1292 {"sgi_rss", "RSS", 
¥_rss
, 
§_n›
, 4, 0, 
LNX
, 
LEFT
},

1293 {"sgid", "SGID", 
¥_sgid
, 
§_sgid
, 5, 0, 
LNX
, 
RIGHT
},

1294 {"sgroup", "SGROUP", 
¥_sgroup
, 
§_sgroup
, 8, 
GRP
, 
LNX
, 
USER
},

1295 {"sh¨e", "-", 
¥_n›
, 
§_sh¨e
, 1, 
MEM
, 
LNX
, 
RIGHT
},

1296 {"sid", "SID", 
¥_£ss
, 
§_£ssi⁄
, 5, 0, 
XXX
, 
RIGHT
},

1297 {"sig", "PENDING", 
¥_sig
, 
§_n›
, 9, 0, 
XXX
, 
SIGNAL
},

1298 {"sig_block", "BLOCKED", 
¥_sigmask
, 
§_n›
, 9, 0, 
LNX
, 
SIGNAL
},

1299 {"sig_ˇtch", "CATCHED", 
¥_sigˇtch
, 
§_n›
, 9, 0, 
LNX
, 
SIGNAL
},

1300 {"sig_ign‹e", "IGNORED",
¥_sigign‹e
, 
§_n›
, 9, 0, 
LNX
, 
SIGNAL
},

1301 {"sig_≥nd", "SIGNAL", 
¥_sig
, 
§_n›
, 9, 0, 
LNX
, 
SIGNAL
},

1302 {"sigˇtch", "CAUGHT", 
¥_sigˇtch
, 
§_n›
, 9, 0, 
XXX
, 
SIGNAL
},

1303 {"sigign‹e", "IGNORED", 
¥_sigign‹e
,
§_n›
, 9, 0, 
XXX
, 
SIGNAL
},

1304 {"sigmask", "BLOCKED", 
¥_sigmask
, 
§_n›
, 9, 0, 
XXX
, 
SIGNAL
},

1305 {"size", "SZ", 
¥_sw≠abÀ
, 
§_sw≠abÀ
, 1, 0, 
SCO
, 
RIGHT
},

1306 {"¶", "SL", 
¥_n›
, 
§_n›
, 3, 0, 
XXX
, 
RIGHT
},

1307 {"•id", "SPID", 
¥_thªad
, 
§_n›
, 5, 0, 
SGI
, 
RIGHT
},

1308 {"°ackp", "STACKP", 
¥_°ackp
, 
§_n›
, 8, 0, 
LNX
, 
RIGHT
},

1309 {"°¨t", "STARTED", 
¥_°¨t
, 
§_n›
, 8, 0, 
XXX
, 
RIGHT
},

1310 {"°¨t_code", "S_CODE", 
¥_n›
, 
§_°¨t_code
, 8, 0, 
LNx
, 
RIGHT
},

1311 {"°¨t_°ack", "STACKP", 
¥_°ackp
, 
§_°¨t_°ack
, 8, 0, 
LNX
, 
RIGHT
},

1312 {"°¨t_time", "START", 
¥_°ime
, 
§_°¨t_time
, 5, 0, 
LNx
, 
RIGHT
},

1313 {"°©", "STAT", 
¥_°©
, 
§_°©e
, 4, 0, 
BSD
, 
LEFT
},

1314 {"°©e", "S", 
¥_s
, 
§_°©e
, 1, 0, 
XXX
, 
LEFT
},

1315 {"°©us", "STATUS", 
¥_n›
, 
§_n›
, 6, 0, 
DEC
, 
RIGHT
},

1316 {"°ime", "STIME", 
¥_°ime
, 
§_°ime
, 5, 0, 
XXX
, 
RIGHT
},

1317 {"suid", "SUID", 
¥_suid
, 
§_suid
, 5, 0, 
LNx
, 
RIGHT
},

1318 {"su£r", "SUSER", 
¥_su£r
, 
§_su£r
, 8, 
USR
, 
LNx
, 
USER
},

1319 {"svgid", "SVGID", 
¥_sgid
, 
§_sgid
, 5, 0, 
XXX
, 
RIGHT
},

1320 {"svgroup", "SVGROUP", 
¥_sgroup
, 
§_sgroup
, 8, 
GRP
, 
LNX
, 
USER
},

1321 {"svuid", "SVUID", 
¥_suid
, 
§_suid
, 5, 0, 
XXX
, 
RIGHT
},

1322 {"svu£r", "SVUSER", 
¥_su£r
, 
§_su£r
, 8, 
USR
, 
LNX
, 
USER
},

1323 {"sy°ime", "SYSTEM", 
¥_n›
, 
§_n›
, 6, 0, 
DEC
, 
RIGHT
},

1324 {"sz", "SZ", 
¥_sz
, 
§_n›
, 5, 0, 
HPU
, 
RIGHT
},

1325 {"tdev", "TDEV", 
¥_n›
, 
§_n›
, 4, 0, 
XXX
, 
RIGHT
},

1326 {"thcou¡", "THCNT", 
¥_∆wp
, 
§_n›
, 5, 0, 
AIX
, 
RIGHT
},

1327 {"tid", "TID", 
¥_thªad
, 
§_n›
, 5, 0, 
AIX
, 
RIGHT
},

1328 {"time", "TIME", 
¥_time
, 
§_n›
, 8, 0, 
U98
, 
CUMUL
|
RIGHT
},

1329 {"timeout", "TMOUT", 
¥_timeout
, 
§_timeout
, 5, 0, 
LNX
, 
RIGHT
},

1330 {"tmout", "TMOUT", 
¥_timeout
, 
§_timeout
, 5, 0, 
LNX
, 
RIGHT
},

1331 {"äame", "TTY", 
¥_ây8
, 
§_ây
, 8, 0, 
DEC
, 
LEFT
},

1332 {"çgid", "TPGID", 
¥_çgid
, 
§_çgid
, 5, 0, 
XXX
, 
RIGHT
},

1333 {"ås", "TRS", 
¥_ås
, 
§_ås
, 4, 
MEM
, 
AIX
, 
RIGHT
},

1334 {"åss", "TRSS", 
¥_ås
, 
§_ås
, 4, 
MEM
, 
BSD
, 
RIGHT
},

1335 {"t£ss", "TSESS", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1336 {"t£ssi⁄", "TSESS", 
¥_n›
, 
§_n›
, 5, 0, 
DEC
, 
RIGHT
},

1337 {"tsiz", "TSIZ", 
¥_tsiz
, 
§_n›
, 4, 0, 
BSD
, 
RIGHT
},

1338 {"â", "TT", 
¥_ây8
, 
§_ây
, 8, 0, 
BSD
, 
LEFT
},

1339 {"ây", "TT", 
¥_ây8
, 
§_ây
, 8, 0, 
U98
, 
LEFT
},

1340 {"ây4", "TTY", 
¥_ây4
, 
§_ây
, 4, 0, 
LNX
, 
LEFT
},

1341 {"ây8", "TTY", 
¥_ây8
, 
§_ây
, 8, 0, 
LNX
, 
LEFT
},

1342 {"u_¥o˝", "UPROCP", 
¥_n›
, 
§_n›
, 6, 0, 
DEC
, 
RIGHT
},

1343 {"ucmd", "CMD", 
¥_comm
, 
§_cmd
, 16, 
COM
, 
DEC
, 
UNLIMITED
},

1344 {"ucomm", "COMMAND", 
¥_comm
, 
§_n›
, 16, 
COM
, 
XXX
, 
UNLIMITED
},

1345 {"uid", "UID", 
¥_euid
, 
§_euid
, 5, 0, 
XXX
, 
RIGHT
},

1346 {"uid_hack", "UID", 
¥_eu£r
, 
§_n›
, 8, 
USR
, 
XXX
, 
USER
},

1347 {"umask", "UMASK", 
¥_n›
, 
§_n›
, 5, 0, 
DEC
, 
RIGHT
},

1348 {"u«me", "USER", 
¥_eu£r
, 
§_eu£r
, 8, 
USR
, 
DEC
, 
USER
},

1349 {"u¥", "UPR", 
¥_n›
, 
§_n›
, 3, 0, 
BSD
, 
RIGHT
},

1350 {"u¥o˝", "-", 
¥_n›
, 
§_n›
, 1, 0, 
BSD
, 
RIGHT
},

1351 {"u£r", "USER", 
¥_eu£r
, 
§_eu£r
, 8, 
USR
, 
U98
, 
USER
},

1352 {"u£πime", "USER", 
¥_n›
, 
§_n›
, 4, 0, 
DEC
, 
RIGHT
},

1353 {"u§¥i", "UPR", 
¥_n›
, 
§_n›
, 3, 0, 
DEC
, 
RIGHT
},

1354 {"utime", "UTIME", 
¥_n›
, 
§_utime
, 6, 0, 
LNx
, 
CUMUL
|
RIGHT
},

1355 {"vm_d©a", "DATA", 
¥_n›
, 
§_vm_d©a
, 5, 0, 
LNx
, 
RIGHT
},

1356 {"vm_exe", "EXE", 
¥_n›
, 
§_vm_exe
, 5, 0, 
LNx
, 
RIGHT
},

1357 {"vm_lib", "LIB", 
¥_n›
, 
§_vm_lib
, 5, 0, 
LNx
, 
RIGHT
},

1358 {"vm_lock", "LCK", 
¥_n›
, 
§_vm_lock
, 3, 0, 
LNx
, 
RIGHT
},

1359 {"vm_°ack", "STACK", 
¥_n›
, 
§_vm_°ack
, 5, 0, 
LNx
, 
RIGHT
},

1360 {"vsize", "VSZ", 
¥_vsz
, 
§_vsize
, 5, 0, 
DEC
, 
RIGHT
},

1361 {"vsz", "VSZ", 
¥_vsz
, 
§_vm_size
, 5, 0, 
U98
, 
RIGHT
},

1362 {"wch™", "WCHAN", 
¥_wch™
, 
§_wch™
, 6, 
WCH
, 
XXX
, 
WCHAN
},

1363 {"w«me", "WCHAN", 
¥_w«me
, 
§_n›
, 6, 
WCH
, 
SGI
, 
WCHAN
},

1364 {"x°©", "XSTAT", 
¥_n›
, 
§_n›
, 5, 0, 
BSD
, 
RIGHT
},

1365 {"~", "-", 
¥_n›
, 
§_n›
, 1, 0, 
LNX
, 
RIGHT
}

1368 c⁄° 
	gf‹m©_¨øy_cou¡
 = (
f‹m©_¨øy
)/(
f‹m©_°ru˘
);

1375 c⁄° 
ma¸o_°ru˘
 
	gma¸o_¨øy
[] = {

1440 c⁄° 
	gma¸o_¨øy_cou¡
 = (
ma¸o_¨øy
)/(
ma¸o_°ru˘
);

1445 c⁄° 
aix_°ru˘
 
	gaix_¨øy
[] = {

1463 c⁄° 
	gaix_¨øy_cou¡
 = (
aix_¨øy
)/(
aix_°ru˘
);

1468 c⁄° 
sh‹ts‹t_°ru˘
 
	gsh‹ts‹t_¨øy
[] = {

1497 c⁄° 
	gsh‹ts‹t_¨øy_cou¡
 = (
sh‹ts‹t_¨øy
)/(
sh‹ts‹t_°ru˘
);

1502 
	$¥öt_f‹m©_•ecifõrs
(){

1503 c⁄° 
f‹m©_°ru˘
 *
wÆk
 = 
f‹m©_¨øy
;

1504 *(
wÆk
->
•ec
) != '~'){

1505 if(
wÆk
->
¥
 !
¥_n›
Ë
	`¥ötf
("%-12.12†%-8.8s\n", wÆk->
•ec
, wÆk->
hód
);

1506 
wÆk
++;

1508 
	}
}

1512 
	$com∑ª_f‹m©_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

1513  
	`°rcmp
(((c⁄° 
f‹m©_°ru˘
*)
a
)->
•ec
,((c⁄° f‹m©_°ru˘*)
b
)->spec);

1514 
	}
}

1516 
	$com∑ª_ma¸o_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

1517  
	`°rcmp
(((c⁄° 
ma¸o_°ru˘
*)
a
)->
•ec
,((c⁄° ma¸o_°ru˘*)
b
)->spec);

1518 
	}
}

1522 c⁄° 
sh‹ts‹t_°ru˘
 *
	$£¨ch_sh‹ts‹t_¨øy
(c⁄° 
födme
){

1523 c⁄° 
sh‹ts‹t_°ru˘
 *
wÆk
 = 
sh‹ts‹t_¨øy
;

1524 
wÆk
->
desc
 != '~'){

1525 if(
wÆk
->
desc
 =
födme
)  walk;

1526 
wÆk
++;

1528  
NULL
;

1529 
	}
}

1531 c⁄° 
aix_°ru˘
 *
	$£¨ch_aix_¨øy
(c⁄° 
födme
){

1532 c⁄° 
aix_°ru˘
 *
wÆk
 = 
aix_¨øy
;

1533 
wÆk
->
desc
 != '~'){

1534 if(
wÆk
->
desc
 =
födme
)  walk;

1535 
wÆk
++;

1537  
NULL
;

1538 
	}
}

1540 c⁄° 
f‹m©_°ru˘
 *
	$£¨ch_f‹m©_¨øy
(c⁄° *
födme
){

1541 
f‹m©_°ru˘
 
key
;

1542 
key
.
•ec
 = 
födme
;

1543  
	`b£¨ch
(&
key
, 
f‹m©_¨øy
, 
f‹m©_¨øy_cou¡
,

1544 (
f‹m©_°ru˘
), 
com∑ª_f‹m©_°ru˘s


1546 
	}
}

1548 c⁄° 
ma¸o_°ru˘
 *
	$£¨ch_ma¸o_¨øy
(c⁄° *
födme
){

1549 
ma¸o_°ru˘
 
key
;

1550 
key
.
•ec
 = 
födme
;

1551  
	`b£¨ch
(&
key
, 
ma¸o_¨øy
, 
ma¸o_¨øy_cou¡
,

1552 (
ma¸o_°ru˘
), 
com∑ª_ma¸o_°ru˘s


1554 
	}
}

1556 
	ga˘ive_cﬁs
;

1559 
	$check_hódî_width
(){

1560 
f‹m©_node
 *
wÆk
 = 
f‹m©_li°
;

1561 
tŸÆ
 = 0;

1562 
was_n‹mÆ
 = 0;

1563 
i
 = 0;

1564 
sigs
 = 0;

1565 
wÆk
){

1566 (
wÆk
->
Êags
Ë& 
JUST_MASK
){

1568 
tŸÆ
 +
wÆk
->
width
;

1569 
tŸÆ
 +
was_n‹mÆ
;

1570 
was_n‹mÆ
 = 1;

1572 
SIGNAL
:

1573 
sigs
++;

1574 
tŸÆ
 +
wÆk
->
width
;

1575 
tŸÆ
 +
was_n‹mÆ
;

1576 
was_n‹mÆ
 = 1;

1578 
UNLIMITED
:

1579 if(
wÆk
->
√xt
Ë
tŸÆ
 +wÆk->
width
;

1580 
tŸÆ
 += 3;

1581 
tŸÆ
 +
was_n‹mÆ
;

1582 
was_n‹mÆ
 = 1;

1585 
tŸÆ
 +
wÆk
->
width
;

1586 
was_n‹mÆ
 = 0;

1589 
wÆk
 = wÆk->
√xt
;

1592 
i
++;

1593 
a˘ive_cﬁs
 = 
s¸ìn_cﬁs
 * 
i
;

1594 if(
a˘ive_cﬁs
>=
tŸÆ
) ;

1595 if(
s¸ìn_cﬁs
*
i
 >
OUTBUF_SIZE
/2) ;

1597 
wide_sig«ls
 = (
tŸÆ
+
sigs
*7 <
a˘ive_cﬁs
);

1600 
	`¥ötf
("123456789-123456789-123456789-123456789-"

1602 
	`¥ötf
("√ed %d, usög %d\n", 
tŸÆ
, 
a˘ive_cﬁs
);

1604 
	}
}

1608 
	$show_⁄e_¥oc
(
¥oc_t
* 
p
){

1610 
c‹ª˘
 = 0;

1611 
a˘uÆ
 = 0;

1612 
amou¡
 = 0;

1613 
À·∑d
 = 0;

1614 
•a˚
 = 0;

1615 
do•a˚
 = 0;

1616 
Àgô
 = 0;

1617 
f‹m©_node
 *
fmt
 = 
f‹m©_li°
;

1618 
did_°uff
 = 0;

1620 if(-1==()
p
){

1621 
	`check_hódî_width
();

1622 if(
did_°uff
) ;

1624 if(!--
löes_to_√xt_hódî
){

1625 
löes_to_√xt_hódî
 = 
hódî_g≠
;

1626 
	`show_⁄e_¥oc
(
NULL
);

1629 
	`exô
(1);

1631 if(
p
){

1632 if(!--
löes_to_√xt_hódî
){

1633 
löes_to_√xt_hódî
 = 
hódî_g≠
;

1634 
	`show_⁄e_¥oc
(
NULL
);

1637 
did_°uff
 = 1;

1638 
µ
 = 
p
;

1639 if(
a˘ive_cﬁs
>()
OUTBUF_SIZE
Ë
	`Ârötf
(
°dîr
,"Fix bignessÉrror.\n");

1643 
Àgô
 = 0;

1645 if(
fmt
->
√xt
Ë
max_rightw¨d
 = fmt->
width
;

1646 
max_rightw¨d
 = 
a˘ive_cﬁs
-((
c‹ª˘
>
a˘uÆ
) ? correct :áctual);

1647 
max_À·w¨d
 = 
fmt
->
width
 + 
a˘uÆ
 - 
c‹ª˘
;

1649 if(
p
 && 
fmt
->
¥
Ë
amou¡
 = (*fmt->pr)();

1650 
amou¡
 = 
	`°æí
(
	`°r˝y
(
outbuf
, 
fmt
->
«me
));

1651 (
fmt
->
Êags
Ë& 
JUST_MASK
){

1653 
À·∑d
 = 0;

1655 
LEFT
:

1656 
À·∑d
 = 0;

1658 
RIGHT
:

1659 
À·∑d
 = 
fmt
->
width
 - 
amou¡
;

1660 if(
À·∑d
 < 0)Üeftpad = 0;

1662 
SIGNAL
:

1664 if(
wide_sig«ls
){

1665 
À·∑d
 = 16 - 
amou¡
;

1666 
Àgô
 = 7;

1668 
À·∑d
 = 9 - 
amou¡
;

1670 if(
À·∑d
 < 0)Üeftpad = 0;

1672 
USER
:

1673 
À·∑d
 = 
fmt
->
width
 - 
amou¡
;

1674 if(
À·∑d
 < 0)Üeftpad = 0;

1675 if(!
u£r_is_numbî
Ë
À·∑d
 = 0;

1677 
WCHAN
:

1678 if(
wch™_is_numbî
){

1679 
À·∑d
 = 
fmt
->
width
 - 
amou¡
;

1680 if(
À·∑d
 < 0)Üeftpad = 0;

1683 if(
fmt
->
√xt
){

1684 
outbuf
[
fmt
->
width
] = '\0';

1686 
ch›•Ÿ
;

1687 
tmp•a˚
;

1688 
tmp•a˚
 = 
c‹ª˘
 - 
a˘uÆ
;

1689 if(
tmp•a˚
<1Ëtmp•a˚ = 
do•a˚
;

1690 
ch›•Ÿ
 = 
a˘ive_cﬁs
-
a˘uÆ
-
tmp•a˚
;

1691 if(
ch›•Ÿ
<1) chopspot=1;

1692 
outbuf
[
ch›•Ÿ
] = '\0';

1694 
À·∑d
 = 0;

1697 
UNLIMITED
:

1698 if(
fmt
->
√xt
){

1699 
outbuf
[
fmt
->
width
] = '\0';

1701 
ch›•Ÿ
;

1702 
tmp•a˚
;

1703 
tmp•a˚
 = 
c‹ª˘
 - 
a˘uÆ
;

1704 if(
tmp•a˚
<1Ëtmp•a˚ = 
do•a˚
;

1705 
ch›•Ÿ
 = 
a˘ive_cﬁs
-
a˘uÆ
-
tmp•a˚
;

1706 if(
ch›•Ÿ
<1) chopspot=1;

1707 
outbuf
[
ch›•Ÿ
] = '\0';

1709 
À·∑d
 = 0;

1712 
	`Ârötf
(
°dîr
, "badálignment code\n");

1725 
•a˚
 = 
c‹ª˘
 - 
a˘uÆ
 + 
À·∑d
;

1726 if(
•a˚
<1Ë•a˚=
do•a˚
;

1727 if(
•a˚
>
SPACE_AMOUNT
) space=SPACE_AMOUNT;

1730 
amou¡
 = 
	`°æí
(
outbuf
);

1731 if(!
fmt
->
√xt
){

1733 
outbuf
[
amou¡
] = '\n';

1734 
	`fwrôe
(
outbuf
-
•a˚
, s∑˚+
amou¡
+1, 1, 
°dout
);

1738 
	`fwrôe
(
outbuf
-
•a˚
, s∑˚+
amou¡
, 1, 
°dout
);

1739 
a˘uÆ
 +
•a˚
+
amou¡
;

1740 
c‹ª˘
 +
fmt
->
width
;

1741 
c‹ª˘
 +
Àgô
;

1742 if(
fmt
->
¥
 && fmt->
√xt
->pr){

1743 
c‹ª˘
++;

1744 
do•a˚
 = 1;

1746 
do•a˚
 = 0;

1748 
fmt
 = fmt->
√xt
;

1760 
	}
}

1762 #ifde‡
TESTING


1763 
	$ßnôy_check
(){

1764 
f‹m©_°ru˘
 *
fs
 = 
f‹m©_¨øy
;

1765 (
fs
->
•ec
)[0] != '~'){

1766 if(
	`°æí
(
fs
->
hód
Ë> fs->
width
Ë
	`¥ötf
("%d %s\n",°æí(fs->hód),fs->
•ec
);

1767 
fs
++;

1769 
	}
}

1772 
	$öô_ouçut
(){

1773 
	`mem£t
(
whôe•a˚
, ' ', 
PAGE_SIZE
);

1775 
	`m¥Ÿe˘
(
whôe•a˚
, 
PAGE_SIZE
, 
PROT_READ
);

1776 
	`m¥Ÿe˘
(

1777 (*)(()(
whôe•a˚_™d_outbuf
-
PAGE_SIZE
) &~ (PAGE_SIZE-1)),

1778 
PAGE_SIZE
, 
PROT_NONE


1781 
£c⁄ds_sö˚_1970
 = 
	`time
(
NULL
);

1782 
time_of_boŸ
 = 
£c⁄ds_sö˚_1970
 - 
£c⁄ds_sö˚_boŸ
;

1783 
	`memöfo
();

1784 
	`gë∑gesize
()){

1785 65536: 
∑ge_shi·
 = 16; ;

1786 32768: 
∑ge_shi·
 = 15; ;

1787 16384: 
∑ge_shi·
 = 14; ;

1788 8192: 
∑ge_shi·
 = 13; ;

1789 : 
	`Ârötf
(
°dîr
, "UnknownÖage size! (assume 4096)\n");

1790 4096: 
∑ge_shi·
 = 12; ;

1791 2048: 
∑ge_shi·
 = 11; ;

1792 1024: 
∑ge_shi·
 = 10; ;

1794 
	`check_hódî_width
();

1795 
	}
}

	@ps/parser.c

15 #ifde‡
HAVE_CONFIG_H


16 
	~"c⁄fig.h
"

19 
	~<°dlib.h
>

20 
	~<°dio.h
>

21 
	~<°rög.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<pwd.h
>

26 
	~<gΩ.h
>

28 
	~<sys/°©.h
>

29 
	~<uni°d.h
>

31 
	~"comm⁄.h
"

32 
	~"../¥oc/vîsi⁄.h
"

34 
	#ARG_GNU
 0

	)

35 
	#ARG_END
 1

	)

36 
	#ARG_PGRP
 2

	)

37 
	#ARG_SYSV
 3

	)

38 
	#ARG_PID
 4

	)

39 
	#ARG_BSD
 5

	)

40 
	#ARG_FAIL
 6

	)

41 
	#ARG_SESS
 7

	)

43 
	gw_cou¡
 = 0;

45 
	gps_¨gc
;

46 **
	gps_¨gv
;

47 
	gthißrg
;

48 *
	gÊag±r
;

49 
	gnŸ_puª_unix
 = 0;

50 
	gf‹˚_bsd
 = 0;

52 
	#ex˛usive
(
x
Ëif((
ps_¨gc
 !2Ë|| 
	`°rcmp
(
ps_¨gv
[1],x))\

53  "Thê" 
x
 " o±i⁄ i†ex˛usive."

	)

63 c⁄° *
	$gë_›t_¨g
(){

64 if(*(
Êag±r
+1)){

65 
nŸ_puª_unix
 = 1;

66  
Êag±r
+1;

68 if(
thißrg
+2 > 
ps_¨gc
Ë 
NULL
;

70 if(*(
ps_¨gv
[
thißrg
+1]Ë='\0'Ë 
NULL
;

71  
ps_¨gv
[++
thißrg
];

72 
	}
}

76 c⁄° *
	$∑r£_pid
(*
°r
, 
£l_uni⁄
 *
ªt
){

77 *
ídp
;

78 
num
;

79 c⁄° 
pidønge
[] = "Process ID out ofÑange.";

80 c⁄° 
pidsy¡ax
[] = "Process IDÜist syntaxÉrror.";

81 
num
 = 
	`°πoul
(
°r
, &
ídp
, 0);

82 if(*
ídp
 !'\0'Ë 
pidsy¡ax
;

83 if(
num
<1Ë 
pidønge
;

84 if(
num
 > 0x7fffffffULË 
pidønge
;

85 
ªt
->
pid
 = 
num
;

87 
	}
}

89 c⁄° *
	$∑r£_uid
(*
°r
, 
£l_uni⁄
 *
ªt
){

90 
∑sswd
 *
∑sswd_d©a
;

91 *
ídp
;

92 
num
;

93 c⁄° 
uidønge
[] = "User ID out ofÑange.";

94 c⁄° 
uidexi°
[] = "UserÇame doesÇotÉxist.";

95 
num
 = 
	`°πoul
(
°r
, &
ídp
, 0);

96 if(*
ídp
 != '\0'){

97 
∑sswd_d©a
 = 
	`gëpw«m
(
°r
);

98 if(!
∑sswd_d©a
Ë 
uidexi°
;

99 
num
 = 
∑sswd_d©a
->
pw_uid
;

101 if(
num
 > 0xffffff„ULË 
uidønge
;

102 
ªt
->
uid
 = 
num
;

104 
	}
}

106 c⁄° *
	$∑r£_gid
(*
°r
, 
£l_uni⁄
 *
ªt
){

107 
group
 *
group_d©a
;

108 *
ídp
;

109 
num
;

110 c⁄° 
gidønge
[] = "Group ID out ofÑange.";

111 c⁄° 
gidexi°
[] = "GroupÇame doesÇotÉxist.";

112 
num
 = 
	`°πoul
(
°r
, &
ídp
, 0);

113 if(*
ídp
 != '\0'){

114 
group_d©a
 = 
	`gëg∫am
(
°r
);

115 if(!
group_d©a
Ë 
gidexi°
;

116 
num
 = 
group_d©a
->
gr_gid
;

118 if(
num
 > 0xffffff„ULË 
gidønge
;

119 
ªt
->
gid
 = 
num
;

121 
	}
}

123 c⁄° *
	$∑r£_cmd
(*
°r
, 
£l_uni⁄
 *
ªt
){

124 
	`°∫˝y
(
ªt
->
cmd
, 
°r
, 8);

126 
	}
}

128 c⁄° *
	$∑r£_ây
(*
°r
, 
£l_uni⁄
 *
ªt
){

129 
°©
 
sbuf
;

130 c⁄° 
missög
[] = "TTY couldÇot be found.";

131 c⁄° 
nŸ_ây
[] = "List member wasÇotá TTY.";

132 
∑th
[4096];

133 if(
°r
[0]=='/'){

134 if(
	`°©
(
°r
, &
sbuf
Ë>0Ë
found_ô
;

135  
missög
;

137 
	#lookup
(
p
) \

138 
	`¢¥ötf
(
∑th
,4096,
p
,
°r
); \

139 if(
	`°©
(
∑th
, &
sbuf
Ë>0Ë
found_ô


	)

141 
	`lookup
("/dev/pts/%s");

142 
	`lookup
("/dev/%s");

143 
	`lookup
("/dev/tty%s");

144 
	`lookup
("/dev/pty%s");

145 
	`lookup
("/dev/%snsole");

146 if(!
	`°rcmp
(
°r
,"-")){

147 
ªt
->
ây
 = -1;

150 if(!
	`°rcmp
(
°r
,"?")){

151 
ªt
->
ây
 = -1;

154 if(!*(
°r
+1Ë&& (
	`°©
(°r,&
sbuf
)>=0)){

155 
ªt
->
ây
 = -1;

158 #unde‡
lookup


159  
missög
;

160 
found_ô
:

161 if(!
	`S_ISCHR
(
sbuf
.
°_mode
)Ë 
nŸ_ây
;

162 
ªt
->
ây
 = 
sbuf
.
°_rdev
;

164 
	}
}

169 c⁄° *
∑r£_li°
(c⁄° *
¨g
, c⁄° *(*
∑r£_‚
)(*, 
£l_uni⁄
 *) ){

170 
£À˘i⁄_node
 *
	gnode
;

171 *
	gbuf
;

172 *
	g£p_loc
;

173 *
	gwÆk
;

174 
	gôems
;

175 
	g√ed_ôem
;

176 c⁄° *
	gîr
;

178 
	gnode
 = 
mÆloc
((
£À˘i⁄_node
));

179 
	gnode
->
	gu
 = 
mÆloc
(
°æí
(
¨g
)*(
£l_uni⁄
));

180 
	gnode
->
	gn
 = 0;

181 
	gbuf
 = 
mÆloc
(
°æí
(
¨g
)+1);

182 
°r˝y
(
buf
, 
¨g
);

184 
	g√ed_ôem
 = 1;

185 
	gôems
 = 0;

186 
	gwÆk
 = 
buf
;

187 
	gîr
 = "ImproperÜist.";

189 *
	gwÆk
){

191 if(
√ed_ôem
Ë
∑r£_îr‹
;

192 
	g√ed_ôem
=1;

195 if(
√ed_ôem
Ë
ôems
++;

196 
	g√ed_ôem
=0;

198 } *++
	gwÆk
);

199 if(
	g√ed_ôem
Ë
	g∑r£_îr‹
;

200 
	gnode
->
	gn
 = 
ôems
;

202 
	gwÆk
 = 
buf
;

203 
	gôems
--){

204 
	g£p_loc
 = 
°Ωbrk
(
wÆk
," ,\t");

205 if(
	g£p_loc
) *sep_loc = '\0';

206 if(–
	gîr
=(
∑r£_‚
)(
wÆk
, 
	gnode
->
	gu
+
	gôems
Ë)Ë
	g∑r£_îr‹
;

207 
	gwÆk
 = 
£p_loc
 + 1;

209 
‰ì
(
buf
);

210 
	gnode
->
	g√xt
 = 
£À˘i⁄_li°
;

211 
	g£À˘i⁄_li°
 = 
node
;

212  
	gNULL
;

213 
	g∑r£_îr‹
:

214 
‰ì
(
buf
);

215 
‰ì
(
node
->
u
);

216 
‰ì
(
node
);

217  
	gîr
;

221 c⁄° *
	$∑r£_sysv_›ti⁄
(){

222 c⁄° *
¨g
;

223 c⁄° *
îr
;

224 
Êag±r
 = 
ps_¨gv
[
thißrg
];

225 *++
Êag±r
){

227 if(!
	`°rchr
("aAdefgG ›tuU", *
Êag±r
)Ë
nŸ_puª_unix
 = 1;

228 *
Êag±r
){

230 
	`åa˚
("-A selectsállÖrocesses.\n");

231 
Æl_¥o˚s£s
 = 1;

234 
	`åa˚
("-C select byÖrocessÇame.\n");

235 
¨g
=
	`gë_›t_¨g
();

236 if(!
¨g
)  "List of commandÇames must follow -C.";

237 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_cmd
);

238 if(
îr
) Érr;

239 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_COMM
;

240  
NULL
;

242 
	`åa˚
("-F does fullerÜisting\n");

243 
f‹m©_modifõrs
 |
FM_F
;

244 
f‹m©_Êags
 |
FF_Uf
;

245 
unix_f_›ti⁄
 = 1;

248 
	`åa˚
("-G select by RGID (supportsÇames)\n");

249 
¨g
=
	`gë_›t_¨g
();

250 if(!
¨g
)  "List ofÑeal groups must follow -G.";

251 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_gid
);

252 if(
îr
) Érr;

253 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_RGID
;

254  
NULL
;

256 
	`åa˚
("-H Process heirarchy (like ASCIIárt forest option)\n");

257 
f‹e°_ty≥
 = 'u';

266 
	`åa˚
("-L Print LWP (thread) info.\n");

267 
f‹m©_modifõrs
 |
FM_L
;

270 
	`åa˚
("-M Print securityÜabel for Mandatory Access Control.\n");

271 
f‹m©_modifõrs
 |
FM_M
;

275 
	`åa˚
("-NÇegates.\n");

276 
√g©e_£À˘i⁄
 = 1;

279 
	`åa˚
("-O isÖreloaded -o.\n");

280 
¨g
=
	`gë_›t_¨g
();

281 if(!
¨g
)  "Format or sort specification must follow -O.";

282 
	`de„r_sf_›ti⁄
(
¨g
, 
SF_U_O
);

283  
NULL
;

285 
	`åa˚
("-Pádds columns of PRM info (HP) or PSR column (Sun)\n");

286 
f‹m©_modifõrs
 |
FM_P
;

288 #ifde‡
WE_UNDERSTAND_THIS


290 
	`åa˚
("-R selects PRM groups\n");

300 
	`åa˚
("-Tádds strange SPID column (old sproc()Åhreads?)\n");

301 
f‹m©_modifõrs
 |
FM_T
;

304 
	`åa˚
("-U select by RUID (supportsÇames).\n");

305 
¨g
=
	`gë_›t_¨g
();

306 if(!
¨g
)  "List ofÑeal groups must follow -U.";

307 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_uid
);

308 if(
îr
) Érr;

309 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_RUID
;

310  
NULL
;

312 
	`åa˚
("-VÖrints version.\n");

313 
	`ex˛usive
("-V");

314 
	`di•œy_vîsi⁄
();

315 
	`exô
(0);

317 
	`åa˚
("-Z shows full MAC info\n");

321 
	`åa˚
("-a selectáll witháÅty, but omit sessionÜeaders.\n");

322 
sim∂e_£À˘
 |
SS_U_a
;

326 
	`åa˚
("-c changes scheduling info.\n");

327 
f‹m©_modifõrs
 |
FM_c
;

330 
	`åa˚
("-d selectáll, but omit sessionÜeaders.\n");

331 
sim∂e_£À˘
 |
SS_U_d
;

334 
	`åa˚
("-e selectsállÖrocesses.\n");

335 
Æl_¥o˚s£s
 = 1;

338 
	`åa˚
("-f does fullÜisting\n");

339 
f‹m©_Êags
 |
FF_Uf
;

340 
unix_f_›ti⁄
 = 1;

343 
	`åa˚
("-g selects by sessionÜeader OR by groupÇame\n");

344 
¨g
=
	`gë_›t_¨g
();

345 if(!
¨g
)  "List of sessionÜeaders ORÉffective groupÇames must follow -g.";

346 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

347 if(!
îr
){

348 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_SESS
;

349  
NULL
;

351 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_gid
);

352 if(!
îr
){

353 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_EGID
;

354  
NULL
;

358 
	`åa˚
("-j jobs format.\n");

360 if(
sysv_j_f‹m©
Ë
f‹m©_Êags
 |
FF_Uj
;

361 
f‹m©_modifõrs
 |
FM_j
;

364 
	`åa˚
("-lÜong format.\n");

365 
f‹m©_Êags
 |
FF_Ul
;

368 
	`åa˚
("-m showsÅhreads.\n");

373 
	`åa˚
("-n setsÇamelist file.\n");

374 
¨g
=
	`gë_›t_¨g
();

375 if(!
¨g
)  "Alternate System.map file must follow -n.";

376 
«mñi°_fûe
 = 
¨g
;

377  
NULL
;

384 
	`åa˚
("-o user-defined format.\n");

385 
¨g
=
	`gë_›t_¨g
();

386 if(!
¨g
)  "Format specification must follow -o.";

387 
nŸ_puª_unix
 |
	`de„r_sf_›ti⁄
(
¨g
, 
SF_U_o
);

388  
NULL
;

390 
	`åa˚
("-p select by PID.\n");

391 
¨g
=
	`gë_›t_¨g
();

392 if(!
¨g
)  "List ofÖrocess IDs must follow -p.";

393 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

394 if(
îr
) Érr;

395 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PID
;

396  
NULL
;

397 #ifde‡
KNOW_WHAT_TO_DO_WITH_THIS


399 
	`åa˚
("-r some Digital UnixÅhingábout warnings...\n");

400 
	`åa˚
(" or SCO's optionÅo chroot() forÇew /procánd /dev.\n");

405 
	`åa˚
("-s SelectÖrocesses belongingÅoÅhe sessions given.\n");

406 
¨g
=
	`gë_›t_¨g
();

407 if(!
¨g
)  "List of session IDs must follow -s.";

408 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

409 if(
îr
) Érr;

410 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_SESS
;

411  
NULL
;

413 
	`åa˚
("-t select byÅty.\n");

414 
¨g
=
	`gë_›t_¨g
();

415 if(!
¨g
)  "List ofÅerminals (pty,Åty...) must follow -t.";

416 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_ây
);

417 if(
îr
) Érr;

418 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_TTY
;

419  
NULL
;

421 
	`åa˚
("-u select by user ID (the EUID?) (supportsÇames).\n");

422 
¨g
=
	`gë_›t_¨g
();

423 if(!
¨g
)  "List of users must follow -u.";

424 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_uid
);

425 if(
îr
) Érr;

426 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_EUID
;

427  
NULL
;

429 
	`åa˚
("-w wide output.\n");

430 
w_cou¡
++;

432 #ifde‡
NOBODY_HAS_BSD_HABITS_ANYMORE


434 
	`åa˚
("-x worksÜike Sun Solaris & SCO Unixware -y option\n");

435 
f‹m©_modifõrs
 |
FM_x
;

439 
	`åa˚
("-y PrintÜnone info in UID/USER column or do Sun -l hack.\n");

440 
f‹m©_modifõrs
 |
FM_y
;

443 
	`åa˚
("-z showsáliased MAC info\n");

456  
NULL
;

457 
	}
}

460 c⁄° *
	$∑r£_bsd_›ti⁄
(){

461 c⁄° *
¨g
;

462 c⁄° *
îr
;

464 
Êag±r
 = 
ps_¨gv
[
thißrg
];

465 if(
Êag±r
[0]=='-'){

466 if(!
f‹˚_bsd
)  "Can't happen! Problem #1.";

468 
Êag±r
--;

469 if(
≥rs⁄Æôy
 & 
PER_FORCE_BSD
){

470 if(!
f‹˚_bsd
)  "Can't happen! Problem #2.";

472 if(
f‹˚_bsd
)  "2nd chanceÖarse failed,Çot BSD or SysV.";

476 *++
Êag±r
){

477 *
Êag±r
){

479 
	`åa˚
("0..9 Old BSD-style select byÖrocess ID\n");

480 
¨g
=
Êag±r
;

481 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

482 if(
îr
) Érr;

483 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PID
;

484  
NULL
;

488 
	`åa˚
("A IncreasesÅheárgument space (Digital Unix)\n");

493 
	`åa˚
("C UseÑaw CPUÅime for %%CPU instead of decayingáve\n");

498 
	`åa˚
("L Listáll format specifiers\n");

499 
	`ex˛usive
("L");

500 
	`¥öt_f‹m©_•ecifõrs
();

501 
	`exô
(0);

504 
	`åa˚
("M junk (useálternate core)\n");

509 
	`åa˚
("N SpecifyÇamelist file\n");

510 
¨g
=
	`gë_›t_¨g
();

511 if(!
¨g
)  "Alternate System.map file must follow N.";

512 
«mñi°_fûe
 = 
¨g
;

513  
NULL
;

515 
	`åa˚
("O Like o + defaults,áddÇew columnsáfter PID. Also sort.\n");

516 
¨g
=
	`gë_›t_¨g
();

517 if(!
¨g
)  "Format or sort specification must follow O.";

518 
	`de„r_sf_›ti⁄
(
¨g
, 
SF_B_O
);

519  
NULL
;

522 
	`åa˚
("S include dead kids in sum\n");

523 
ö˛ude_dód_chûdªn
 = 1;

526 
	`åa˚
("T SelectállÖrocesses onÅhisÅerminal\n");

529 
£À˘i⁄_node
 *
node
;

530 
node
 = 
	`mÆloc
((
£À˘i⁄_node
));

531 
node
->
u
 = 
	`mÆloc
((
£l_uni⁄
));

532 
node
->
u
[0].
ây
 = 
ˇched_ây
;

533 
node
->
ty≥code
 = 
SEL_TTY
;

534 
node
->
n
 = 1;

535 
node
->
√xt
 = 
£À˘i⁄_li°
;

536 
£À˘i⁄_li°
 = 
node
;

540 
	`åa˚
("U SelectÖrocesses for specified users.\n");

541 
¨g
=
	`gë_›t_¨g
();

542 if(!
¨g
)  "List of users must follow U.";

543 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_uid
);

544 if(
îr
) Érr;

545 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_EUID
;

546  
NULL
;

548 
	`åa˚
("V show version info\n");

549 
	`ex˛usive
("V");

550 
	`di•œy_vîsi⁄
();

551 
	`exô
(0);

553 
	`åa˚
("W N/A get swap info from ...Çot /dev/drum.\n");

557 
	`åa˚
("X Old Linux i386Ñegister format\n");

558 
f‹m©_Êags
 |
FF_LX
;

561 
	`åa˚
("a Selectáll w/tty, including other users\n");

562 
sim∂e_£À˘
 |
SS_B_a
;

565 
	`åa˚
("cÅrue commandÇame\n");

566 
bsd_c_›ti⁄
 = 1;

569 
	`åa˚
("eÉnvironment\n");

570 
bsd_e_›ti⁄
 = 1;

573 
	`åa˚
("f ASCIIárt forest\n");

574 
f‹e°_ty≥
 = 'b';

577 
	`åa˚
("g _all_,Éven groupÜeaders!.\n");

578 
sim∂e_£À˘
 |
SS_B_g
;

581 
	`åa˚
("h Repeat header... yow.\n");

582 if(
hódî_ty≥
)  "Only one heading option may be specified.";

583 if(
≥rs⁄Æôy
 & 
PER_BSD_h
Ë
hódî_ty≥
 = 
HEAD_MULTI
;

584 
hódî_ty≥
 = 
HEAD_NONE
;

587 
	`åa˚
("j job control format\n");

588 
f‹m©_Êags
 |
FF_Bj
;

592 
	`åa˚
("k N/A Use /vmcoreás c-dumpfile\n");

597 
	`åa˚
("l DisplayÜong format\n");

598 
f‹m©_Êags
 |
FF_Bl
;

601 
	`åa˚
("mállÅhreads, sort on mem use, show mem info\n");

602 if(
≥rs⁄Æôy
 & 
PER_OLD_m
){

603 
f‹m©_Êags
 |
FF_Lm
;

606 if(
≥rs⁄Æôy
 & 
PER_BSD_m
){

607 
	`de„r_sf_›ti⁄
("pmem", 
SF_B_m
);

613 
	`åa˚
("n Numeric output for WCHAN,ánd USERÑeplaced by UID\n");

614 
wch™_is_numbî
 = 1;

615 
u£r_is_numbî
 = 1;

619 
	`åa˚
("o Specify user-defined format\n");

620 
¨g
=
	`gë_›t_¨g
();

621 if(!
¨g
)  "Format specification must follow o.";

622 
	`de„r_sf_›ti⁄
(
¨g
, 
SF_B_o
);

623  
NULL
;

625 
	`åa˚
("p Select byÖrocess ID\n");

626 
¨g
=
	`gë_›t_¨g
();

627 if(!
¨g
)  "List ofÖrocess IDs must followÖ.";

628 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

629 if(
îr
) Érr;

630 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PID
;

631  
NULL
;

633 
	`åa˚
("r SelectÑunningÖrocesses\n");

634 
ru¬ög_⁄ly
 = 1;

637 
	`åa˚
("s Display signal format\n");

638 
f‹m©_Êags
 |
FF_Bs
;

641 
	`åa˚
("t Select byÅty.\n");

643 
¨g
=
	`gë_›t_¨g
();

644 if(!
¨g
){

646 
£À˘i⁄_node
 *
node
;

647 
node
 = 
	`mÆloc
((
£À˘i⁄_node
));

648 
node
->
u
 = 
	`mÆloc
((
£l_uni⁄
));

649 
node
->
u
[0].
ây
 = 
ˇched_ây
;

650 
node
->
ty≥code
 = 
SEL_TTY
;

651 
node
->
n
 = 1;

652 
node
->
√xt
 = 
£À˘i⁄_li°
;

653 
£À˘i⁄_li°
 = 
node
;

654  
NULL
;

656 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_ây
);

657 if(
îr
) Érr;

658 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_TTY
;

659  
NULL
;

661 
	`åa˚
("u Display user-oriented\n");

662 
f‹m©_Êags
 |
FF_Bu
;

665 
	`åa˚
("v Display virtual memory\n");

666 
f‹m©_Êags
 |
FF_Bv
;

669 
	`åa˚
("w wide output\n");

670 
w_cou¡
++;

673 
	`åa˚
("x SelectÖrocesses without controllingÅtys\n");

674 
sim∂e_£À˘
 |
SS_B_x
;

686  
NULL
;

687 
	}
}

694 c⁄° *
	$gøb_gnu_¨g
(){

695 *
Êag±r
){

697  
NULL
;

699 if(*++
Êag±r
)  flagptr;

700  
NULL
;

704 if(
thißrg
+2 > 
ps_¨gc
Ë 
NULL
;

706 if(*(
ps_¨gv
[
thißrg
+1]Ë='\0'Ë 
NULL
;

707  
ps_¨gv
[++
thißrg
];

708 
	}
}

710 
	sgnu_èbÀ_°ru˘
 {

711 c⁄° *
	m«me
;

712 c⁄° *
	mjump
;

713 } 
	tgnu_èbÀ_°ru˘
;

715 
	$com∑ª_gnu_èbÀ_°ru˘s
(c⁄° *
a
, c⁄° *
b
){

716  
	`°rcmp
(((c⁄° 
gnu_èbÀ_°ru˘
*)
a
)->
«me
,((c⁄° gnu_èbÀ_°ru˘*)
b
)->name);

717 
	}
}

720 c⁄° *
	$∑r£_gnu_›ti⁄
(){

721 c⁄° *
¨g
;

722 c⁄° *
îr
;

723 *
s
;

724 
size_t
 
¶
;

725 
buf
[16];

726 
gnu_èbÀ_°ru˘
 
födme
 = { 
buf
, 
NULL
};

727 
gnu_èbÀ_°ru˘
 *
found
;

728 c⁄° 
gnu_èbÀ_°ru˘
 
gnu_èbÀ
[] = {

729 {"Group", &&
ˇ£_Group
},

730 {"SID", &&
ˇ£_£csid
},

731 {"U£r", &&
ˇ£_U£r
},

732 {"cﬁs", &&
ˇ£_cﬁs
},

733 {"cﬁumns", &&
ˇ£_cﬁumns
},

734 {"c⁄ãxt", &&
ˇ£_c⁄ãxt
},

735 {"cumuœtive", &&
ˇ£_cumuœtive
},

736 {"de£À˘", &&
ˇ£_de£À˘
},

737 {"f‹e°", &&
ˇ£_f‹e°
},

738 {"f‹m©", &&
ˇ£_f‹m©
},

739 {"group", &&
ˇ£_group
},

740 {"hódî", &&
ˇ£_hódî
},

741 {"hódîs", &&
ˇ£_hódîs
},

742 {"hódög", &&
ˇ£_hódög
},

743 {"hódögs", &&
ˇ£_hódögs
},

744 {"hñp", &&
ˇ£_hñp
},

745 {"öfo", &&
ˇ£_öfo
},

746 {"löes", &&
ˇ£_löes
},

747 {"no-hódî", &&
ˇ£_no_hódî
},

748 {"no-hódîs", &&
ˇ£_no_hódîs
},

749 {"no-hódög", &&
ˇ£_no_hódög
},

750 {"no-hódögs", &&
ˇ£_no_hódögs
},

751 {"nohódî", &&
ˇ£_nohódî
},

752 {"nohódîs", &&
ˇ£_nohódîs
},

753 {"nohódög", &&
ˇ£_nohódög
},

754 {"nohódögs", &&
ˇ£_nohódögs
},

755 {"pid", &&
ˇ£_pid
},

756 {"rows", &&
ˇ£_rows
},

757 {"£csid", &&
ˇ£_£csid
},

758 {"sid", &&
ˇ£_sid
},

759 {"s‹t", &&
ˇ£_s‹t
},

760 {"ây", &&
ˇ£_ây
},

761 {"u£r", &&
ˇ£_u£r
},

762 {"vîsi⁄", &&
ˇ£_vîsi⁄
},

763 {"width", &&
ˇ£_width
},

765 c⁄° 
gnu_èbÀ_cou¡
 = (
gnu_èbÀ
)/(
gnu_èbÀ_°ru˘
);

767 
s
 = 
ps_¨gv
[
thißrg
]+2;

768 
¶
 = 
	`°rc•n
(
s
,":=");

769 if(
¶
 > 15)  "Unknown gnuÜong option.";

770 
	`°∫˝y
(
buf
, 
s
, 
¶
);

771 
buf
[
¶
] = '\0';

772 
Êag±r
 = 
s
+
¶
;

774 
found
 = 
	`b£¨ch
(&
födme
, 
gnu_èbÀ
, 
gnu_èbÀ_cou¡
,

775 (
gnu_èbÀ_°ru˘
), 
com∑ª_gnu_èbÀ_°ru˘s


778 if(!
found
)  "Unknown gnuÜong option.";

780 *(
found
->
jump
);

782 
ˇ£_Group
:

783 
	`åa˚
("--Group\n");

784 
¨g
 = 
	`gøb_gnu_¨g
();

785 if(!
¨g
)  "List ofÑeal groups must follow --Group.";

786 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_gid
);

787 if(
îr
) Érr;

788 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_RGID
;

789  
NULL
;

790 
ˇ£_U£r
:

791 
	`åa˚
("--User\n");

792 
¨g
 = 
	`gøb_gnu_¨g
();

793 if(!
¨g
)  "List ofÑeal users must follow --User.";

794 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_uid
);

795 if(
îr
) Érr;

796 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_RUID
;

797  
NULL
;

798 
ˇ£_cﬁs
:

799 
ˇ£_width
:

800 
ˇ£_cﬁumns
:

801 
	`åa˚
("--cols\n");

802 
¨g
 = 
	`gøb_gnu_¨g
();

803 if(
¨g
 && *arg){

804 
t
;

805 *
íd±r
;

806 
t
 = 
	`°πﬁ
(
¨g
, &
íd±r
, 0);

807 if(!*
íd±r
 && (
t
>0) && (t<2000000000)){

808 
s¸ìn_cﬁs
 = ()
t
;

809  
NULL
;

813 
ˇ£_cumuœtive
:

814 
	`åa˚
("--cumulative\n");

815 if(
s
[
¶
])  "Option --cumulative doesÇotÅakeánárgument.";

816 
ö˛ude_dód_chûdªn
 = 1;

817  
NULL
;

818 
ˇ£_de£À˘
:

819 
	`åa˚
("--deselect\n");

820 if(
s
[
¶
])  "Option --deselect doesÇotÅakeánárgument.";

821 
√g©e_£À˘i⁄
 = 1;

822  
NULL
;

823 
ˇ£_no_hódî
:

824 
ˇ£_no_hódîs
:

825 
ˇ£_no_hódög
:

826 
ˇ£_no_hódögs
:

827 
ˇ£_nohódî
:

828 
ˇ£_nohódîs
:

829 
ˇ£_nohódög
:

830 
ˇ£_nohódögs
:

831 
	`åa˚
("--noheaders\n");

832 if(
s
[
¶
])  "Option --no-heading doesÇotÅakeánárgument.";

833 if(
hódî_ty≥
)  "Only one heading option may be specified.";

834 
hódî_ty≥
 = 
HEAD_NONE
;

835  
NULL
;

836 
ˇ£_hódî
:

837 
ˇ£_hódîs
:

838 
ˇ£_hódög
:

839 
ˇ£_hódögs
:

840 
	`åa˚
("--headers\n");

841 if(
s
[
¶
])  "Option --heading doesÇotÅakeánárgument.";

842 if(
hódî_ty≥
)  "Only one heading option may be specified.";

843 
hódî_ty≥
 = 
HEAD_MULTI
;

844  
NULL
;

845 
ˇ£_f‹e°
:

846 
	`åa˚
("--forest\n");

847 if(
s
[
¶
])  "Option --forest doesÇotÅakeánárgument.";

848 
f‹e°_ty≥
 = 'g';

849  
NULL
;

850 
ˇ£_f‹m©
:

851 
	`åa˚
("--format\n");

852 
¨g
=
	`gøb_gnu_¨g
();

853 if(!
¨g
)  "Format specification must follow --format.";

854 
	`de„r_sf_›ti⁄
(
¨g
, 
SF_G_f‹m©
);

855  
NULL
;

856 
ˇ£_group
:

857 
	`åa˚
("--group\n");

858 
¨g
 = 
	`gøb_gnu_¨g
();

859 if(!
¨g
)  "List ofÉffective groups must follow --group.";

860 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_gid
);

861 if(
îr
) Érr;

862 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_EGID
;

863  
NULL
;

864 
ˇ£_hñp
:

865 
	`åa˚
("--help\n");

866 
	`ex˛usive
("--help");

867 
	`fwrôe
(
hñp_mesßge
,1,
	`°æí
(hñp_mesßge),
°dîr
);

868 
	`exô
(0);

869  
NULL
;

870 
ˇ£_öfo
:

871 
	`åa˚
("--info\n");

872 
	`ex˛usive
("--info");

873 
	`£lf_öfo
();

874 
	`exô
(0);

875  
NULL
;

876 
ˇ£_pid
:

877 
	`åa˚
("--pid\n");

878 
¨g
 = 
	`gøb_gnu_¨g
();

879 if(!
¨g
)  "List ofÖrocess IDs must follow --pid.";

880 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

881 if(
îr
) Érr;

882 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PID
;

883  
NULL
;

884 
ˇ£_rows
:

885 
ˇ£_löes
:

886 
	`åa˚
("--rows\n");

887 
¨g
 = 
	`gøb_gnu_¨g
();

888 if(
¨g
 && *arg){

889 
t
;

890 *
íd±r
;

891 
t
 = 
	`°πﬁ
(
¨g
, &
íd±r
, 0);

892 if(!*
íd±r
 && (
t
>0) && (t<2000000000)){

893 
s¸ìn_rows
 = ()
t
;

894  
NULL
;

898 
ˇ£_sid
:

899 
	`åa˚
("--sid\n");

900 
¨g
 = 
	`gøb_gnu_¨g
();

901 if(!
¨g
)  "Some sidÅhing(s) must follow --sid.";

902 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_pid
);

903 if(
îr
) Érr;

904 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_SESS
;

905  
NULL
;

906 
ˇ£_s‹t
:

907 
	`åa˚
("--sort\n");

908 
¨g
=
	`gøb_gnu_¨g
();

909 if(!
¨g
)  "Long sort specification must follow --sort.";

910 
	`de„r_sf_›ti⁄
(
¨g
, 
SF_G_s‹t
);

911  
NULL
;

912 
ˇ£_ây
:

913 
	`åa˚
("--tty\n");

914 
¨g
 = 
	`gøb_gnu_¨g
();

915 if(!
¨g
)  "List ofÅtys must follow --tty.";

916 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_ây
);

917 if(
îr
) Érr;

918 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_TTY
;

919  
NULL
;

920 
ˇ£_u£r
:

921 
	`åa˚
("--user\n");

922 
¨g
 = 
	`gøb_gnu_¨g
();

923 if(!
¨g
)  "List ofÉffective users must follow --user.";

924 
îr
=
	`∑r£_li°
(
¨g
, 
∑r£_uid
);

925 if(
îr
) Érr;

926 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_EUID
;

927  
NULL
;

928 
ˇ£_vîsi⁄
:

929 
	`åa˚
("--version\n");

930 
	`ex˛usive
("--version");

931 
	`di•œy_vîsi⁄
();

932 
	`exô
(0);

933  
NULL
;

934 
ˇ£_c⁄ãxt
:

935 
	`åa˚
("--context\n");

936 
f‹m©_Êags
 |
FF_Fc
;

937  
NULL
;

938 
ˇ£_£csid
:

939 
	`åa˚
("--secsid\n");

940 
f‹m©_Êags
 |
FF_Fs
;

941  
NULL
;

942 
	}
}

945 c⁄° *
	$∑r£_åaûög_pids
(){

946 
£À˘i⁄_node
 *
pidnode
;

947 
£À˘i⁄_node
 *
gΩnode
;

948 
£À˘i⁄_node
 *
sidnode
;

949 **
¨gp
;

950 c⁄° *
îr
;

951 
i
;

953 
i
 = 
ps_¨gc
 - 
thißrg
;

954 
¨gp
 = 
ps_¨gv
 + 
thißrg
;

955 
thißrg
 = 
ps_¨gc
 - 1;

957 
pidnode
 = 
	`mÆloc
((
£À˘i⁄_node
));

958 
pidnode
->
u
 = 
	`mÆloc
(
i
*(
£l_uni⁄
));

959 
pidnode
->
n
 = 0;

961 
gΩnode
 = 
	`mÆloc
((
£À˘i⁄_node
));

962 
gΩnode
->
u
 = 
	`mÆloc
(
i
*(
£l_uni⁄
));

963 
gΩnode
->
n
 = 0;

965 
sidnode
 = 
	`mÆloc
((
£À˘i⁄_node
));

966 
sidnode
->
u
 = 
	`mÆloc
(
i
*(
£l_uni⁄
));

967 
sidnode
->
n
 = 0;

969 
i
--){

970 *
d©a
;

971 
d©a
 = *(
¨gp
++);

972 *
d©a
){

973 : 
îr
 = 
	`∑r£_pid
–
d©a
, 
pidnode
->
u
 +Öidnode->
n
++); ;

974 '-': 
îr
 = 
	`∑r£_pid
(++
d©a
, 
gΩnode
->
u
 + gΩnode->
n
++); ;

975 '+': 
îr
 = 
	`∑r£_pid
(++
d©a
, 
sidnode
->
u
 + sidnode->
n
++); ;

977 if(
îr
) Érr;

980 if(
pidnode
->
n
){

981 
pidnode
->
√xt
 = 
£À˘i⁄_li°
;

982 
£À˘i⁄_li°
 = 
pidnode
;

983 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PID
;

986 if(
gΩnode
->
n
){

987 
gΩnode
->
√xt
 = 
£À˘i⁄_li°
;

988 
£À˘i⁄_li°
 = 
gΩnode
;

989 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_PGRP
;

992 if(
sidnode
->
n
){

993 
sidnode
->
√xt
 = 
£À˘i⁄_li°
;

994 
£À˘i⁄_li°
 = 
sidnode
;

995 
£À˘i⁄_li°
->
ty≥code
 = 
SEL_SESS
;

998  
NULL
;

999 
	}
}

1003 
	$ª£t_∑r£r
(){

1004 
w_cou¡
 = 0;

1005 
	}
}

1007 
	$¨g_ty≥
(c⁄° *
°r
){

1008 
tmp
 = 
°r
[0];

1009 if((
tmp
>='a'Ë&& (tmp<='z')Ë 
ARG_BSD
;

1010 if((
tmp
>='A'Ë&& (tmp<='Z')Ë 
ARG_BSD
;

1011 if((
tmp
>='0'Ë&& (tmp<='9')Ë 
ARG_PID
;

1012 if(
tmp
=='+'Ë 
ARG_SESS
;

1013 if(
tmp
!='-'Ë 
ARG_FAIL
;

1014 
tmp
 = 
°r
[1];

1015 if((
tmp
>='a'Ë&& (tmp<='z')Ë 
ARG_SYSV
;

1016 if((
tmp
>='A'Ë&& (tmp<='Z')Ë 
ARG_SYSV
;

1017 if((
tmp
>='0'Ë&& (tmp<='9')Ë 
ARG_PGRP
;

1018 if(
tmp
!='-'Ë 
ARG_FAIL
;

1019 
tmp
 = 
°r
[2];

1020 if((
tmp
>='a'Ë&& (tmp<='z')Ë 
ARG_GNU
;

1021 if((
tmp
>='A'Ë&& (tmp<='Z')Ë 
ARG_GNU
;

1022 if(
tmp
=='\0'Ë 
ARG_END
;

1023  
ARG_FAIL
;

1024 
	}
}

1027 c⁄° *
	$∑r£_Æl_›ti⁄s
(){

1028 c⁄° *
îr
 = 
NULL
;

1029 
©
;

1030 ++
thißrg
 < 
ps_¨gc
){

1031 
	`åa˚
("∑r£_Æl_›ti⁄†ˇŒögárg_ty≥ f‹ \"%s\"\n", 
ps_¨gv
[
thißrg
]);

1032 
©
 = 
	`¨g_ty≥
(
ps_¨gv
[
thißrg
]);

1033 
	`åa˚
("ps_¨gv[thißrg] i†%s\n", 
ps_¨gv
[
thißrg
]);

1034 if(
©
 !
ARG_SYSV
Ë
nŸ_puª_unix
 = 1;

1035 
©
){

1036 
ARG_GNU
:

1037 
îr
 = 
	`∑r£_gnu_›ti⁄
();

1039 
ARG_SYSV
:

1040 if(!
f‹˚_bsd
){

1041 
îr
 = 
	`∑r£_sysv_›ti⁄
();

1043 
ARG_BSD
:

1044 if(
f‹˚_bsd
 && !(
≥rs⁄Æôy
 & 
PER_FORCE_BSD
))  "way bad";

1046 
¥e„r_bsd_deÁu…s
 = 1;

1047 
îr
 = 
	`∑r£_bsd_›ti⁄
();

1049 
ARG_PGRP
:

1050 
ARG_SESS
:

1051 
ARG_PID
:

1052 
¥e„r_bsd_deÁu…s
 = 1;

1053 
îr
 = 
	`∑r£_åaûög_pids
();

1055 
ARG_END
:

1056 
ARG_FAIL
:

1057 
	`åa˚
(" FAIL/END o¿[%s]\n",
ps_¨gv
[
thißrg
]);

1061 
	`¥ötf
(" ? %s\n",
ps_¨gv
[
thißrg
]);

1064 if(
îr
) Érr;

1066  
NULL
;

1067 
	}
}

1069 
	$choo£_dimísi⁄s
(){

1070 if(
w_cou¡
 && (
s¸ìn_cﬁs
<132)) screen_cols=132;

1071 if(
w_cou¡
>1Ë
s¸ìn_cﬁs
=
OUTBUF_SIZE
;

1073 
	}
}

1075 
	$¨g_∑r£
(
¨gc
, *
¨gv
[]){

1076 c⁄° *
îr
 = 
NULL
;

1077 c⁄° *
îr2
 = 
NULL
;

1078 
ps_¨gc
 = 
¨gc
;

1079 
ps_¨gv
 = 
¨gv
;

1080 
thißrg
 = 0;

1083 {
debuglo›
 = 0; debuglo›<
¨gc
){

1084 
	`åa˚
("¨gv[%d]=%s\n", 
debuglo›
, 
¨gv
[debugloop]); debugloop++;}}

1087 if(
≥rs⁄Æôy
 & 
PER_FORCE_BSD
Ë
åy_bsd
;

1089 
îr
 = 
	`∑r£_Æl_›ti⁄s
();

1090 if(
îr
Ë
åy_bsd
;

1091 
îr
 = 
	`¥o˚ss_sf_›ti⁄s
(!
nŸ_puª_unix
);

1092 if(
îr
Ë
åy_bsd
;

1093 
îr
 = 
	`£À˘_bôs_£tup
();

1094 if(
îr
Ë
åy_bsd
;

1096 
	`choo£_dimísi⁄s
();

1099 
åy_bsd
:

1100 
	`åa˚
("---------ÇowÅry BSD ------\n");

1102 
	`ª£t_globÆ
();

1103 
	`ª£t_∑r£r
();

1104 
	`ª£t_s‹tf‹m©
();

1105 
f‹m©_Êags
 = 0;

1106 
ps_¨gc
 = 
¨gc
;

1107 
ps_¨gv
 = 
¨gv
;

1108 
thißrg
 = 0;

1110 
nŸ_puª_unix
=1;

1111 
f‹˚_bsd
=1;

1112 
¥e„r_bsd_deÁu…s
=1;

1113 if(!–(
PER_OLD_m
|
PER_BSD_m
Ë& 
≥rs⁄Æôy
 ))

1114 
≥rs⁄Æôy
 |
PER_OLD_m
;

1117 
îr2
 = 
	`∑r£_Æl_›ti⁄s
();

1118 if(
îr2
Ë
tŸÆ_Áûuª
;

1119 
îr2
 = 
	`¥o˚ss_sf_›ti⁄s
(!
nŸ_puª_unix
);

1120 if(
îr2
Ë
tŸÆ_Áûuª
;

1121 
îr2
 = 
	`£À˘_bôs_£tup
();

1122 if(
îr2
Ë
tŸÆ_Áûuª
;

1124 if(!(
≥rs⁄Æôy
 & 
PER_FORCE_BSD
))

1125 
	`Ârötf
(
°dîr
, "Bad syntax,Öerhapsá bogus '-'?\n");

1127 
	`choo£_dimísi⁄s
();

1130 
tŸÆ_Áûuª
:

1131 
	`ª£t_∑r£r
();

1132 if(
≥rs⁄Æôy
 & 
PER_FORCE_BSD
Ë
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
îr2
);

1133 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
îr
);

1134 
	`fwrôe
(
hñp_mesßge
,1,
	`°æí
(hñp_mesßge),
°dîr
);

1135 
	`exô
(1);

1137 
	}
}

	@ps/select.c

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<°dio.h
>

16 
	~"comm⁄.h
"

17 
	~"../¥oc/ªad¥oc.h
"

18 
	~"../¥oc/¥o˝s.h
"

20 
	#£ssi⁄_Àadî
(
p
Ë(’)->
£ssi⁄
 =’)->
pid
)

	)

21 
	#¥o˚ss_group_Àadî
(
p
Ë(’)->
pgid
 =’)->
pid
)

	)

22 
	#wôhout_a_ây
(
p
Ë(()(’)->
ây
Ë=()-1)

	)

23 
	#some_Ÿhî_u£r
(
p
Ë(’)->
euid
 !
ˇched_euid
)

	)

24 
	#ru¬ög
(
p
Ë((’)->
°©e
=='R')||(’)->°©e=='D'))

	)

25 
	#has_our_euid
(
p
Ë(()(’)->
euid
Ë=()
ˇched_euid
)

	)

26 
	#⁄_our_ây
(
p
Ë(()(’)->
ây
Ë=()
ˇched_ây
)

	)

28 
	g£À˘_bôs
 = 0;

31 c⁄° *
	$£À˘_bôs_£tup
(){

32 
swôch_vÆ
 = 0;

34 if(!
sim∂e_£À˘
 && !
¥e„r_bsd_deÁu…s
){

35 
£À˘_bôs
 = 0xaa00;

36  
NULL
;

39 if–!(
≥rs⁄Æôy
 & 
PER_NO_DEFAULT_g
Ë&& !(
sim∂e_£À˘
&(
SS_U_a
|
SS_U_d
)) )

40 
swôch_vÆ
 = 
sim∂e_£À˘
|
SS_B_g
;

42 
swôch_vÆ
 = 
sim∂e_£À˘
;

43 
swôch_vÆ
){

45 
SS_U_a
 | 
SS_U_d
: 
£À˘_bôs
 = 0x3f3f; ;

46 
SS_U_a
: 
£À˘_bôs
 = 0x0303; ;

47 
SS_U_d
: 
£À˘_bôs
 = 0x3333; ;

49 0: 
£À˘_bôs
 = 0x0202; ;

50 
SS_B_a
: 
£À˘_bôs
 = 0x0303; ;

51 
SS_B_x
 : 
£À˘_bôs
 = 0x2222; ;

52 
SS_B_x
 | 
SS_B_a
: 
£À˘_bôs
 = 0x3333; ;

54 
SS_B_g
 : 
£À˘_bôs
 = 0x0a0a; ;

55 
SS_B_g
 | 
SS_B_a
: 
£À˘_bôs
 = 0x0f0f; ;

56 
SS_B_g
 | 
SS_B_x
 : 
£À˘_bôs
 = 0xaaaa; ;

57 
SS_B_g
 | 
SS_B_x
 | 
SS_B_a
:

58 
Æl_¥o˚s£s
 = 1;

59 
sim∂e_£À˘
 = 0;

65  
NULL
;

66 
	}
}

69 
	$èbÀ_ac˚±
(
¥oc_t
 *
buf
){

70 
¥oc_ödex
;

71 
¥oc_ödex
 = (
	`has_our_euid
(
buf
) <<0)

72 | (
	`£ssi⁄_Àadî
(
buf
) <<1)

73 | (
	`wôhout_a_ây
(
buf
) <<2)

74 | (
	`⁄_our_ây
(
buf
) <<3);

75  (
£À˘_bôs
 & (1<<
¥oc_ödex
));

76 
	}
}

79 
	$¥oc_was_li°ed
(
¥oc_t
 *
buf
){

80 
£À˘i⁄_node
 *
¢
 = 
£À˘i⁄_li°
;

81 
i
;

82 if(!
¢
)  0;

83 
¢
){

84 
¢
->
ty≥code
){

86 
	`¥ötf
("InternalÉrror inÖs! PleaseÑeportÅhis bug.\n");

88 
	#ªtu∫_if_m©ch
(
foo
,
b¨
) \

89 
i
=
¢
->
n
; i--) \

90 if(()(
buf
->
foo
Ë=()(*(
¢
->
u
+
i
)).
b¨
) \

91  1

	)

93 ; 
SEL_RUID
: 
	`ªtu∫_if_m©ch
(
ruid
,
uid
);

94 ; 
SEL_EUID
: 
	`ªtu∫_if_m©ch
(
euid
,
uid
);

95 ; 
SEL_SUID
: 
	`ªtu∫_if_m©ch
(
suid
,
uid
);

96 ; 
SEL_FUID
: 
	`ªtu∫_if_m©ch
(
fuid
,
uid
);

98 ; 
SEL_RGID
: 
	`ªtu∫_if_m©ch
(
rgid
,
gid
);

99 ; 
SEL_EGID
: 
	`ªtu∫_if_m©ch
(
egid
,
gid
);

100 ; 
SEL_SGID
: 
	`ªtu∫_if_m©ch
(
sgid
,
gid
);

101 ; 
SEL_FGID
: 
	`ªtu∫_if_m©ch
(
fgid
,
gid
);

103 ; 
SEL_PGRP
: 
	`ªtu∫_if_m©ch
(
pgΩ
,
pid
);

104 ; 
SEL_PID
 : 
	`ªtu∫_if_m©ch
(
pid
,pid);

105 ; 
SEL_TTY
 : 
	`ªtu∫_if_m©ch
(
ây
,tty);

106 ; 
SEL_SESS
: 
	`ªtu∫_if_m©ch
(
£ssi⁄
,
pid
);

109 ; 
SEL_COMM
: 
i
=
¢
->
n
; i--)

110 if(!
	`°∫cmp
–
buf
->
cmd
, (*(
¢
->
u
+
i
)).cmd, 8 ))  1;

114 #unde‡
ªtu∫_if_m©ch


117 
¢
 = sn->
√xt
;

120 
	}
}

124 
	$w™t_this_¥oc
(
¥oc_t
 *
buf
){

125 
ac˚±ed_¥oc
 = 1;

129 if(
Æl_¥o˚s£s
Ë
föish
;

132 if((
sim∂e_£À˘
 || !
£À˘i⁄_li°
))

133 if(
	`èbÀ_ac˚±
(
buf
)Ë
föish
;

136 if(
	`¥oc_was_li°ed
(
buf
)Ë
föish
;

139 
ac˚±ed_¥oc
 = 0;

142 
föish
:

143 if(
ru¬ög_⁄ly
 && !
	`ru¬ög
(
buf
)Ë
ac˚±ed_¥oc
 = 0;

144 if(
√g©e_£À˘i⁄
Ë !
ac˚±ed_¥oc
;

145  
ac˚±ed_¥oc
;

146 
	}
}

	@ps/sortformat.c

11 #ifde‡
HAVE_CONFIG_H


12 
	~"c⁄fig.h
"

15 
	~<°dlib.h
>

16 
	~<°dio.h
>

17 
	~<°rög.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<pwd.h
>

22 
	~<gΩ.h
>

24 
	~"../¥oc/ªad¥oc.h
"

25 
	~"comm⁄.h
"

27 
sf_node
 *
	gsf_li°
 = 
NULL
;

28 
	gbrokí
;

29 
	ghave_gnu_s‹t
 = 0;

30 
	gÆªady_∑r£d_s‹t
 = 0;

31 
	gÆªady_∑r£d_f‹m©
 = 0;

34 
	#∑r£_s‹t_›t
 <-- 
¨rgh
! dÿ
nŸ
 
u£
 
this
 -->

	)

35 
	#gnus‹t_∑r£
 <-- 
¨rgh
! dÿ
nŸ
 
u£
 
this
 -->

	)

39 
f‹m©_node
 *
	$do_⁄e_•ec
(c⁄° *
•ec
, c⁄° *
ovîride
){

40 c⁄° 
f‹m©_°ru˘
 *
fs
;

41 c⁄° 
ma¸o_°ru˘
 *
ms
;

43 
fs
 = 
	`£¨ch_f‹m©_¨øy
(
•ec
);

44 if(
fs
){

45 
w1
, 
w2
;

46 
f‹m©_node
 *
thi¢ode
;

47 
thi¢ode
 = 
	`mÆloc
((
f‹m©_node
));

48 
w1
 = 
fs
->
width
;

49 if(
ovîride
){

50 
w2
 = 
	`°æí
(
ovîride
);

51 
thi¢ode
->
width
 = (
w1
>
w2
)?w1:w2;

52 
thi¢ode
->
«me
 = 
	`mÆloc
(
	`°æí
(
ovîride
)+1);

53 
	`°r˝y
(
thi¢ode
->
«me
, 
ovîride
);

55 
thi¢ode
->
width
 = 
w1
;

56 
thi¢ode
->
«me
 = 
	`mÆloc
(
	`°æí
(
fs
->
hód
)+1);

57 
	`°r˝y
(
thi¢ode
->
«me
, 
fs
->
hód
);

59 
thi¢ode
->
¥
 = 
fs
->pr;

60 
thi¢ode
->
√ed
 = 
fs
->need;

61 
thi¢ode
->
víd‹
 = 
fs
->vendor;

62 
thi¢ode
->
Êags
 = 
fs
->flags;

63 
thi¢ode
->
√xt
 = 
NULL
;

64  
thi¢ode
;

68 
ms
 = 
	`£¨ch_ma¸o_¨øy
(
•ec
);

69 if(
ms
){

70 
f‹m©_node
 *
li°
 = 
NULL
;

71 
f‹m©_node
 *
√wnode
;

72 c⁄° *
wÆk
;

73 
di°
;

74 
buf
[16];

75 
wÆk
 = 
ms
->
hód
;

76 *
wÆk
){

77 
di°
 = 
	`°rc•n
(
wÆk
, ", ");

78 
	`°∫˝y
(
buf
,
wÆk
,
di°
);

79 
buf
[
di°
] = '\0';

80 
√wnode
 = 
	`do_⁄e_•ec
(
buf
,
ovîride
);

81 
√wnode
->
√xt
 = 
li°
;

82 
li°
 = 
√wnode
;

83 
wÆk
 +
di°
;

84 if(*
wÆk
) walk++;

86  
li°
;

88  
NULL
;

89 
	}
}

93 
	$O_wøp
(
sf_node
 *
s‚
, 
Ÿy≥
){

94 
f‹m©_node
 *
‚ode
;

95 
f‹m©_node
 *
ídp
;

96 c⁄° *
åaûî
;

98 
åaûî
 = (
Ÿy≥
=='b') ? "END_BSD" : "END_SYS5" ;

100 
‚ode
 = 
	`do_⁄e_•ec
("pid",
NULL
);

101 if(!
‚ode
)
	`Ârötf
(
°dîr
,"Seriously crashing. Goodbye cruel world.\n");

102 
ídp
 = 
s‚
->
f_cooked
; ídp->
√xt
)Éndp =Éndp->next;

103 
ídp
->
√xt
 = 
‚ode
;

105 
‚ode
 = 
	`do_⁄e_•ec
(
åaûî
,
NULL
);

106 if(!
‚ode
)
	`Ârötf
(
°dîr
,"Seriously crashing. Goodbye cruel world.\n");

107 
ídp
 = 
‚ode
; ídp->
√xt
)Éndp =Éndp->next;

108 
ídp
->
√xt
 = 
s‚
->
f_cooked
;

109 
s‚
->
f_cooked
 = 
‚ode
;

110 
	}
}

116 c⁄° *
	$aix_f‹m©_∑r£
(
sf_node
 *
s‚
){

117 *
buf
;

118 *
wÆk
;

119 
ôems
;

122 
ôems
 = 0;

123 
wÆk
 = 
s‚
->
sf
;

125 
c
;

126 
öôül
:

127 
c
 = *
wÆk
++;

128 if(
c
=='%'Ë
gë_desc
;

129 if(!
c
Ë
looks_ok
;

131 
ôems
++;

132 
gë_m‹e_ãxt
:

133 
c
 = *
wÆk
++;

134 if(
c
=='%'Ë
gë_desc
;

135 if(
c
Ë
gë_m‹e_ãxt
;

136 
looks_ok
;

137 
gë_desc
:

138 
ôems
++;

139 
c
 = *
wÆk
++;

140 if(
c
Ë
öôül
;

142 
looks_ok
:

147 
buf
 = 
	`mÆloc
(
	`°æí
(
s‚
->
sf
)+1);

148 
	`°r˝y
(
buf
, 
s‚
->
sf
);

149 
wÆk
 = 
s‚
->
sf
;

151 
ôems
--){

152 
f‹m©_node
 *
‚ode
;

153 
f‹m©_node
 *
ídp
;

155 if(*
wÆk
 == '%'){

156 c⁄° 
aix_°ru˘
 *
aix
;

157 
wÆk
++;

158 if(*
wÆk
 ='%'Ë
doubÀ_≥r˚¡
;

159 
aix
 = 
	`£¨ch_aix_¨øy
(*
wÆk
);

160 
wÆk
++;

161 if(!
aix
){

162 
	`‰ì
(
buf
);

165 
‚ode
 = 
	`do_⁄e_•ec
(
aix
->
•ec
,áix->
hód
);

166 if(!
‚ode
){

167 
	`‰ì
(
buf
);

171 
Àn
;

172 
Àn
 = 
	`°rc•n
(
wÆk
, "%");

173 
	`mem˝y
(
buf
,
wÆk
,
Àn
);

175 
doubÀ_≥r˚¡
:

176 
Àn
 = 1;

177 
buf
[0] = '%';

179 
buf
[
Àn
] = '\0';

180 
wÆk
 +
Àn
;

181 
‚ode
 = 
	`mÆloc
((
f‹m©_node
));

182 
‚ode
->
width
 = 
Àn
;

183 
‚ode
->
«me
 = 
	`mÆloc
(
Àn
+1);

184 
	`°r˝y
(
‚ode
->
«me
, 
buf
);

185 
‚ode
->
¥
 = 
NULL
;

186 
‚ode
->
√ed
 = 0;

187 
‚ode
->
víd‹
 = 
AIX
;

188 
‚ode
->
Êags
 = 0;

189 
‚ode
->
√xt
 = 
NULL
;

192 
ídp
 = 
‚ode
; ídp->
√xt
)Éndp =Éndp->next;

193 
ídp
->
√xt
 = 
s‚
->
f_cooked
;

194 
s‚
->
f_cooked
 = 
‚ode
;

196 
	`‰ì
(
buf
);

197 
Æªady_∑r£d_f‹m©
 = 1;

198  
NULL
;

199 
	}
}

207 c⁄° *
	$f‹m©_∑r£
(
sf_node
 *
s‚
){

208 *
buf
;

209 *
£p_loc
;

210 *
wÆk
;

211 c⁄° *
îr
;

212 
f‹m©_node
 *
‚ode
;

213 
ôems
;

214 
√ed_ôem
;

215 
îrbuf
[80];

218 
buf
 = 
	`mÆloc
(
	`°æí
(
s‚
->
sf
)+1);

219 
	`°r˝y
(
buf
, 
s‚
->
sf
);

222 
√ed_ôem
 = 1;

223 
ôems
 = 0;

224 
wÆk
 = 
buf
;

226 *
wÆk
){

229 if(
√ed_ôem
){

230 
	`‰ì
(
buf
);

231 
im¥›î
;

233 
√ed_ôem
=1;

236 if(
brokí
Ë
out
;

239 if(
√ed_ôem
Ë
ôems
++;

240 
√ed_ôem
=0;

242 } *++
wÆk
);

243 
out
:

244 if(!
ôems
){

245 
	`‰ì
(
buf
);

246 
em±y
;

248 #ifde‡
STRICT_LIST


249 if(
√ed_ôem
){

250 
	`‰ì
(
buf
);

251 
im¥›î
;

254 if(
√ed_ôem
){

255 *--
wÆk
='\0';

259 
wÆk
 = 
buf
;

260 
ôems
--){

261 
f‹m©_node
 *
ídp
;

262 *
equÆ_loc
;

263 
£p_loc
 = 
	`°Ωbrk
(
wÆk
," ,\t\n");

265 if(
ôems
 && 
£p_loc
) *sep_loc = '\0';

266 
equÆ_loc
 = 
	`°Ωbrk
(
wÆk
,"=");

267 if(
equÆ_loc
){

268 *
equÆ_loc
 = '\0';

269 
equÆ_loc
++;

271 
‚ode
 = 
	`do_⁄e_•ec
(
wÆk
,
equÆ_loc
);

272 if(!
‚ode
){

273 if(!*
îrbuf
){

274 
	`¢¥ötf
(

275 
îrbuf
,

276 (
îrbuf
),

278 
wÆk


281 
	`‰ì
(
buf
);

282 
unknown
;

284 
ídp
 = 
‚ode
; ídp->
√xt
)Éndp =Éndp->next;

285 
ídp
->
√xt
 = 
s‚
->
f_cooked
;

286 
s‚
->
f_cooked
 = 
‚ode
;

287 
wÆk
 = 
£p_loc
 + 1;

289 
	`‰ì
(
buf
);

290 
Æªady_∑r£d_f‹m©
 = 1;

291  
NULL
;

294 if(0Ë
unknown
: 
îr
=
îrbuf
;

295 if(0Ë
em±y
: 
îr
="Empty formatÜist.";

296 if(0Ë
im¥›î
: 
îr
="Improper formatÜist.";

297 if(
	`°rchr
(
s‚
->
sf
,'%')Ë
îr
 = 
	`aix_f‹m©_∑r£
(sfn);

298  
îr
;

299 
	}
}

302 
s‹t_node
 *
	$do_⁄e_s‹t_•ec
(c⁄° *
•ec
){

303 c⁄° 
f‹m©_°ru˘
 *
fs
;

304 
ªvî£
 = 0;

305 if(*
•ec
 == '-'){

306 
ªvî£
 = 1;

307 
•ec
++;

309 
fs
 = 
	`£¨ch_f‹m©_¨øy
(
•ec
);

310 if(
fs
){

311 
s‹t_node
 *
thi¢ode
;

312 
thi¢ode
 = 
	`mÆloc
((
f‹m©_node
));

313 
thi¢ode
->
§
 = 
fs
->sr;

314 
thi¢ode
->
√ed
 = 
fs
->need;

315 
thi¢ode
->
ªvî£
 =Ñeverse;

316 
thi¢ode
->
√xt
 = 
NULL
;

317  
thi¢ode
;

319  
NULL
;

320 
	}
}

327 c⁄° *
	$l⁄g_s‹t_∑r£
(
sf_node
 *
s‚
){

328 *
buf
;

329 *
£p_loc
;

330 *
wÆk
;

331 c⁄° *
îr
;

332 
s‹t_node
 *
¢ode
;

333 
ôems
;

334 
√ed_ôem
;

337 
buf
 = 
	`mÆloc
(
	`°æí
(
s‚
->
sf
)+1);

338 
	`°r˝y
(
buf
, 
s‚
->
sf
);

341 
√ed_ôem
 = 1;

342 
ôems
 = 0;

343 
wÆk
 = 
buf
;

344 
îr
 = "Improper sort specifierÜist.";

346 *
wÆk
){

348 if(
√ed_ôem
){

349 
	`‰ì
(
buf
);

352 
√ed_ôem
=1;

355 if(
√ed_ôem
Ë
ôems
++;

356 
√ed_ôem
=0;

358 } *++
wÆk
);

359 if(!
ôems
){

360 
	`‰ì
(
buf
);

363 #ifde‡
STRICT_LIST


364 if(
√ed_ôem
){

365 
	`‰ì
(
buf
);

369 if(
√ed_ôem
){

370 *--
wÆk
='\0';

374 
wÆk
 = 
buf
;

375 
ôems
--){

376 
s‹t_node
 *
ídp
;

377 
£p_loc
 = 
	`°Ωbrk
(
wÆk
," ,\t\n");

378 if(
£p_loc
) *sep_loc = '\0';

379 
¢ode
 = 
	`do_⁄e_s‹t_•ec
(
wÆk
);

380 if(!
¢ode
){

381 
	`‰ì
(
buf
);

384 
ídp
 = 
¢ode
; ídp->
√xt
)Éndp =Éndp->next;

385 
ídp
->
√xt
 = 
s‚
->
s_cooked
;

386 
s‚
->
s_cooked
 = 
¢ode
;

387 
wÆk
 = 
£p_loc
 + 1;

389 
	`‰ì
(
buf
);

390 
Æªady_∑r£d_s‹t
 = 1;

391  
NULL
;

392 
	}
}

403 c⁄° *
	$vîify_sh‹t_s‹t
(c⁄° *
¨g
){

404 c⁄° 
Æl
[] = "CGJKMNPRSTUcfgjkmnoprstuvy+-";

405 
checkoff
[256];

406 
i
;

407 c⁄° *
wÆk
;

408 
tmp
;

409 if(
	`°r•n
(
¨g
,
Æl
Ë!
	`°æí
(arg))  "Bad sorting code.";

410 
i
=256; i--;Ë
checkoff
[i] = 0;

411 
wÆk
 = 
¨g
;

413 
tmp
 = *
wÆk
;

414 
tmp
){

416  
NULL
;

419 
tmp
 = *(
wÆk
+1);

420 if(!
tmp
 ||Åmp=='+' ||Åmp=='-')  "Bad sorting code.";

423 if(
f‹e°_ty≥
)  "PPID sortánd forest output conflict.";

426 if(
checkoff
[
tmp
])  "Bad sorting code.";

428 
checkoff
[
tmp
] = 1;

431 
wÆk
++;

433 
	}
}

438 c⁄° *
	$sh‹t_s‹t_∑r£
(
sf_node
 *
s‚
){

439 
dúe˘i⁄
 = 0;

440 c⁄° *
wÆk
;

441 
tmp
;

442 
s‹t_node
 *
¢ode
;

443 
s‹t_node
 *
ídp
;

444 c⁄° 
sh‹ts‹t_°ru˘
 *
ss
;

445 
wÆk
 = 
s‚
->
sf
;

447 
tmp
 = *
wÆk
;

448 
tmp
){

450 
Æªady_∑r£d_s‹t
 = 1;

451  
NULL
;

453 
dúe˘i⁄
 = 0;

456 
dúe˘i⁄
 = 1;

459 
ss
 = 
	`£¨ch_sh‹ts‹t_¨øy
(
tmp
);

460 if(!
ss
)  "Unknown sort specifier.";

461 
¢ode
 = 
	`do_⁄e_s‹t_•ec
(
ss
->
•ec
);

462 if(!
¢ode
)  "Unknown sort specifier.";

463 
¢ode
->
ªvî£
 = 
dúe˘i⁄
;

464 
ídp
 = 
¢ode
; ídp->
√xt
)Éndp =Éndp->next;

465 
ídp
->
√xt
 = 
s‚
->
s_cooked
;

466 
s‚
->
s_cooked
 = 
¢ode
;

467 
dúe˘i⁄
 = 0;

470 
wÆk
++;

472 
	}
}

483 c⁄° *
	$∑r£_O_›ti⁄
(
sf_node
 *
s‚
){

484 c⁄° *
îr
;

486 if(
s‚
->
√xt
){

487 
îr
 = 
	`∑r£_O_›ti⁄
(
s‚
->
√xt
);

488 if(
îr
) Érr;

491 
s‚
->
sf_code
){

492 
SF_B_o
: 
SF_G_f‹m©
: 
SF_U_o
:

493 
îr
 = 
	`f‹m©_∑r£
(
s‚
);

494 if(!
îr
Ë
Æªady_∑r£d_f‹m©
 = 1;

496 
SF_U_O
:

498 if(
Æªady_∑r£d_f‹m©
)  "option -O canÇot follow other format options.";

499 
îr
 = 
	`f‹m©_∑r£
(
s‚
);

500 if(
îr
) Érr;

501 
Æªady_∑r£d_f‹m©
 = 1;

502 
	`O_wøp
(
s‚
,'u');

504 
SF_B_O
:

505 if(
have_gnu_s‹t
 || 
Æªady_∑r£d_s‹t
Ë
îr
 = "Multiple sort options.";

506 
îr
 = 
	`vîify_sh‹t_s‹t
(
s‚
->
sf
);

507 if(!
îr
){

508 
	`sh‹t_s‹t_∑r£
(
s‚
);

509 
Æªady_∑r£d_s‹t
 = 1;

510  
NULL
;

512 if(
Æªady_∑r£d_f‹m©
){

513 
îr
 = "option O isÇeither first formatÇor sort order.";

516 if(!
	`f‹m©_∑r£
(
s‚
)){

517 
Æªady_∑r£d_f‹m©
 = 1;

518 
	`O_wøp
(
s‚
,'b');

519  
NULL
;

522 
SF_G_s‹t
: 
SF_B_m
:

523 if(
Æªady_∑r£d_s‹t
Ë
îr
 = "Multiple sort options.";

524 
îr
 = 
	`l⁄g_s‹t_∑r£
(
s‚
);

525 
Æªady_∑r£d_s‹t
 = 1;

530  
îr
;

531 
	}
}

536 
	$de„r_sf_›ti⁄
(c⁄° *
¨g
, 
sour˚
){

537 
sf_node
 *
s‚
;

538 
buf
[16];

539 
di°
;

540 c⁄° 
f‹m©_°ru˘
 *
fs
;

541 
√ed_ôem
 = 1;

543 
s‚
 = 
	`mÆloc
((
sf_node
));

544 
s‚
->
sf
 = 
	`mÆloc
(
	`°æí
(
¨g
)+1);

545 
	`°r˝y
(
s‚
->
sf
, 
¨g
);

546 
s‚
->
sf_code
 = 
sour˚
;

547 
s‚
->
s_cooked
 = 
NULL
;

548 
s‚
->
f_cooked
 = 
NULL
;

549 
s‚
->
√xt
 = 
sf_li°
;

550 
sf_li°
 = 
s‚
;

552 if(
sour˚
 =
SF_G_s‹t
Ë
have_gnu_s‹t
 = 1;

555 if(
sour˚
 !
SF_U_o
)  1;

557 *
¨g
){

559 if(
√ed_ôem
)  1;

560 
√ed_ôem
=1;

563 if(
√ed_ôem
)  1;

566 if(!
√ed_ôem
) ;

567 
√ed_ôem
=0;

568 
di°
 = 
	`°rc•n
(
¨g
,", =");

569 if(
di°
>15)  1;

570 
	`°∫˝y
(
buf
,
¨g
,
di°
);

571 
buf
[
di°
] = '\0';

572 
fs
 = 
	`£¨ch_f‹m©_¨øy
(
buf
);

573 if(!
fs
)  1;

574 if(
fs
->
víd‹
)  1;

576 } *++
¨g
);

579 
	}
}

582 
	$ª£t_s‹tf‹m©
(){

583 
sf_li°
 = 
NULL
;

584 
f‹m©_li°
 = 
NULL
;

585 
s‹t_li°
 = 
NULL
;

586 
have_gnu_s‹t
 = 0;

587 
Æªady_∑r£d_s‹t
 = 0;

588 
Æªady_∑r£d_f‹m©
 = 0;

589 
	}
}

593 
	$fmt_add_a·î
(c⁄° *
födme
, 
f‹m©_node
 *
putme
){

594 
f‹m©_node
 *
wÆk
;

595 if(!
	`°rcmp
(
f‹m©_li°
->
«me
, 
födme
)){

596 
putme
->
√xt
 = 
f‹m©_li°
->next;

597 
f‹m©_li°
->
√xt
 = 
putme
;

600 
wÆk
 = 
f‹m©_li°
;

601 
wÆk
->
√xt
){

602 if(!
	`°rcmp
(
wÆk
->
√xt
->
«me
, 
födme
)){

603 
putme
->
√xt
 = 
wÆk
->next->next;

604 
wÆk
->
√xt
->√xà
putme
;

607 
wÆk
 = wÆk->
√xt
;

610 
	}
}

613 
	$fmt_dñëe
(c⁄° *
födme
){

614 
f‹m©_node
 *
wÆk
;

615 
f‹m©_node
 *
ﬁd
;

616 if(!
	`°rcmp
(
f‹m©_li°
->
«me
, 
födme
)){

617 
ﬁd
 = 
f‹m©_li°
;

618 
f‹m©_li°
 = f‹m©_li°->
√xt
;

619 
	`‰ì
(
ﬁd
);

622 
wÆk
 = 
f‹m©_li°
;

623 
wÆk
->
√xt
){

624 if(!
	`°rcmp
(
wÆk
->
√xt
->
«me
, 
födme
)){

625 
ﬁd
 = 
wÆk
->
√xt
;

626 
wÆk
->
√xt
 = walk->next->next;

627 
	`‰ì
(
ﬁd
);

630 
wÆk
 = wÆk->
√xt
;

633 
	}
}

637 
	#PUSH
(
foo
Ë(
‚
=
	`do_⁄e_•ec
(foo, 
NULL
), fn->
√xt
=
f‹m©_li°
, f‹m©_li°=‚)

	)

638 c⁄° *
	$gíî©e_sysv_li°
(){

639 
f‹m©_node
 *
‚
;

640 if((
f‹m©_modifõrs
 & 
FM_y
Ë&& !(
f‹m©_Êags
 & 
FF_Ul
))

642 if(
¥e„r_bsd_deÁu…s
){

643 if(
f‹m©_Êags
Ë
	`PUSH
("cmd");

644 
	`PUSH
("args");

645 
	`PUSH
("bsdtime");

646 if(!(
f‹m©_Êags
 & 
FF_Ul
)Ë
	`PUSH
("stat");

648 if(
f‹m©_Êags
 & 
FF_Uf
Ë
	`PUSH
("cmd");

649 
	`PUSH
("ucmd");

650 
	`PUSH
("time");

652 
	`PUSH
("tname");

653 if(
f‹m©_Êags
 & 
FF_Uf
Ë
	`PUSH
("stime");

655 if(
f‹m©_modifõrs
 & 
FM_F
){

657 if(!(
f‹m©_modifõrs
 & 
FM_P
)Ë
	`PUSH
("psr");

659 if(!–(
f‹m©_Êags
 & 
FF_Ul
Ë&& (
f‹m©_modifõrs
 & 
FM_y
Ë)Ë
	`PUSH
("rss");

661 if(
f‹m©_Êags
 & 
FF_Ul
){

662 
	`PUSH
("wchan");

665 if–(
f‹m©_Êags
 & 
FF_Ul
Ë&& !(
f‹m©_modifõrs
 & 
FM_y
) ){

666 if(
≥rs⁄Æôy
 & 
PER_IRIX_l
){

667 
	`PUSH
("sgi_rss");

668 
‚
 = 
	`mÆloc
((
f‹m©_node
));

669 
‚
->
width
 = 1;

670 
‚
->
«me
 = 
	`mÆloc
(2);

671 
	`°r˝y
(
‚
->
«me
, ":");

672 
‚
->
¥
 = 
NULL
;

673 
‚
->
√ed
 = 0;

674 
‚
->
víd‹
 = 
AIX
;

675 
‚
->
Êags
 = 0;

676 
‚
->
√xt
 = 
f‹m©_li°
;

677 
f‹m©_li°
=
‚
;

680 if((
f‹m©_modifõrs
 & 
FM_F
Ë|| (
f‹m©_Êags
 & 
FF_Ul
)){

681 
	`PUSH
("sz");

683 if(
f‹m©_Êags
 & 
FF_Ul
){

684 if(
f‹m©_modifõrs
 & 
FM_y
Ë
	`PUSH
("rss");

685 if(
≥rs⁄Æôy
 & (
PER_ZAP_ADDR
|
PER_IRIX_l
)Ë
	`PUSH
("sgi_p");

686 
	`PUSH
("addr_1");

688 if(
f‹m©_modifõrs
 & 
FM_c
){

689 
	`PUSH
("pri"); PUSH("class");

690 }if(
f‹m©_Êags
 & 
FF_Ul
){

691 
	`PUSH
("ni"); PUSH("opri");

693 if((
f‹m©_modifõrs
 & 
FM_L
Ë&& (
f‹m©_Êags
 & 
FF_Uf
)Ë
	`PUSH
("nlwp");

694 if–(
f‹m©_Êags
 & (
FF_Uf
|
FF_Ul
)Ë&& !(
f‹m©_modifõrs
 & 
FM_c
ËË
	`PUSH
("c");

695 if(
f‹m©_modifõrs
 & 
FM_P
Ë
	`PUSH
("psr");

696 if(
f‹m©_modifõrs
 & 
FM_L
Ë
	`PUSH
("lwp");

697 if(
f‹m©_modifõrs
 & 
FM_j
){

698 
	`PUSH
("sid");

699 
	`PUSH
("pgid");

701 if(
f‹m©_Êags
 & (
FF_Uf
|
FF_Ul
)Ë
	`PUSH
("ppid");

702 if(
f‹m©_modifõrs
 & 
FM_T
Ë
	`PUSH
("spid");

703 
	`PUSH
("pid");

704 if(
f‹m©_Êags
 & 
FF_Uf
){

705 if(
≥rs⁄Æôy
 & 
PER_SANE_USER
Ë
	`PUSH
("user");

706 
	`PUSH
("uid_hack");

707 }if(
f‹m©_Êags
 & 
FF_Ul
){

708 
	`PUSH
("uid");

710 if(
f‹m©_Êags
 & 
FF_Ul
){

711 
	`PUSH
("s");

712 if(!(
f‹m©_modifõrs
 & 
FM_y
)Ë
	`PUSH
("f");

714 if(
f‹m©_modifõrs
 & 
FM_M
){

715 
	`PUSH
("label");

717 
f‹m©_modifõrs
 = 0;

718  
NULL
;

719 
	}
}

727 c⁄° *
	$¥o˚ss_sf_›ti⁄s
(
loˇlbrokí
){

728 c⁄° *
îr
;

729 
sf_node
 *
sf_wÆk
;

730 
›ti⁄_sour˚
;

731 if(
≥rs⁄Æôy
 & 
PER_BROKEN_o
Ë
loˇlbrokí
 = 1;

732 if(
≥rs⁄Æôy
 & 
PER_GOOD_o
Ë
loˇlbrokí
 = 0;

733 
brokí
 = 
loˇlbrokí
;

734 if(
sf_li°
){

735 
îr
 = 
	`∑r£_O_›ti⁄
(
sf_li°
);

736 if(
îr
) Érr;

739 if(
f‹m©_li°
Ë
	`¥ötf
("Bug: mustÑesetÅheÜist first!\n");

742 
sf_wÆk
 = 
sf_li°
;

743 
sf_wÆk
){

744 
f‹m©_node
 *
fmt_wÆk
;

745 
fmt_wÆk
 = 
sf_wÆk
->
f_cooked
;

746 
sf_wÆk
->
f_cooked
 = 
NULL
;

747 
fmt_wÆk
){

748 
f‹m©_node
 *
åavÀr
;

749 
åavÀr
 = 
fmt_wÆk
;

750 
fmt_wÆk
 = fmt_wÆk->
√xt
;

751 
åavÀr
->
√xt
 = 
f‹m©_li°
;

752 
f‹m©_li°
 = 
åavÀr
;

754 
sf_wÆk
 = sf_wÆk->
√xt
;

758 
sf_wÆk
 = 
sf_li°
;

759 
sf_wÆk
){

760 
s‹t_node
 *
§t_wÆk
;

761 
§t_wÆk
 = 
sf_wÆk
->
s_cooked
;

762 
sf_wÆk
->
s_cooked
 = 
NULL
;

763 
§t_wÆk
){

764 
s‹t_node
 *
åavÀr
;

765 
åavÀr
 = 
§t_wÆk
;

766 
§t_wÆk
 = sπ_wÆk->
√xt
;

767 
åavÀr
->
√xt
 = 
s‹t_li°
;

768 
s‹t_li°
 = 
åavÀr
;

770 
sf_wÆk
 = sf_wÆk->
√xt
;

773 if(
f‹m©_li°
){

774 if(
f‹m©_Êags
)  "Conflicting format options.";

775 
›ti⁄_sour˚
 = 1;

777 
f‹m©_node
 *
fmt_wÆk
;

778 
f‹m©_node
 *
‚
;

779 c⁄° *
•ec
;

780 
f‹m©_Êags
){

785 0: 
•ec
=
NULL
; ;

786 
FF_Uf
 | 
FF_Ul
: 
•ec
=
sysv_Ê_f‹m©
; ;

787 
FF_Uf
: 
•ec
=
sysv_f_f‹m©
; ;

788 
FF_Ul
: 
•ec
=
sysv_l_f‹m©
; ;

791 
FF_Uj
: 
•ec
=
sysv_j_f‹m©
; ;

792 
FF_Uj
 | 
FF_Ul
: 
•ec
="RD_lj"; ;

793 
FF_Uj
 | 
FF_Uf
: 
•ec
="RD_fj"; ;

796 
FF_Bj
: 
•ec
=
bsd_j_f‹m©
; ;

797 
FF_Bl
: 
•ec
=
bsd_l_f‹m©
; ;

798 
FF_Bs
: 
•ec
=
bsd_s_f‹m©
; ;

799 
FF_Bu
: 
•ec
=
bsd_u_f‹m©
; ;

800 
FF_Bv
: 
•ec
=
bsd_v_f‹m©
; ;

803 
FF_LX
: 
•ec
="OL_X"; ;

804 
FF_Lm
: 
•ec
="OL_m"; ;

807 
FF_Fc
: 
•ec
="FLASK_context"; ;

808 
FF_Fs
: 
•ec
="FLASK_sid"; ;

812 
›ti⁄_sour˚
 = 0;

813 if(!
f‹m©_Êags
 && !
f‹m©_modifõrs
){

814 *
tmp
;

815 
tmp
 = 
	`gëív
("PS_FORMAT");

816 if(
tmp
 && *tmp){

817 
•ec
 = 
tmp
;

818 
›ti⁄_sour˚
 = 2;

822 if(
•ec
){

823 
‚
 = 
	`do_⁄e_•ec
(
•ec
, 
NULL
);

824 
fmt_wÆk
 = 
‚
;

825 
fmt_wÆk
){

826 
f‹m©_node
 *
åavÀr
;

827 
åavÀr
 = 
fmt_wÆk
;

828 
fmt_wÆk
 = fmt_wÆk->
√xt
;

829 
åavÀr
->
√xt
 = 
f‹m©_li°
;

830 
f‹m©_li°
 = 
åavÀr
;

833 
îr
 = 
	`gíî©e_sysv_li°
();

834 if(
îr
) Érr;

835 
›ti⁄_sour˚
 = 3;

838 if(
f‹m©_modifõrs
){

839 
f‹m©_node
 *
‚
;

840 if(
›ti⁄_sour˚
)  "Can't use output modifiers with user-defined output";

841 if(
f‹m©_modifõrs
 & 
FM_j
){

842 
‚
 = 
	`do_⁄e_•ec
("pgid", 
NULL
);

843 if(!
	`fmt_add_a·î
("PPID", 
‚
)) if(!fmt_add_after("PID", fn))

845 
‚
 = 
	`do_⁄e_•ec
("sid", 
NULL
);

846 if(!
	`fmt_add_a·î
("PGID", 
‚
))  "Lost my PGID!";

848 if(
f‹m©_modifõrs
 & 
FM_y
){

850 
	`fmt_dñëe
("F");

851 
‚
 = 
	`do_⁄e_•ec
("rss", 
NULL
);

852 if(
	`fmt_add_a·î
("ADDR", 
‚
)Ë
	`fmt_dñëe
("ADDR");

854 if(
f‹m©_modifõrs
 & 
FM_c
){

855 
	`fmt_dñëe
("%CPU"); fmt_delete("CPU"); fmt_delete("CP"); fmt_delete("C");

856 
	`fmt_dñëe
("NI");

857 
‚
 = 
	`do_⁄e_•ec
("˛ass", 
NULL
);

858 if(!
	`fmt_add_a·î
("PRI", 
‚
))

860 
	`fmt_dñëe
("PRI");

861 
‚
 = 
	`do_⁄e_•ec
("¥i", 
NULL
);

862 if(!
	`fmt_add_a·î
("CLS", 
‚
))  "Lost my CLS!";

865 if(!
›ti⁄_sour˚
){

866 
f‹m©_node
 *
‚
;

871 if((
≥rs⁄Æôy
 & 
PER_ZAP_ADDR
Ë&& (
f‹m©_Êags
 & 
FF_Ul
)){

872 
‚
 = 
	`do_⁄e_•ec
("sgi_p", 
NULL
);

873 if(
	`fmt_add_a·î
("ADDR", 
‚
)Ë
	`fmt_dñëe
("ADDR");

875 if((
≥rs⁄Æôy
 & 
PER_SANE_USER
Ë&& (
f‹m©_Êags
 & 
FF_Uf
)){

876 
‚
 = 
	`do_⁄e_•ec
("u£r", 
NULL
);

877 if(
	`fmt_add_a·î
("UID", 
‚
)Ë
	`fmt_dñëe
("UID");

882  
NULL
;

883 
	}
}

	@skill.c

11 
	~<f˙é.h
>

12 
	~<pwd.h
>

13 
	~<dúít.h
>

14 
	~<î∫o.h
>

15 
	~<sig«l.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<sys/ªsour˚.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/time.h
>

22 
	~<sys/ty≥s.h
>

23 
	~<uni°d.h
>

24 
	~"¥oc/sig.h
"

25 
	~"¥oc/dev«me.h
"

26 
	~"¥oc/¥o˝s.h
"

27 
	~"¥oc/vîsi⁄.h
"

29 
	gf_Êag
, 
	gi_Êag
, 
	gv_Êag
, 
	gw_Êag
, 
	gn_Êag
;

31 
	gây_cou¡
, 
	guid_cou¡
, 
	gcmd_cou¡
, 
	gpid_cou¡
;

32 *
	gâys
;

33 
uid_t
 *
	guids
;

34 **
	gcmds
;

35 *
	gpids
;

37 
	#ENLIST
(
thög
,
addme
) do{ \

38 if(!
thög
##
s
Ëthög##†
	`mÆloc
((*thög##s)*
ßved_¨gc
); \

39 if(!
thög
##
s
Ë
	`Ârötf
(
°dîr
,"Nÿmem‹y.\n"),
	`exô
(2); \

40 
thög
##
s
[thög##
_cou¡
++] = 
addme
; \

41 }0)

	)

43 
	gmy_pid
;

44 
	gßved_¨gc
;

45 **
	gßved_¨gv
;

47 
	gsig_‹_¥i
;

49 
	g¥ogøm
;

50 
	#PROG_GARBAGE
 0

	)

51 
	#PROG_KILL
 1

	)

52 
	#PROG_SKILL
 2

	)

54 
	#PROG_SNICE
 4

	)

59 
	$di•œy_kûl_vîsi⁄
(){

61 
¥ogøm
) {

62 
PROG_KILL
:

63 
	`Ârötf
(
°dout
, "kû»(%s)\n",
¥o˝s_vîsi⁄
);

65 
PROG_SKILL
:

66 
	`Ârötf
(
°dout
, "skû»(%s)\n",
¥o˝s_vîsi⁄
);

68 
PROG_SNICE
:

69 
	`Ârötf
(
°dout
, "¢i˚ (%s)\n",
¥o˝s_vîsi⁄
);

72 
	`Ârötf
(
°dout
, "unknow¿(%s)\n",
¥o˝s_vîsi⁄
);

75 
	}
}

78 
	$huπ_¥oc
(
ây
, 
uid
, 
pid
, *
cmd
){

79 
Áûed
;

80 
ßved_î∫o
;

81 
dn_buf
[1000];

82 
	`dev_to_ây
(
dn_buf
, 999, 
ây
, 
pid
, 
ABBREV_DEV
);

83 if(
i_Êag
){

84 
buf
[8];

85 
	`Ârötf
(
°dîr
, "%-8.8s %-8.8s %5d %-16.16s ? ",

86 (*)
dn_buf
,
	`u£r_‰om_uid
(
uid
),
pid
,
cmd


88 if(!
	`fgës
(
buf
,7,
°dö
)){

89 
	`¥ötf
("\n");

90 
	`exô
(0);

92 if(*
buf
!='y' && *buf!='Y') ;

95 if(
¥ogøm
==
PROG_SKILL
Ë
Áûed
=
	`kûl
(
pid
,
sig_‹_¥i
);

96 
Áûed
=
	`£çri‹ôy
(
PRIO_PROCESS
,
pid
,
sig_‹_¥i
);

97 
ßved_î∫o
 = 
î∫o
;

98 if(
w_Êag
 && 
Áûed
){

99 
	`Ârötf
(
°dîr
, "%-8.8s %-8.8s %5d %-16.16s ",

100 (*)
dn_buf
,
	`u£r_‰om_uid
(
uid
),
pid
,
cmd


102 
î∫o
 = 
ßved_î∫o
;

103 
	`≥º‹
("");

106 if(
i_Êag
) ;

107 if(
v_Êag
){

108 
	`¥ötf
("%-8.8s %-8.8s %5d %-16.16s\n",

109 (*)
dn_buf
,
	`u£r_‰om_uid
(
uid
),
pid
,
cmd


113 if(
n_Êag
){

114 
	`¥ötf
("%d\n",
pid
);

117 
	}
}

121 
	$check_¥oc
(
pid
){

122 
buf
[128];

123 
°©
 
°©buf
;

124 *
tmp
;

125 
ây
;

126 
fd
;

127 
i
;

128 if(
pid
==
my_pid
) ;

129 
	`•rötf
(
buf
, "/¥oc/%d/°©", 
pid
);

130 
fd
 = 
	`›í
(
buf
,
O_RDONLY
);

131 if(
fd
==-1){

132 if(
pids
 && 
w_Êag
Ë
	`¥ötf
("WARNING:Öro˚s†%d couldÇŸ bêfound.",
pid
);

135 
	`f°©
(
fd
, &
°©buf
);

136 if(
uids
){

137 
i
=
uid_cou¡
;

138 
i
--Ëif(
uids
[i]==
°©buf
.
°_uid
) ;

139 if(
i
==-1Ë
˛osuª
;

141 
	`ªad
(
fd
,
buf
,128);

142 
buf
[127] = '\0';

143 
tmp
 = 
	`°ºchr
(
buf
, ')');

144 *
tmp
++ = '\0';

145 
i
 = 5; i--Ë*
tmp
++!=' ');

146 
ây
 = 
	`©oi
(
tmp
);

147 if(
âys
){

148 
i
=
ây_cou¡
;

149 
i
--Ëif(
âys
[i]==
ây
) ;

150 if(
i
==-1Ë
˛osuª
;

152 
tmp
 = 
	`°rchr
(
buf
, '(') + 1;

153 if(
cmds
){

154 
i
=
cmd_cou¡
;

156 
i
--Ëif(
cmds
[i][0]==*
tmp
 && !
	`°rcmp
(cmds[i],tmp)) ;

157 if(
i
==-1Ë
˛osuª
;

164 
	`huπ_¥oc
(
ây
, 
°©buf
.
°_uid
, 
pid
, 
tmp
);

165 
˛osuª
:

166 
	`˛o£
(
fd
);

167 
	}
}

172 
	$show_li°s
(){

173 
i
;

175 
	`Ârötf
(
°dîr
, "%d TTY: ", 
ây_cou¡
);

176 if(
âys
){

177 
i
=
ây_cou¡
;

178 
i
--){

179 
	`Ârötf
(
°dîr
, "%d,%d%c", (
âys
[
i
]>>8)&0xff,Åtys[i]&0xff, i?' ':'\n');

181 }
	`Ârötf
(
°dîr
, "\n");

183 
	`Ârötf
(
°dîr
, "%d UID: ", 
uid_cou¡
);

184 if(
uids
){

185 
i
=
uid_cou¡
;

186 
i
--Ë
	`Ârötf
(
°dîr
, "%d%c", 
uids
[i], i?' ':'\n');

187 }
	`Ârötf
(
°dîr
, "\n");

189 
	`Ârötf
(
°dîr
, "%d PID: ", 
pid_cou¡
);

190 if(
pids
){

191 
i
=
pid_cou¡
;

192 
i
--Ë
	`Ârötf
(
°dîr
, "%d%c", 
pids
[i], i?' ':'\n');

193 }
	`Ârötf
(
°dîr
, "\n");

195 
	`Ârötf
(
°dîr
, "%d CMD: ", 
cmd_cou¡
);

196 if(
cmds
){

197 
i
=
cmd_cou¡
;

198 
i
--Ë
	`Ârötf
(
°dîr
, "%s%c", 
cmds
[i], i?' ':'\n');

199 }
	`Ârötf
(
°dîr
, "\n");

200 
	}
}

205 
	$ôî©e
(){

206 
pid
;

207 
DIR
 *
d
;

208 
dúít
 *
de
;

209 if(
pids
){

210 
pid
 = 
pid_cou¡
;

211 
pid
--Ë
	`check_¥oc
(
pids
[pid]);

216 if(!
âys
 && !
cmds
 && !
pids
 && !
i_Êag
){

219 
d
 = 
	`›ídú
("/proc");

220 if(!
d
){

221 
	`≥º‹
("/proc");

222 
	`exô
(1);

224 –
de
 = 
	`ªaddú
(
d
) )){

225 if(
de
->
d_«me
[0] > '9') ;

226 if(
de
->
d_«me
[0] < '1') ;

227 
pid
 = 
	`©oi
(
de
->
d_«me
);

228 if(
pid
Ë
	`check_¥oc
(pid);

230 
	`˛o£dú
 (
d
);

231 
	}
}

234 
	$kûl_ußge
(){

235 
	`Ârötf
(
°dîr
,

244 
	`exô
(1);

245 
	}
}

248 
	$kûl_maö
(
¨gc
, *
¨gv
[]){

249 *
sig±r
;

250 
signo
 = 
SIGTERM
;

251 
exôvÆue
 = 0;

252 if(
¨gc
<2Ë
	`kûl_ußge
();

253 if(!
	`°rcmp
(
¨gv
[1],"-V")|| !strcmp(argv[1],"--version")){

254 
	`di•œy_kûl_vîsi⁄
();

255 
	`exô
(0);

257 if(
¨gv
[1][0]!='-'){

258 
¨gv
++;

259 
¨gc
--;

260 
no_m‹e_¨gs
;

264 if(
¨gv
[1][1]=='l' &&árgv[1][2]=='\0'){

265 if(
¨gc
==2){

266 
	`unix_¥öt_sig«ls
();

267 
	`exô
(0);

270 if(
¨gc
>128 || 
¨gv
[2][0] ='-'Ë
	`kûl_ußge
();

271 
	`exô
(
	`¥öt_giví_sig«ls
(
¨gc
-2, 
¨gv
+2, 80));

275 if(
¨gv
[1][1]=='L' &&árgv[1][2]=='\0'){

276 if(
¨gc
==2){

277 
	`¥ëty_¥öt_sig«ls
();

278 
	`exô
(0);

280 
	`kûl_ußge
();

282 if(
¨gv
[1][1]=='-' &&árgv[1][2]=='\0'){

283 
¨gv
+=2;

284 
¨gc
-=2;

285 
no_m‹e_¨gs
;

287 if(
¨gv
[1][1]=='-'Ë
	`kûl_ußge
();

288 if(
¨gv
[1][1]=='s' &&árgv[1][2]=='\0'){

289 
sig±r
 = 
¨gv
[2];

290 
¨gv
+=3;

291 
¨gc
-=3;

293 
sig±r
 = 
¨gv
[1]+1;

294 
¨gv
+=2;

295 
¨gc
-=2;

297 
signo
 = 
	`sig«l_«me_to_numbî
(
sig±r
);

298 if(
signo
<0){

299 
	`Ârötf
(
°dîr
, "ERROR: unknow¿sig«»«mê\"%s\".\n", 
sig±r
);

300 
	`kûl_ußge
();

302 
no_m‹e_¨gs
:

303 if(!
¨gc
Ë
	`kûl_ußge
();

304 
¨gc
--){

305 
pid
;

306 *
ídp
;

307 
pid
 = 
	`°πﬁ
(
¨gv
[
¨gc
],&
ídp
,10);

308 if(!*
ídp
){

309 if(!
	`kûl
((
pid_t
)
pid
,
signo
)) ;

310 
exôvÆue
 = 1;

313 
	`Ârötf
(
°dîr
, "ERROR: g¨bagê¥o˚s†ID \"%s\".\n", 
¨gv
[
¨gc
]);

314 
	`kûl_ußge
();

316 
	`exô
(
exôvÆue
);

317 
	}
}

320 
	$skûl¢i˚_ußge
(){

321 if(
¥ogøm
==
PROG_SKILL
){

322 
	`Ârötf
(
°dîr
,

331 
	`Ârötf
(
°dîr
,

340 
	`Ârötf
(
°dîr
,

356 
	`exô
(1);

357 
	}
}

360 
	$_skûl¢i˚_ußge
(
löe
){

361 
	`Ârötf
(
°dîr
,"Somëhögáàlöê%d.\n", 
löe
);

362 
	`skûl¢i˚_ußge
();

363 
	}
}

364 
	#skûl¢i˚_ußge
(Ë
	`_skûl¢i˚_ußge
(
__LINE__
)

	)

367 
	#NEXTARG
 (
¨gc
?–¨gc--, ((
¨g±r
=*++
¨gv
)Ë):
NULL
)

	)

370 
	#NO_PRI_VAL
 (()0xdófbìf)

	)

371 
	$skûl¢i˚_∑r£
(
¨gc
, *
¨gv
[]){

372 
signo
 = -1;

373 
¥öo
 = 
NO_PRI_VAL
;

374 
f‹˚
 = 0;

375 
num_found
 = 0;

376 *
¨g±r
;

377 if(
¨gc
<2Ë
	`skûl¢i˚_ußge
();

378 if(
¨gc
==2 && 
¨gv
[1][0]=='-'){

379 if(!
	`°rcmp
(
¨gv
[1],"-L")){

380 
	`¥ëty_¥öt_sig«ls
();

381 
	`exô
(0);

383 if(!
	`°rcmp
(
¨gv
[1],"-l")){

384 
	`unix_¥öt_sig«ls
();

385 
	`exô
(0);

387 if(!
	`°rcmp
(
¨gv
[1],"-V")|| !strcmp(argv[1],"--version")){

388 
	`di•œy_kûl_vîsi⁄
();

389 
	`exô
(0);

391 
	`skûl¢i˚_ußge
();

393 
NEXTARG
;

395 
¨gc
){

396 if(
f‹˚
 && !
num_found
){

397 
	`Ârötf
(
°dîr
,"ERROR: -%¯u£d wôh bad d©a.\n", 
f‹˚
);

398 
	`skûl¢i˚_ußge
();

400 
f‹˚
 = 0;

401 if(
¥ogøm
==
PROG_SKILL
 && 
signo
<0 && *
¨g±r
=='-'){

402 
signo
 = 
	`sig«l_«me_to_numbî
(
¨g±r
+1);

403 if(
signo
>=0){

404 if(!
NEXTARG
) ;

408 if(
¥ogøm
==
PROG_SNICE
 && 
¥öo
==
NO_PRI_VAL


409 && (*
¨g±r
=='+' || *argptr=='-') &&árgptr[1]){

410 
vÆ
;

411 *
ídp
;

412 
vÆ
 = 
	`°πﬁ
(
¨g±r
,&
ídp
,10);

413 if(!*
ídp
 && 
vÆ
<=999 && val>=-999){

414 
¥öo
=
vÆ
;

415 if(!
NEXTARG
) ;

420 if(*
¨g±r
=='-' &&árgptr[1]){

421 
¨g±r
++;

423 –
f‹˚
 = *
¨g±r
++ )){

424 : 
	`skûl¢i˚_ußge
();

429 if(!*
¨g±r
){

430 if(!
NEXTARG
){

431 
	`Ârötf
(
°dîr
,"ERROR: -%¯wôhÇŸhögá·î it.\n", 
f‹˚
);

432 
	`skûl¢i˚_ußge
();

435 
£À˘i⁄_cﬁÀ˘i⁄
;

436 'f': 
f_Êag
++; ;

437 'i': 
i_Êag
++; ;

438 'v': 
v_Êag
++; ;

439 'w': 
w_Êag
++; ;

440 'n': 
n_Êag
++; ;

442 
NEXTARG
;

448 }
f‹˚
);

450 
£À˘i⁄_cﬁÀ˘i⁄
:

451 
num_found
 = 0;

452 
f‹˚
){

453 : 
	`skûl¢i˚_ußge
();

456 if(
¨gc
){

457 
°©
 
sbuf
;

458 
∑th
[32];

459 if(!
¨g±r
Ë
	`skûl¢i˚_ußge
();

460 
	`¢¥ötf
(
∑th
,32,"/dev/%s",
¨g±r
);

461 if(
	`°©
(
∑th
, &
sbuf
)>=0 && 
	`S_ISCHR
(sbuf.
°_mode
)){

462 
num_found
++;

463 
	`ENLIST
(
ây
,
sbuf
.
°_rdev
);

464 if(!
NEXTARG
) ;

465 }if(!(
¨g±r
[1])){

466 *
¨g±r
){

468 if(
	`°©
(
¨g±r
,&
sbuf
)<0) ;

471 
num_found
++;

472 
	`ENLIST
(
ây
,-1);

473 if(!
NEXTARG
) ;

477 if(
f‹˚
) ;

479 if(
¨gc
){

480 
∑sswd
 *
∑sswd_d©a
;

481 
∑sswd_d©a
 = 
	`gëpw«m
(
¨g±r
);

482 if(
∑sswd_d©a
){

483 
num_found
++;

484 
	`ENLIST
(
uid
,
∑sswd_d©a
->
pw_uid
);

485 if(!
NEXTARG
) ;

488 if(
f‹˚
) ;

490 if(
¨gc
 && *
¨g±r
>='0' && *argptr<='9'){

491 *
ídp
;

492 
num
;

493 
num
 = 
	`°πﬁ
(
¨g±r
, &
ídp
, 0);

494 if(*
ídp
 == '\0'){

495 
num_found
++;

496 
	`ENLIST
(
pid
,
num
);

497 if(!
NEXTARG
) ;

500 if(
f‹˚
) ;

501 if(
num_found
) ;

503 if(
¨gc
){

504 
num_found
++;

505 
	`ENLIST
(
cmd
,
¨g±r
);

506 if(!
NEXTARG
) ;

511 if(!
ây_cou¡
 && !
uid_cou¡
 && !
cmd_cou¡
 && !
pid_cou¡
){

512 
	`Ârötf
(
°dîr
,"ERROR:ÇoÖrocess selection criteria.\n");

513 
	`skûl¢i˚_ußge
();

515 if((
f_Êag
|
i_Êag
|
v_Êag
|
w_Êag
|
n_Êag
) & ~1){

516 
	`Ârötf
(
°dîr
,"ERROR: general flags mayÇot beÑepeated.\n");

517 
	`skûl¢i˚_ußge
();

519 if(
i_Êag
 && (
v_Êag
|
f_Êag
|
n_Êag
)){

520 
	`Ârötf
(
°dîr
,"ERROR: -i makesÇo sense with -v, -f,ánd -n.\n");

521 
	`skûl¢i˚_ußge
();

523 if(
v_Êag
 && (
i_Êag
|
f_Êag
)){

524 
	`Ârötf
(
°dîr
,"ERROR: -v makesÇo sense with -iánd -f.\n");

525 
	`skûl¢i˚_ußge
();

528 if(
¥öo
==
NO_PRI_VAL
)Örino=4;

529 if(
signo
<0Ësigno=
SIGTERM
;

530 if(
n_Êag
){

531 
¥ogøm
=
PROG_SKILL
;

532 
signo
=0;

534 if(
¥ogøm
==
PROG_SKILL
Ë
sig_‹_¥i
 = 
signo
;

535 
sig_‹_¥i
 = 
¥öo
;

536 
	}
}

539 
	$maö
(
¨gc
, *
¨gv
[]){

540 *
tmp°r
;

541 
my_pid
 = 
	`gëpid
();

542 
ßved_¨gv
 = 
¨gv
;

543 
ßved_¨gc
 = 
¨gc
;

544 if(!
¨gc
){

545 
	`Ârötf
(
°dîr
,"ERROR: couldÇot determine ownÇame.\n");

546 
	`exô
(1);

548 
tmp°r
=
	`°ºchr
(*
¨gv
,'/');

549 if(
tmp°r
)Åmpstr++;

550 if(!
tmp°r
Ëtmp°r=*
¨gv
;

551 
¥ogøm
 = 
PROG_GARBAGE
;

552 if(*
tmp°r
=='s'){

553 
	`£çri‹ôy
(
PRIO_PROCESS
,
my_pid
,-20);

554 if(!
	`°rcmp
(
tmp°r
,"¢i˚")Ë
¥ogøm
 = 
PROG_SNICE
;

555 if(!
	`°rcmp
(
tmp°r
,"skûl")Ë
¥ogøm
 = 
PROG_SKILL
;

557 if(!
	`°rcmp
(
tmp°r
,"kûl")Ë
¥ogøm
 = 
PROG_KILL
;

559 
¥ogøm
){

560 
PROG_SNICE
:

561 
PROG_SKILL
:

562 
	`skûl¢i˚_∑r£
(
¨gc
, 
¨gv
);

564 
	`ôî©e
();

566 
PROG_KILL
:

567 
	`kûl_maö
(
¨gc
, 
¨gv
);

570 
	`Ârötf
(
°dîr
,"ERROR:Çÿ\"%s\" suµ‹t.\n",
tmp°r
);

573 
	}
}

	@sysctl.c

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<uni°d.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<dúít.h
>

27 
	~<°rög.h
>

28 
	~<î∫o.h
>

33 
	tboﬁ
;

35 
boﬁ
 
	gåue
 = 1;

36 
boﬁ
 
	gÁl£
 = 0;

42 
Ußge
(c⁄° *
«me
);

43 
Pªlﬂd
(c⁄° *
fûíame
);

44 
WrôeSëtög
(c⁄° *
£âög
);

45 
RódSëtög
(c⁄° *
£âög
);

46 
Di•œyAŒ
(c⁄° *
∑th
, 
boﬁ
 
ShowTabÀUtû
);

53 c⁄° 
	gPROC_PATH
[] = "/proc/sys/";

54 c⁄° 
	gDEFAULT_PRELOAD
[] = "/etc/sysctl.conf";

55 
boﬁ
 
	gPrötName
;

56 
boﬁ
 
	gPrötNewlöe
;

59 c⁄° 
	gERR_UNKNOWN_PARAMETER
[] = "error: UnknownÖarameter '%s'\n";

60 c⁄° 
	gERR_MALFORMED_SETTING
[] = "error: Malformed setting '%s'\n";

61 c⁄° 
	gERR_NO_EQUALS
[] = "error: '%s' must be ofÅhe formÇame=value\n";

62 c⁄° 
	gERR_INVALID_KEY
[] = "error: '%s' isán unknown key\n";

63 c⁄° 
	gERR_UNKNOWN_WRITING
[] = "error: unknownÉrror %d setting key '%s'\n";

64 c⁄° 
	gERR_UNKNOWN_READING
[] = "error: unknownÉrror %dÑeading key '%s'\n";

65 c⁄° 
	gERR_PERMISSION_DENIED
[] = "error:Öermission denied on key '%s'\n";

66 c⁄° 
	gERR_OPENING_DIR
[] = "error: unableÅo open directory '%s'\n";

67 c⁄° 
	gERR_PRELOAD_FILE
[] = "error: unableÅo openÖreload file '%s'\n";

68 c⁄° 
	gWARN_BAD_LINE
[] = "warning: %s(%d): invalid syntax, continuing...\n";

71 
	$¶ashdŸ
(*
p
, 
ﬁd
, 
√w
){

72 
p
 = 
	`°Ωbrk
(p,"/.");

73 if(!
p
) ;

74 if(*
p
==
√w
) ;

75 
p
){

76 
c
 = *
p
;

77 if(
c
==
ﬁd
Ë*
p
=
√w
;

78 if(
c
==
√w
Ë*
p
=
ﬁd
;

79 
p
 = 
	`°Ωbrk
(p+1,"/.");

81 
	}
}

87 
	$maö
(
¨gc
, **
¨gv
) {

88 c⁄° *
me
 = (c⁄° *)
	`ba£«me
(
¨gv
[0]);

89 
boﬁ
 
SwôchesAŒowed
 = 
åue
;

90 
boﬁ
 
WrôeMode
 = 
Ál£
;

91 
Rëu∫Code
 = 0;

92 c⁄° *
¥ñﬂdfûe
 = 
DEFAULT_PRELOAD
;

94 
PrötName
 = 
åue
;

95 
PrötNewlöe
 = 
åue
;

97 i‡(
¨gc
 < 2) {

98  
	`Ußge
(
me
);

101 
¨gv
++;

103 ; 
¨gv
 && *argv && **argv;árgv++) {

104 i‡(
SwôchesAŒowed
 && **
¨gv
 == '-') {

105 (*
¨gv
)[1]) {

108 
PrötNewlöe
 = 
Ál£
;

111 
PrötName
 = 
Ál£
;

114 
SwôchesAŒowed
 = 
Ál£
;

115 
WrôeMode
 = 
åue
;

118 
¨gv
++;

119 i‡(
¨gv
 && *argv && **argv) {

120 
¥ñﬂdfûe
 = *
¨gv
;

123 
	`Pªlﬂd
(
¥ñﬂdfûe
);

129 
SwôchesAŒowed
 = 
Ál£
;

130  
	`Di•œyAŒ
(
PROC_PATH
, ((*
¨gv
)[1] ='a'Ë? 
Ál£
 : 
åue
);

133  
	`Ußge
(
me
);

135 
	`Ârötf
(
°dîr
, 
ERR_UNKNOWN_PARAMETER
, *
¨gv
);

136  
	`Ußge
(
me
);

139 
SwôchesAŒowed
 = 
Ál£
;

140 i‡(
WrôeMode
)

141 
Rëu∫Code
 = 
	`WrôeSëtög
(*
¨gv
);

142 
	`RódSëtög
(*
¨gv
);

146  
Rëu∫Code
;

147 
	}
}

157 
	$Ußge
(c⁄° *
«me
) {

158 
	`¥ötf
("usage: %s [-n] variable ... \n"

162 " %†[-n] -A\n", 
«me
,Çame,Çame,Çame,Çame);

164 
	}
}

171 *
	$SåùLódögAndTøûögS∑˚s
(*
⁄ñöe
) {

172 *
t
;

174 i‡(!
⁄ñöe
 || !*oneline)

175  
⁄ñöe
;

177 
t
 = 
⁄ñöe
;

178 
t
 +
	`°æí
(
⁄ñöe
)-1;

180 (*
t
==' ' || *t=='\t' || *t=='\n' || *t=='\r'Ë&&Å!=
⁄ñöe
)

181 *
t
-- = 0;

183 
t
 = 
⁄ñöe
;

185 (*
t
==' ' || *t=='\t') && *t!=0)

186 
t
++;

188  
t
;

189 
	}
}

198 
	$Pªlﬂd
(c⁄° *
fûíame
) {

199 
FILE
 *
Â
;

200 
⁄ñöe
[257];

201 
buf„r
[257];

202 *
t
;

203 
n
 = 0;

204 *
«me
, *
vÆue
;

206 i‡(!
fûíame
 || ((
Â
 = 
	`f›í
(fûíame, "r")Ë=
NULL
)) {

207 
	`Ârötf
(
°dîr
, 
ERR_PRELOAD_FILE
, 
fûíame
);

211 
	`fgës
(
⁄ñöe
, 256, 
Â
)) {

212 
⁄ñöe
[256] = 0;

213 
n
++;

214 
t
 = 
	`SåùLódögAndTøûögS∑˚s
(
⁄ñöe
);

216 i‡(
	`°æí
(
t
) < 2)

219 i‡(*
t
 == '#' || *t == ';')

222 
«me
 = 
	`°πok
(
t
, "=");

223 i‡(!
«me
 || !*name) {

224 
	`Ârötf
(
°dîr
, 
WARN_BAD_LINE
, 
fûíame
, 
n
);

228 
	`SåùLódögAndTøûögS∑˚s
(
«me
);

230 
vÆue
 = 
	`°πok
(
NULL
, "\n\r");

231 i‡(!
vÆue
 || !*value) {

232 
	`Ârötf
(
°dîr
, 
WARN_BAD_LINE
, 
fûíame
, 
n
);

236 (*
vÆue
 == ' ' || *value == '\t') && *value != 0)

237 
vÆue
++;

239 
	`•rötf
(
buf„r
, "%s=%s", 
«me
, 
vÆue
);

240 
	`WrôeSëtög
(
buf„r
);

243 
	`f˛o£
(
Â
);

244 
	}
}

252 
	$WrôeSëtög
(c⁄° *
£âög
) {

253 
rc
 = 0;

254 c⁄° *
«me
 = 
£âög
;

255 c⁄° *
vÆue
;

256 c⁄° *
equÆs
;

257 *
tm≤ame
;

258 
FILE
 *
Â
;

259 *
ouäame
;

261 i‡(!
«me
) {

265 
equÆs
 = 
	`ödex
(
£âög
, '=');

267 i‡(!
equÆs
) {

268 
	`Ârötf
(
°dîr
, 
ERR_NO_EQUALS
, 
£âög
);

272 
vÆue
 = 
equÆs
 + 1;

274 i‡(!*
«me
 || !*
vÆue
 ||Çamê=
equÆs
) {

275 
	`Ârötf
(
°dîr
, 
ERR_MALFORMED_SETTING
, 
£âög
);

280 
tm≤ame
 = 
	`mÆloc
(
equÆs
-
«me
+1+
	`°æí
(
PROC_PATH
));

281 
	`°r˝y
(
tm≤ame
, 
PROC_PATH
);

282 
	`°∫ˇt
(
tm≤ame
, 
«me
, ()(
equÆs
-name));

283 
tm≤ame
[
equÆs
-
«me
+
	`°æí
(
PROC_PATH
)] = 0;

284 
	`¶ashdŸ
(
tm≤ame
+
	`°æí
(
PROC_PATH
),'.','/');

287 
ouäame
 = 
	`mÆloc
(
equÆs
-
«me
+1);

288 
	`°∫˝y
(
ouäame
, 
«me
, ()(
equÆs
-name));

289 
ouäame
[
equÆs
-
«me
] = 0;

290 
	`¶ashdŸ
(
ouäame
,'/','.');

292 
Â
 = 
	`f›í
(
tm≤ame
, "w");

294 i‡(!
Â
) {

295 
î∫o
) {

296 
ENOENT
:

297 
	`Ârötf
(
°dîr
, 
ERR_INVALID_KEY
, 
ouäame
);

299 
EACCES
:

300 
	`Ârötf
(
°dîr
, 
ERR_PERMISSION_DENIED
, 
ouäame
);

303 
	`Ârötf
(
°dîr
, 
ERR_UNKNOWN_WRITING
, 
î∫o
, 
ouäame
);

306 
rc
 = -1;

308 
	`Ârötf
(
Â
, "%s\n", 
vÆue
);

309 
	`f˛o£
(
Â
);

311 i‡(
PrötName
) {

312 
	`Ârötf
(
°dout
, "%†%s\n", 
ouäame
, 
vÆue
);

314 i‡(
PrötNewlöe
)

315 
	`Ârötf
(
°dout
, "%s\n", 
vÆue
);

317 
	`Ârötf
(
°dout
, "%s", 
vÆue
);

321 
	`‰ì
(
tm≤ame
);

322 
	`‰ì
(
ouäame
);

323  
rc
;

324 
	}
}

332 
	$RódSëtög
(c⁄° *
£âög
) {

333 
rc
 = 0;

334 *
tm≤ame
, *
ouäame
;

335 
öbuf
[1025];

336 c⁄° *
«me
 = 
£âög
;

337 
FILE
 *
Â
;

339 i‡(!
£âög
 || !*setting) {

340 
	`Ârötf
(
°dîr
, 
ERR_INVALID_KEY
, 
£âög
);

344 
tm≤ame
 = 
	`mÆloc
(
	`°æí
(
«me
)+°æí(
PROC_PATH
)+1);

345 
	`°r˝y
(
tm≤ame
, 
PROC_PATH
);

346 
	`°rˇt
(
tm≤ame
, 
«me
);

347 
	`¶ashdŸ
(
tm≤ame
+
	`°æí
(
PROC_PATH
),'.','/');

350 
ouäame
 = 
	`°rdup
(
«me
);

351 
	`¶ashdŸ
(
ouäame
,'/','.');

353 
Â
 = 
	`f›í
(
tm≤ame
, "r");

355 i‡(!
Â
) {

356 
î∫o
) {

357 
ENOENT
:

358 
	`Ârötf
(
°dîr
, 
ERR_INVALID_KEY
, 
ouäame
);

360 
EACCES
:

361 
	`Ârötf
(
°dîr
, 
ERR_PERMISSION_DENIED
, 
ouäame
);

364 
	`Ârötf
(
°dîr
, 
ERR_UNKNOWN_READING
, 
î∫o
, 
ouäame
);

367 
rc
 = -1;

369 
	`fgës
(
öbuf
, 1024, 
Â
)) {

371 i‡(
PrötName
) {

372 
	`Ârötf
(
°dout
, "%†%s", 
ouäame
, 
öbuf
);

374 i‡(!
PrötNewlöe
) {

375 *
∆±r
 = 
	`°rchr
(
öbuf
,'\n');

376 if(
∆±r
) *nlptr='\0';

378 
	`Ârötf
(
°dout
, "%s", 
öbuf
);

381 
	`f˛o£
(
Â
);

384 
	`‰ì
(
tm≤ame
);

385 
	`‰ì
(
ouäame
);

386  
rc
;

387 
	}
}

395 
	$Di•œyAŒ
(c⁄° *
∑th
, 
boﬁ
 
ShowTabÀUtû
) {

396 
rc
 = 0;

397 
rc2
;

398 
DIR
 *
dp
;

399 
dúít
 *
de
;

400 *
tmpdú
;

401 
°©
 
ts
;

403 
dp
 = 
	`›ídú
(
∑th
);

405 i‡(!
dp
) {

406 
	`Ârötf
(
°dîr
, 
ERR_OPENING_DIR
, 
∑th
);

407 
rc
 = -1;

409 
	`ªaddú
(
dp
);Ñeaddir(dp);

410 –
de
 = 
	`ªaddú
(
dp
) )) {

411 
tmpdú
 = (*)
	`mÆloc
(
	`°æí
(
∑th
)+°æí(
de
->
d_«me
)+2);

412 
	`•rötf
(
tmpdú
, "%s%s", 
∑th
, 
de
->
d_«me
);

413 
rc2
 = 
	`°©
(
tmpdú
, &
ts
);

414 i‡(
rc2
 != 0) {

415 
	`≥º‹
(
tmpdú
);

417 i‡(
	`S_ISDIR
(
ts
.
°_mode
)) {

418 
	`°rˇt
(
tmpdú
, "/");

419 
	`Di•œyAŒ
(
tmpdú
, 
ShowTabÀUtû
);

421 
rc
 |
	`RódSëtög
(
tmpdú
+
	`°æí
(
PROC_PATH
));

424 
	`‰ì
(
tmpdú
);

426 
	`˛o£dú
(
dp
);

429  
rc
;

430 
	}
}

	@tload.c

12 
	~"¥oc/vîsi⁄.h
"

13 
	~"¥oc/sysöfo.h
"

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<£tjmp.h
>

17 
	~<sig«l.h
>

18 
	~<°rög.h
>

19 
	~<uni°d.h
>

20 
	~<ãrmios.h
>

21 
	~<f˙é.h
>

22 
	~<sys/io˘l.h
>

24 *
	gs¸ìn
;

26 
	gƒows
 = 25;

27 
	gncﬁs
 = 80;

28 
	gs¸_size
;

29 
	gfd
=1;

30 
	gdly
=5;

31 
jmp_buf
 
	gjb
;

33 
›töd
;

34 *
›èrg
;

36 
	$Ærm
(
signo
)

38 ()
signo
;

39 
	`sig«l
(
SIGALRM
, 
Ærm
);

40 
	`Æ¨m
(
dly
);

41 
	}
}

43 
	$£tsize
(
i
)

45 
wösize
 
wö
;

47 
	`sig«l
(
SIGWINCH
, 
£tsize
);

48 i‡(
	`io˘l
(
fd
, 
TIOCGWINSZ
, &
wö
) != -1) {

49 i‡(
wö
.
ws_cﬁ
 > 0)

50 
ncﬁs
 = 
wö
.
ws_cﬁ
;

51 i‡(
wö
.
ws_row
 > 0)

52 
ƒows
 = 
wö
.
ws_row
;

54 
s¸_size
 = 
ƒows
 * 
ncﬁs
;

55 i‡(
s¸ìn
 =
NULL
)

56 
s¸ìn
 = (*Ë
	`mÆloc
(
s¸_size
);

58 
s¸ìn
 = (*Ë
	`ªÆloc
(s¸ìn, 
s¸_size
);

60 i‡(
s¸ìn
 =
NULL
) {

61 
	`≥º‹
("");

62 
	`exô
(1);

64 
	`mem£t
(
s¸ìn
, ' ', 
s¸_size
-1);

65 *(
s¸ìn
 + 
s¸_size
 - 2) = '\0';

66 i‡(
i
)

67 
	`l⁄gjmp
(
jb
, 0);

68 
	}
}

70 
	$maö
(
¨gc
, **
¨gv
)

72 
löes
, 
row
, 
cﬁ
=0;

73 
i
, 
›t
;

74 
av
[3];

75 
max_sˇÀ
, 
sˇÀ_Á˘
;

76 *
sˇÀ_¨g
 = 
NULL
;

78 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, "s:d:V")) != -1)

79 
›t
) {

80 's': 
sˇÀ_¨g
 = 
›èrg
; ;

81 'd': 
dly
 = 
	`©oi
(
›èrg
); ;

82 'V': 
	`di•œy_vîsi⁄
(); 
	`exô
(0); ;

84 
	`¥ötf
("usage:Åload [-V] [-d delay] [-s scale] [tty]\n");

85 
	`exô
(1);

88 i‡(
¨gc
 > 
›töd
) {

89 i‡((
fd
 = 
	`›í
(
¨gv
[
›töd
], 1)) == -1) {

90 
	`≥º‹
(
¨gv
[
›töd
]);

91 
	`exô
(1);

95 
	`£tsize
(0);

97 i‡(
sˇÀ_¨g
)

98 
max_sˇÀ
 = 
	`©of
(
sˇÀ_¨g
);

100 
max_sˇÀ
 = 
ƒows
;

102 
sˇÀ_Á˘
 = 
max_sˇÀ
;

104 
	`£tjmp
(
jb
);

105 
cﬁ
 = 0;

106 
	`Ærm
(0);

110 i‡(
sˇÀ_Á˘
 < 
max_sˇÀ
)

111 
sˇÀ_Á˘
 *= 2.0;

113 
	`lﬂdavg
(&
av
[0], &av[1], &av[2]);

115 
ª≥©
:

116 
löes
 = 
av
[0] * 
sˇÀ_Á˘
;

117 
row
 = 
ƒows
-1;

119 --
löes
 >= 0) {

120 *(
s¸ìn
 + 
row
 * 
ncﬁs
 + 
cﬁ
) = '*';

121 i‡(--
row
 < 0) {

122 
sˇÀ_Á˘
 /= 2.0;

123 
ª≥©
;

126 
row
 >= 0)

127 *(
s¸ìn
 + 
row
-- * 
ncﬁs
 + 
cﬁ
) = ' ';

129 
i
 = 1; ; ++i) {

130 *
p
;

131 
row
 = 
ƒows
 - (
i
 * 
sˇÀ_Á˘
);

132 i‡(
row
 < 0)

134 i‡(*(
p
 = 
s¸ìn
 + 
row
 * 
ncﬁs
 + 
cﬁ
) == ' ')

135 *
p
 = '-';

137 *
p
 = '=';

140 i‡(++
cﬁ
 =
ncﬁs
) {

141 --
cﬁ
;

142 
	`memmove
(
s¸ìn
, s¸ì¿+ 1, 
s¸_size
-1);

144 
row
 = 
ƒows
-2;Ñow >= 0; --row)

145 *(
s¸ìn
 + 
row
 * 
ncﬁs
 + 
cﬁ
) = ' ';

147 
i
 = 
	`•rötf
(
s¸ìn
, " %.2f, %.2f, %.2f",

148 
av
[0],áv[1],áv[2]);

149 i‡(
i
>0)

150 
s¸ìn
[
i
] = ' ';

152 
	`wrôe
(
fd
, "\033[H", 3);

153 
	`wrôe
(
fd
, 
s¸ìn
, 
s¸_size
 - 1);

154 
	`∑u£
();

156 
	}
}

	@top.c

20 
	~<sys/io˘l.h
>

21 
	~<sys/ªsour˚.h
>

22 
	~<sys/time.h
>

23 
	~<˘y≥.h
>

24 
	~<cur£s.h
>

25 
	~<î∫o.h
>

26 #i‚de‡
YIELDCPU_OFF


27 
	~<sched.h
>

29 
	~<sig«l.h
>

30 
	~<°d¨g.h
>

31 
	~<°dio.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<ãrm.h
>

35 
	~<ãrmios.h
>

36 
	~<time.h
>

37 
	~<uni°d.h
>

38 
	~<vÆues.h
>

46 
	~"¥oc/dev«me.h
"

48 
	~"¥oc/¥o˝s.h
"

50 
	~"¥oc/ªad¥oc.h
"

52 
	~"¥oc/sig.h
"

53 #ifde‡
USE_LIB_STA3


55 
	~"¥oc/°©us.h
"

58 
	~"¥oc/sysöfo.h
"

60 
	~"¥oc/vîsi⁄.h
"

62 
	~"¥oc/wh©time.h
"

64 
	~"t›.h
"

69 
ãrmios
 
	gSavedây
,

70 
	gRawây
;

71 
	gTtych™ged
 = 0;

74 *
	gMy«me
;

77 
	gRCfûe
 [
OURPATHSZ
];

79 
	gPage_size
;

82 
	gCpu_tŸ
,

83 *
	gCpu_m≠
;

85 c⁄° *
	gSèãs_fmts
 = 
STATES_löe2x4
;

88 
pid_t
 
	gM⁄pids
 [
MONPIDMAX
] = { 0 };

89 
	gM⁄pidsidx
 = 0;

92 
	gMsg_dñayed
 [
SMLBUFSIZ
];

93 
	gMsg_awaôög
 = 0;

102 
	gS¸ìn_cﬁs
, 
	gS¸ìn_rows
, 
	gMax_löes
;

107 
	gMsg_row
;

110 
	gMode_Æts¸
;

112 
	gMode_úixps
 = 1;

113 
	gDñay_time
 = 
DEF_DELAY
;

116 
	gNo_ksyms
 = -1,

117 
	gPSDB›í
 = 0,

118 
	gB©ch
 = 0,

119 
	gLo›s
 = -1,

120 
	gSecuª_mode
 = 0;

124 
	gC≠_bﬁd
 [
CAPBUFSIZ
] = "",

125 
	gC≠_˛r_eﬁ
 [
CAPBUFSIZ
] = "",

126 
	gC≠_˛r_eos
 [
CAPBUFSIZ
] = "",

127 
	gC≠_˛r_s¸
 [
CAPBUFSIZ
] = "",

128 
	gC≠_curs_n‹m
 [
CAPBUFSIZ
] = "",

129 
	gC≠_curs_huge
 [
CAPBUFSIZ
] = "",

130 
	gC≠_home
 [
CAPBUFSIZ
] = "",

131 
	gC≠_n‹m
 [
CAPBUFSIZ
] = "",

132 
	gC≠_ªvî£
 [
CAPBUFSIZ
] = "",

133 
	gC≠s_off
 [
CAPBUFSIZ
] = "";

134 
	gC≠_ˇn_gŸo
 = 0;

143 
WIN_t
 *
	gWö°k
 [
GROUPSMAX
],

144 *
	gCurwö
;

148 
	gFøme_maxèsk
;

150 
	gFøme_tsˇÀ
;

151 
	gFøme_§tÊg
,

152 
	gFøme_˘imes
,

153 
	gFøme_cmdlö
;

164 
	$_SC_NUMx
(
P_PID
, 
pid
)

165 
	$_SC_NUMx
(
P_PPD
, 
µid
)

166 
	$_SC_NUMx
(
P_PGD
, 
pgΩ
)

167 
	$_SC_NUMx
(
P_UID
, 
euid
)

168 
	$_SC_STRx
(
P_USR
, 
eu£r
)

169 
	$_SC_STRx
(
P_GRP
, 
egroup
)

170 
	$_SC_NUMx
(
P_TTY
, 
ây
)

171 
	$_SC_NUMx
(
P_PRI
, 
¥i‹ôy
)

172 
	$_SC_NUMx
(
P_NCE
, 
ni˚
)

173 
	$_SC_NUMx
(
P_CPN
, 
¥o˚ss‹
)

174 
	$_SC_NUM1
(
P_CPU
, 
p˝u
)

176 
	$s‹t_P_TME
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
)

178 i‡(
Føme_˘imes
) {

179 i‡–((*
P
)->
cutime
 + (*P)->
c°ime
 + (*P)->
utime
 + (*P)->
°ime
)

180 < ((*
Q
)->
cutime
 + (*Q)->
c°ime
 + (*Q)->
utime
 + (*Q)->
°ime
) )

181  
SORT_…
;

182 i‡–((*
P
)->
cutime
 + (*P)->
c°ime
 + (*P)->
utime
 + (*P)->
°ime
)

183 > ((*
Q
)->
cutime
 + (*Q)->
c°ime
 + (*Q)->
utime
 + (*Q)->
°ime
) )

184  
SORT_gt
;

186 i‡–((*
P
)->
utime
 + (*P)->
°ime
Ë< ((*
Q
)->utime + (*Q)->stime))

187  
SORT_…
;

188 i‡–((*
P
)->
utime
 + (*P)->
°ime
Ë> ((*
Q
)->utime + (*Q)->stime))

189  
SORT_gt
;

191  
SORT_eq
;

192 
	}
}

194 
	$_SC_NUM1
(
P_VRT
, 
size
)

195 
	$_SC_NUM2
(
P_SWP
, 
size
, 
ªsidít
)

196 
	$_SC_NUM1
(
P_RES
, 
ªsidít
)

197 
	$_SC_NUM1
(
P_COD
, 
ås
)

198 
	$_SC_NUM1
(
P_DAT
, 
drs
)

199 
	$_SC_NUM1
(
P_SHR
, 
sh¨e
)

200 
	$_SC_NUM1
(
P_FLT
, 
maj_Êt
)

201 
	$_SC_NUM1
(
P_DRT
, 
dt
)

202 
	$_SC_NUMx
(
P_STA
, 
°©e
)

204 
	$s‹t_P_CMD
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
)

208 i‡(
Føme_cmdlö
 && ((*
P
)->
cmdlöe
 || (*
Q
)->cmdline)) {

209 i‡(!(*
Q
)->
cmdlöe
Ë 
Føme_§tÊg
 * -1;

210 i‡(!(*
P
)->
cmdlöe
Ë 
Føme_§tÊg
;

211  
Føme_§tÊg
 *

212 
	`°∫cmp
((*
Q
)->
cmdlöe
[0], (*
P
)->cmdlöe[0], ()
Curwö
->
maxcmd 
);

215  
Føme_§tÊg
 * 
	`°rcmp
((*
Q
)->
cmd
, (*
P
)->cmd);

216 
	}
}

218 
	$_SC_NUM1
(
P_WCH
, 
wch™
)

219 
	$_SC_NUM1
(
P_FLG
, 
Êags
)

227 
	$chö
 (
ech
, *
buf
, 
˙t
)

229 
rc
;

231 
	`fÊush
(
°dout
);

232 i‡(!
ech
)

233 
rc
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
˙t
);

235 
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
Savedây
);

236 
rc
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
˙t
);

237 
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
Rawây
);

240 
	`tcÊush
(
STDIN_FILENO
, 
TCIFLUSH
);

241  
rc
;

242 
	}
}

248 c⁄° *
	$fmtmk
 (c⁄° *
fmts
, ...)

250 
buf
[
BIGBUFSIZ
];

251 
va_li°
 
va
;

253 
	`va_°¨t
(
va
, 
fmts
);

254 
	`v¢¥ötf
(
buf
, (buf), 
fmts
, 
va
);

255 
	`va_íd
(
va
);

256  (c⁄° *)
buf
;

257 
	}
}

265 *
	$°rim
 (
•
, *
°r
)

267 c⁄° 
ws
[] = "\b\f\n\r\t\v";

268 *
p
;

270 i‡(
•
)

271 (
p
 = 
	`°Ωbrk
(
°r
, 
ws
))) *p = ' ';

273 i‡((
p
 = 
	`°Ωbrk
(
°r
, 
ws
))) *p = 0;

274  
°r
;

275 
	}
}

282 c⁄° *
	$tg2
 (
x
, 
y
)

284  
C≠_ˇn_gŸo
 ? 
	`tgŸo
(
curs‹_addªss
, 
x
, 
y
) : "";

285 
	}
}

293 
	$bye_bye
 (
ío
, c⁄° *
°r
)

295 i‡(!
B©ch
)

296 
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
Savedây
);

297 
	`puç
(
	`tg2
(0, 
S¸ìn_rows
));

298 
	`puç
(
C≠_curs_n‹m
);

299 
	`puç
("\n");

301 #ifde‡
ATEOJ_REPORT


302 
	`Ârötf
(
°dîr
,

320 #ifde‡
CASEUP_HEXES


329 , 
	`LINUX_VERSION_MAJOR
(
löux_vîsi⁄_code
)

330 , 
	`LINUX_VERSION_MINOR
(
löux_vîsi⁄_code
)

331 , 
	`LINUX_VERSION_PATCH
(
löux_vîsi⁄_code
)

332 , 
Page_size
, 
Cpu_tŸ


333 , 
¥o˝s_vîsi⁄
, ()
Hîtz
, (Hertz), (Hertz) * 8

334 , (
CPUS_t
), (
HIST_t
), 
Page_size
 / (HIST_t)

335 , 
CPU_FMTS_JUST1
, 
CPU_FMTS_MULTI


336 #ifde‡
PRETENDNOCAP


339 , 
	`ãrm«me
()

341 , 
	`ây«me
(
STDOUT_FILENO
), 
NCURSES_VERSION


342 , 
max_cﬁ‹s
, 
max_∑ús


343 , 
C≠_ˇn_gŸo
 ? "yes" : "No!"

344 , 
S¸ìn_cﬁs
, 
S¸ìn_rows


345 , 
Max_löes


346 , (
WIN_t
), 
GROUPSMAX


347 , 
Curwö
->
wö«me
, Curwö->
gΩ«me


348 , 
Curwö
->
wöÊags
, Curwö->
maxpÊgs


349 , 
Curwö
->
fõldscur


350 , 
Curwö
->
wölöes
, Curwö->
maxèsks
, Curwö->
maxcmd 


351 , 
Curwö
->
s‹tödx


355 i‡(
°r
) {

356 i‡(
ío
Ë
	`≥º‹
(
°r
);

358 
	`Âuts
(
°r
, 
°dîr
);

359 
ío
 = 1;

362 
	`exô
(
ío
);

363 
	}
}

370 
	$°›
 (
d⁄t_ˇª_sig
)

372 ()
d⁄t_ˇª_sig
;

373 
	`bye_bye
(0, 
NULL
);

374 
	}
}

379 
	$°d_îr
 (c⁄° *
°r
)

381 
buf
[
SMLBUFSIZ
];

383 
	`fÊush
(
°dout
);

387 
	`¢¥ötf
(
buf
, (buf), "\t%s: %s\n", 
My«me
, 
°r
);

388 i‡(!
Ttych™ged
) {

389 
	`Ârötf
(
°dîr
, 
buf
);

390 
	`exô
(1);

393 
	`bye_bye
(0, 
buf
);

394 
	}
}

401 
	$su•íd
 (
d⁄t_ˇª_sig
)

403 ()
d⁄t_ˇª_sig
;

405 
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
Savedây
);

406 
	`puç
(
	`tg2
(0, 
S¸ìn_rows
));

407 
	`puç
(
C≠_curs_n‹m
);

408 
	`fÊush
(
°dout
);

409 
	`øi£
(
SIGSTOP
);

411 i‡(!
B©ch
)

412 
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
Rawây
);

413 
	}
}

424 
	$ˇpsmk
 (
WIN_t
 *
q
)

428 
	#tIF
(
s
Ë†? s : ""

	)

429 
ˇpsd⁄e
 = 0;

432 i‡(
B©ch
) ;

435 i‡(!
ˇpsd⁄e
) {

436 
	`°r˝y
(
C≠_bﬁd
, 
	`tIF
(
íãr_bﬁd_mode
));

437 
	`°r˝y
(
C≠_˛r_eﬁ
, 
	`tIF
(
˛r_eﬁ
));

438 
	`°r˝y
(
C≠_˛r_eos
, 
	`tIF
(
˛r_eos
));

439 
	`°r˝y
(
C≠_˛r_s¸
, 
	`tIF
(
˛ór_s¸ìn
));

440 
	`°r˝y
(
C≠_curs_huge
, 
	`tIF
(
curs‹_visibÀ
));

441 
	`°r˝y
(
C≠_curs_n‹m
, 
	`tIF
(
curs‹_n‹mÆ
));

442 
	`°r˝y
(
C≠_home
, 
	`tIF
(
curs‹_home
));

443 
	`°r˝y
(
C≠_n‹m
, 
	`tIF
(
exô_©åibuã_mode
));

444 
	`°r˝y
(
C≠_ªvî£
, 
	`tIF
(
íãr_ªvî£_mode
));

445 
	`¢¥ötf
(
C≠s_off
, (C≠s_off), "%s%s", 
C≠_n‹m
, 
	`tIF
(
‹ig_∑ú
));

446 i‡(
	`tgŸo
(
curs‹_addªss
, 1, 1)Ë
C≠_ˇn_gŸo
 = 1;

447 
ˇpsd⁄e
 = 1;

452 i‡(
	`CHKw
(
q
, 
Show_COLORS
Ë&& 
max_cﬁ‹s
 > 0) {

453 
	`°r˝y
(
q
->
ˇp˛r_sum
, 
	`ç¨m
(
£t_a_f‹eground
, q->
summ˛r
));

454 
	`¢¥ötf
(
q
->
ˇp˛r_msg
, (q->capclr_msg), "%s%s"

455 , 
	`ç¨m
(
£t_a_f‹eground
, 
q
->
msgs˛r
), 
C≠_ªvî£
);

456 
	`¢¥ötf
(
q
->
ˇp˛r_pmt
, (q->capclr_pmt), "%s%s"

457 , 
	`ç¨m
(
£t_a_f‹eground
, 
q
->
msgs˛r
), 
C≠_bﬁd
);

458 
	`¢¥ötf
(
q
->
ˇp˛r_hdr
, (q->capclr_hdr), "%s%s"

459 , 
	`ç¨m
(
£t_a_f‹eground
, 
q
->
hód˛r
), 
C≠_ªvî£
);

460 
	`¢¥ötf
(
q
->
ˇp˛r_rown‹m
, (q->capclr_rownorm), "%s%s"

461 , 
C≠s_off
, 
	`ç¨m
(
£t_a_f‹eground
, 
q
->
èsk˛r
));

463 
q
->
ˇp˛r_sum
[0] = '\0';

464 
	`°r˝y
(
q
->
ˇp˛r_msg
, 
C≠_ªvî£
);

465 
	`°r˝y
(
q
->
ˇp˛r_pmt
, 
C≠_bﬁd
);

466 
	`°r˝y
(
q
->
ˇp˛r_hdr
, 
C≠_ªvî£
);

467 
	`°r˝y
(
q
->
ˇp˛r_rown‹m
, 
C≠_n‹m
);

470 
	`¢¥ötf
(
q
->
ˇp˛r_rowhigh
, (q->capclr_rowhigh), "%s%s"

471 , 
q
->
ˇp˛r_rown‹m
, 
	`CHKw
(q, 
Show_HIBOLD
Ë? 
C≠_bﬁd
 : 
C≠_ªvî£
);

472 
q
->
Àn_rown‹m
 = 
	`°æí
(q->
ˇp˛r_rown‹m
);

473 
q
->
Àn_rowhigh
 = 
	`°æí
(q->
ˇp˛r_rowhigh
);

475 #unde‡
tIF


476 
	}
}

485 
	$msg_ßve
 (c⁄° *
fmts
, ...)

487 
tmp
[
SMLBUFSIZ
];

488 
va_li°
 
va
;

490 
	`va_°¨t
(
va
, 
fmts
);

491 
	`v¢¥ötf
(
tmp
, —mp), 
fmts
, 
va
);

492 
	`va_íd
(
va
);

494 
	`¢¥ötf
(
Msg_dñayed
, (Msg_dñayed), "\a*** %† ***", 
	`°rim
(0, 
tmp
));

495 
Msg_awaôög
 = 1;

496 
	}
}

501 
	$show_msg
 (c⁄° *
°r
)

503 
	`PUTP
("%s%s %s %s%s"

504 , 
	`tg2
(0, 
Msg_row
)

505 , 
Curwö
->
ˇp˛r_msg


506 , 
°r


507 , 
C≠s_off


508 , 
C≠_˛r_eﬁ
);

509 
	`fÊush
(
°dout
);

510 
	`¶ìp
(
MSG_SLEEP
);

511 
Msg_awaôög
 = 0;

512 
	}
}

517 
	$show_pmt
 (c⁄° *
°r
)

519 
	`PUTP
("%s%s%s: %s%s"

520 , 
	`tg2
(0, 
Msg_row
)

521 , 
Curwö
->
ˇp˛r_pmt


522 , 
°r


523 , 
C≠_curs_huge


524 , 
C≠s_off
);

525 
	`fÊush
(
°dout
);

526 
	}
}

554 
	$show_•ecül
 (c⁄° *
glob
)

566 
tmp
[
BIGBUFSIZ
], *
ˇp
, *
lö_íd
, *
sub_beg
, *
sub_íd
;

567 
room
;

570 (
lö_íd
 = 
	`°rchr
(
glob
, '\n'))) {

573 
	`mem˝y
(
tmp
, 
glob
, ()(
lö_íd
 - glob));

575 
tmp
[
lö_íd
 - 
glob
] = '\0';

576 
room
 = 
S¸ìn_cﬁs
;

577 
sub_beg
 = 
sub_íd
 = 
tmp
;

579 *
sub_beg
) {

580 *
sub_íd
) {

582 *(
sub_íd
 + 1) = '\0';

585 
ˇp
 = 
Curwö
->
ˇ±ab
[()*
sub_íd
];

586 *
sub_íd
 = '\0';

587 
	`PUTP
("%s%.*s%s", 
ˇp
, 
room
, 
sub_beg
, 
C≠s_off
);

588 
room
 -(
sub_íd
 - 
sub_beg
);

589 
sub_beg
 = ++
sub_íd
;

592 ++
sub_íd
;

594 i‡(0 >
room
) ;

597 
	`puç
(
C≠_˛r_eﬁ
);

598 
	`puç
("\n");

599 
glob
 = ++
lö_íd
;

605 i‡(*
glob
Ë
	`PUTP
("%.*s", 
S¸ìn_cﬁs
, glob);

606 
	`fÊush
(
°dout
);

607 
	}
}

614 *
	$ask4°r
 (c⁄° *
¥om±
)

616 
buf
[
GETBUFSIZ
];

618 
	`show_pmt
(
¥om±
);

619 
	`mem£t
(
buf
, '\0', (buf));

620 
	`chö
(1, 
buf
, (buf) - 1);

621 
	`puç
(
C≠_curs_n‹m
);

622  
	`°rim
(0, 
buf
);

623 
	}
}

628 
	$gë_Êﬂt
 (c⁄° *
¥om±
)

630 *
löe
;

631 
f
;

633 i‡(!(*(
löe
 = 
	`ask4°r
(
¥om±
))))  -1;

635 i‡(
	`°rc•n
(
löe
, ",.1234567890")) {

636 
	`show_msg
("\aNot valid");

639 
	`ssˇnf
(
löe
, "%f", &
f
);

640  
f
;

641 
	}
}

646 
	$gë_öt
 (c⁄° *
¥om±
)

648 *
löe
;

649 
n
;

651 i‡(!(*(
löe
 = 
	`ask4°r
(
¥om±
))))  -1;

653 i‡(
	`°rc•n
(
löe
, "-1234567890")) {

654 
	`show_msg
("\aNot valid");

657 
	`ssˇnf
(
löe
, "%d", &
n
);

658  
n
;

659 
	}
}

670 c⁄° *
	$sˇÀ_num
 (
num
, c⁄° 
width
, c⁄° 
ty≥
)

673 
sˇÀ
[] = { 1024, 1024*1024, 1024*1024*1024, 0 };

675 #ifde‡
CASEUP_SCALE


676 
√xtup
[] = { 'K', 'M', 'G', 0 };

678 
√xtup
[] = { 'k', 'm', 'g', 0 };

680 
buf
[
TNYBUFSIZ
];

681 *
dp
;

682 *
up
;

685 i‡(
width
 >
	`¢¥ötf
(
buf
, (buf), "%u", 
num
))  buf;

688 
up
 = 
√xtup
 + 
ty≥
, 
dp
 = 
sˇÀ
; *dp; ++dp, ++up) {

690 i‡(
width
 >
	`¢¥ötf
(
buf
, (buf), "%.1f%c", 
num
 / *
dp
, *
up
))

691  
buf
;

693 i‡(
width
 >
	`¢¥ötf
(
buf
, (buf), "%d%c", ()(
num
 / *
dp
), *
up
))

694  
buf
;

698 
	}
}

704 c⁄° *
	$sˇÀ_tics
 (
TICS_t
 
tics
, c⁄° 
width
)

706 
	#T1
 "%u:%02u.%02u"

	)

707 
	#T2
 "%u:%02u"

	)

708 #ifde‡
CASEUP_SCALE


709 
	#HH
 "%uH"

	)

710 
	#DD
 "%uD"

	)

711 
	#WW
 "%uW"

	)

713 
	#HH
 "%uh"

	)

714 
	#DD
 "%ud"

	)

715 
	#WW
 "%uw"

	)

717 
buf
[
TNYBUFSIZ
];

718 
ss
;

719 
¡
;

720 
˘
;

722 
˘
 = ((
tics
 * 100Ë/ 
Hîtz
)%100 ;

723 
¡
 = 
tics
 / 
Hîtz
;

724 i‡(
width
 >
	`¢¥ötf
(
buf
, (buf), 
T1
, 
¡
/60,Çt%60, 
˘
))

725  
buf
;

726 
ss
 = 
¡
 % 60;

727 
¡
 /= 60;

728 i‡(
width
 >
	`¢¥ötf
(
buf
,  buf, 
T2
, 
¡
, 
ss
))

729  
buf
;

730 
¡
 /= 60;

731 i‡(
width
 >
	`¢¥ötf
(
buf
,  buf, 
HH
, 
¡
))

732  
buf
;

733 
¡
 /= 24;

734 i‡(
width
 >
	`¢¥ötf
(
buf
,  buf, 
DD
, 
¡
))

735  
buf
;

736 
¡
 /= 7;

737 i‡(
width
 >
	`¢¥ötf
(
buf
,  buf, 
WW
, 
¡
))

738  
buf
;

743 #unde‡
T1


744 #unde‡
T2


745 #unde‡
HH


746 #unde‡
DD


747 #unde‡
WW


748 
	}
}

755 
	$time_ñ≠£d
 ()

757 
timevÆ
 
ﬁdtimev
;

758 
timevÆ
 
timev
;

759 
timez⁄e
 
timez
;

760 
ë
;

762 
	`gëtimeofday
(&
timev
, &
timez
);

763 
ë
 = (
timev
.
tv_£c
 - 
ﬁdtimev
.tv_sec)

764 + ()(
timev
.
tv_u£c
 - 
ﬁdtimev
.tv_usec) / 1000000.0;

765 
ﬁdtimev
.
tv_£c
 = 
timev
.tv_sec;

766 
ﬁdtimev
.
tv_u£c
 = 
timev
.tv_usec;

768 
Føme_tsˇÀ
 = 100.0‡/ (()
Hîtz
 * ()
ë
 * (
Mode_úixps
 ? 1 : 
Cpu_tŸ
));

769 
	}
}

778 *
	$Æloc_c
 (
numb
)

780 * 
p
;

782 i‡(!
numb
) ++numb;

783 i‡(!(
p
 = 
	`ˇŒoc
(1, 
numb
)))

784 
	`°d_îr
("failed memoryállocate");

785  
p
;

786 
	}
}

789 *
	$Æloc_r
 (*
q
, 
numb
)

791 *
p
;

793 i‡(!
numb
) ++numb;

794 i‡(!(
p
 = 
	`ªÆloc
(
q
, 
numb
)))

795 
	`°d_îr
("failed memoryállocate");

796  
p
;

797 
	}
}

806 
CPUS_t
 *
	$ª‰esh˝us
 (
CPUS_t
 *
˝us
)

808 
FILE
 *
Â
 = 
NULL
;

809 
i
;

811 
buf
[
SMLBUFSIZ
];

815 i‡(!
Â
) {

816 i‡(!(
Â
 = 
	`f›í
("/proc/stat", "r")))

817 
	`°d_îr
(
	`fmtmk
("Faûed /¥oc/°© o≥n: %s", 
	`°ªº‹
(
î∫o
)));

821 
˝us
 = 
	`Æloc_c
((1 + 
Cpu_tŸ
Ë* (
CPUS_t
));

823 
	`ªwöd
(
Â
);

824 
	`fÊush
(
Â
);

827 i‡(!
	`fgës
(
buf
, (buf), 
Â
)Ë
	`°d_îr
("failed /proc/statÑead");

828 i‡(4 > 
	`ssˇnf
(
buf
, 
CPU_FMTS_JUST1


829 , &
˝us
[
Cpu_tŸ
].
u
, &˝us[Cpu_tŸ].
n
, &˝us[Cpu_tŸ].
s
, &˝us[Cpu_tŸ].
i
, &˝us[Cpu_tŸ].
w
))

830 
	`°d_îr
("failed /proc/statÑead");

832 i‡(1 =
Cpu_tŸ
Ë
	`mem˝y
(
˝us
, &˝us[1], (
CPUS_t
));

835 
i
 = 0; 1 < 
Cpu_tŸ
 && i < Cpu_tot; i++) {

836 #ifde‡
PRETEND4CPUS


837 
	`ªwöd
(
Â
);

839 i‡(!
	`fgës
(
buf
, (buf), 
Â
)Ë
	`°d_îr
("failed /proc/statÑead");

840 i‡(4 > 
	`ssˇnf
(
buf
, 
CPU_FMTS_MULTI


841 , &
˝us
[
i
].
u
, &˝us[i].
n
, &˝us[i].
s
, &˝us[i].i, &˝us[i].
w
))

842 
	`°d_îr
("failed /proc/statÑead");

845  
˝us
;

846 
	}
}

853 
¥oc_t
 **
	$ª‰esh¥ocs
 (
¥oc_t
 **
èbÀ
, 
Êags
)

855 
	#PTRsz
 (
¥oc_t
 *Ë

	)

856 
	#ENTsz
 (
¥oc_t
)

	)

857 
ßvmax
 = 0;

858 
¥oc_t
 *
±sk
 = (proc_t *)-1;

859 
curmax
 = 0;

860 
PROCTAB
* 
PT
;

862 i‡(
M⁄pidsidx
) {

863 
PT
 = 
	`›í¥oc
(
Êags
 | 
PROC_PID
, 
M⁄pids
);

865 
PT
->
¥ocfs
 = 
NULL
;

867 
PT
 = 
	`›í¥oc
(
Êags
);

870 
curmax
 < 
ßvmax
) {

871 i‡(
èbÀ
[
curmax
]->
cmdlöe
) {

872 
	`‰ì
(*
èbÀ
[
curmax
]->
cmdlöe
);

873 
èbÀ
[
curmax
]->
cmdlöe
 = 
NULL
;

875 i‡(!(
±sk
 = 
	`ªad¥oc
(
PT
, 
èbÀ
[
curmax
]))) ;

876 ++
curmax
;

880 
±sk
) {

882 
èbÀ
 = 
	`Æloc_r
—abÀ, (
curmax
 + 1Ë* 
PTRsz
);

884 i‡((
±sk
 = 
	`ªad¥oc
(
PT
, 
NULL
)))

885 
èbÀ
[
curmax
++] = 
±sk
;

887 
	`˛o£¥oc
(
PT
);

890 i‡(
curmax
 >
ßvmax
) {

891 
èbÀ
 = 
	`Æloc_r
—abÀ, (
curmax
 + 1Ë* 
PTRsz
);

893 
èbÀ
[
curmax
] = 
	`Æloc_c
(
ENTsz
);

894 
ßvmax
 = 
curmax
 + 1;

897 
èbÀ
[
curmax
]->
pid
 = -1;

898  
èbÀ
;

900 #unde‡
PTRsz


901 #unde‡
ENTsz


902 
	}
}

910 
	$bef‹e
 (*
me
)

912 
i
;

915 
My«me
 = 
	`°ºchr
(
me
, '/');

916 i‡(
My«me
Ë++My«me; My«mê
me
;

919 #ifde‡
PRETEND4CPUS


920 
Cpu_tŸ
 = 4;

922 
Cpu_tŸ
 = 
smp_num_˝us
;

924 
Cpu_m≠
 = 
	`Æloc_r
(
NULL
, (Ë* 
Cpu_tŸ
);

925 
i
 = 0; i < 
Cpu_tŸ
; i++)

926 
Cpu_m≠
[
i
] = i;

927 if(
löux_vîsi⁄_code
 > 
	`LINUX_VERSION
(2, 5, 41))

928 
Sèãs_fmts
 = 
STATES_löe2x5
;

931 
Page_size
 = 
	`gë∑gesize
();

932 
	}
}

949 
	$c⁄figs_ªad
 ()

951 c⁄° 
îr_rc
[] = "badÑcfile, you should delete '%s'";

952 
fbuf
[
SMLBUFSIZ
];

953 
FILE
 *
Â
;

954 
dñay
 = 
DEF_DELAY
;

955 
id
;

956 
i
;

958 
	`¢¥ötf
(
RCfûe
, (RCfûe), ".%§c", 
My«me
);

959 i‡(
	`gëív
("HOME"))

960 
	`¢¥ötf
(
RCfûe
, (RCfûe), "%s/.%§c", 
	`gëív
("HOME"), 
My«me
);

962 
Â
 = 
	`f›í
(
SYS_RCFILE
, "r");

963 i‡(
Â
) {

964 
fbuf
[0] = '\0';

965 
	`fgës
(
fbuf
, (fbuf), 
Â
);

966 i‡(
	`°rchr
(
fbuf
, 's')Ë
Secuª_mode
 = 1;

968 
fbuf
[0] = '\0';

969 
	`fgës
(
fbuf
, (fbuf), 
Â
);

970 
	`f˛o£
(
Â
);

971 
	`ssˇnf
(
fbuf
, "%f", &
dñay
);

973 
Â
 = 
	`f›í
(
RCfûe
, "r");

974 i‡(
Â
) {

975 
	`fgës
(
fbuf
, (fbuf), 
Â
);

976 i‡(5 !(
	`fsˇnf
(
Â
, "Id:%c, "

978 , &
id
, &
Mode_Æts¸
, &
Mode_úixps
, &
dñay
, &
i
)Ë|| 
RCF_FILEID
 != id)

979 
	`°d_îr
(
	`fmtmk
(
îr_rc
, 
RCfûe
));

982 
Curwö
 = 
Wö°k
[
i
];

983 
i
 = 0; i < 
GROUPSMAX
; i++) {

986 
	`fsˇnf
(
Â
, "%s\tfieldscur=%s\n"

987 , 
Wö°k
[
i
]->
wö«me
, Wö°k[i]->
fõldscur
);

988 i‡(
WINNAMSIZ
 <
	`°æí
(
Wö°k
[
i
]->
wö«me
)

989 || 
	`°æí
(
DEF_FIELDS
Ë!°æí(
Wö°k
[
i
]->
fõldscur
))

990 
	`°d_îr
(
	`fmtmk
(
îr_rc
, 
RCfûe
));

991 
	`fsˇnf
(
Â
, "\twinflags=%d, sortindx=%u, maxtasks=%d \n"

992 , &
Wö°k
[
i
]->
wöÊags


993 , &
Wö°k
[
i
]->
s‹tödx


994 , &
Wö°k
[
i
]->
maxèsks
);

995 
	`fsˇnf
(
Â
, "\tsummclr=%d, msgsclr=%d, headclr=%d,Åaskclr=%d \n"

996 , &
Wö°k
[
i
]->
summ˛r


997 , &
Wö°k
[
i
]->
msgs˛r


998 , &
Wö°k
[
i
]->
hód˛r


999 , &
Wö°k
[
i
]->
èsk˛r
);

1001 
	`f˛o£
(
Â
);

1004 
Secuª_mode
 = 
	`gëuid
() ? Secure_mode : 0;

1005 i‡(!
Secuª_mode
 || !
	`gëuid
()Ë
Dñay_time
 = 
dñay
;

1006 
	}
}

1015 
	$∑r£_¨gs
 (**
¨gs
)

1026 c⁄° 
ußge
[] =

1028 
tmp_dñay
 = 
MAXFLOAT
;

1029 *
p
;

1031 *
¨gs
) {

1032 *
˝
 = *(
¨gs
++);

1034 *
˝
) {

1035 *
˝
) {

1040 
B©ch
 = 1;

1043 
	`TOGw
(
Curwö
, 
Show_CMDLIN
);

1046 i‡(
˝
[1]) ++cp;

1047 i‡(*
¨gs
Ë
˝
 = *args++;

1048 
	`°d_îr
("-dÑequiresárgument");

1050 i‡(1 !
	`ssˇnf
(
˝
, "%f", &
tmp_dñay
))

1051 
	`°d_îr
(
	`fmtmk
("bad dñay '%s'", 
˝
));

1055 
	`°d_îr
(
	`fmtmk
("%s\nusage:\t%s%s"

1056 , 
¥o˝s_vîsi⁄
, 
My«me
, 
ußge
));

1058 
	`TOGw
(
Curwö
, 
Show_IDLEPS
);

1059 
Curwö
->
maxèsks
 = 0;

1062 i‡(
˝
[1]) cp++;

1063 i‡(*
¨gs
Ë
˝
 = *args++;

1064 
	`°d_îr
("-nÑequiresárgument");

1065 i‡(1 !
	`ssˇnf
(
˝
, "%d", &
Lo›s
) || 1 > Loops)

1066 
	`°d_îr
(
	`fmtmk
("bad iãøti⁄†¨g '%s'", 
˝
));

1070 i‡(
˝
[1]) cp++;

1071 i‡(*
¨gs
Ë
˝
 = *args++;

1072 
	`°d_îr
("-párgument missing");

1073 i‡(
M⁄pidsidx
 >
MONPIDMAX
)

1074 
	`°d_îr
(
	`fmtmk
("pidÜimô (%dËex˚eded", 
MONPIDMAX
));

1075 i‡(1 !
	`ssˇnf
(
˝
, "%d", &
M⁄pids
[
M⁄pidsidx
])

1076 || 0 > 
M⁄pids
[
M⁄pidsidx
])

1077 
	`°d_îr
(
	`fmtmk
("badÖid '%s'", 
˝
));

1078 i‡(!
M⁄pids
[
M⁄pidsidx
])

1079 
M⁄pids
[
M⁄pidsidx
] = 
	`gëpid
();

1080 
M⁄pidsidx
++;

1081 i‡(!(
p
 = 
	`°rchr
(
˝
, ',')))

1083 
˝
 = 
p
;

1084 } *
˝
);

1087 
Secuª_mode
 = 1;

1090 
	`TOGw
(
Curwö
, 
Show_CTIMES
);

1093 
	`°d_îr
(
	`fmtmk
("unknownárgument '%c'\nusage:\t%s%s"

1094 , *
˝
, 
My«me
, 
ußge
));

1099 i‡(*
˝
Ë˝ +
	`°r•n
(&cp[1], "- ,.1234567890") + 1;

1104 i‡(
MAXFLOAT
 !
tmp_dñay
) {

1105 i‡(
Secuª_mode
 || 0 > 
tmp_dñay
)

1106 
	`msg_ßve
("DelayÅime Not changed");

1108 
Dñay_time
 = 
tmp_dñay
;

1110 
	}
}

1115 
	$whack_ãrmöÆ
 ()

1117 
ãrmios
 
√wây
;

1120 #ifde‡
PRETENDNOCAP


1121 
	`£tu±îm
("dumb", 
STDOUT_FILENO
, 
NULL
);

1123 
	`£tu±îm
(
NULL
, 
STDOUT_FILENO
, NULL);

1126 i‡(!
B©ch
) {

1127 i‡(-1 =
	`tcgë©å
(
STDIN_FILENO
, &
Savedây
))

1128 
	`°d_îr
("failedÅty get");

1129 
√wây
 = 
Savedây
;

1130 
√wây
.
c_lÊag
 &~
ICANON
;

1131 
√wây
.
c_lÊag
 &~
ECHO
;

1132 
√wây
.
c_cc
[
VMIN
] = 1;

1133 
√wây
.
c_cc
[
VTIME
] = 0;

1135 
Ttych™ged
 = 1;

1136 i‡(-1 =
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
√wây
)) {

1137 
	`puç
(
C≠_˛r_s¸
);

1138 
	`°d_îr
(
	`fmtmk
("ÁûedÅty së: %s", 
	`°ªº‹
(
î∫o
)));

1140 
	`tcgë©å
(
STDIN_FILENO
, &
Rawây
);

1141 
	`puç
(
C≠_˛r_s¸
);

1142 
	`fÊush
(
°dout
);

1144 
	}
}

1151 
FTAB_t
 
	gFõld°ab
[] = {

1154 { " PID ", "%5d ", -1, -1, 
_SF
(
P_PID
), "Process Id" },

1155 { " PPID ", "%5d ", -1, -1, 
_SF
(
P_PPD
), "Parent Process Pid" },

1156 { " PGID ", "%5d ", -1, -1, 
_SF
(
P_PGD
), "Process Group Id" },

1157 { " UID ", "%4d ", -1, -1, 
_SF
(
P_UID
), "User Id" },

1158 { "USER ", "%-8.8†", -1, -1, 
_SF
(
P_USR
), "User Name" },

1159 { "GROUP ", "%-8.8†", -1, -1, 
_SF
(
P_GRP
), "Group Name" },

1160 { "TTY ", "%-8.8†", 8, -1, 
_SF
(
P_TTY
), "Controlling Tty" },

1161 { " PR ", "%3ld ", -1, -1, 
_SF
(
P_PRI
), "Priority" },

1162 { " NI ", "%3ld ", -1, -1, 
_SF
(
P_NCE
), "Nice value" },

1163 { "#C ", "%2d ", -1, -1, 
_SF
(
P_CPN
), "Last used cpu (SMP)" },

1164 { "%CPU ", "%#4.1‡", -1, -1, 
_SF
(
P_CPU
), "CPU usage" },

1165 { " TIME ", "%6.6†", 6, -1, 
_SF
(
P_TME
), "CPU Time" },

1166 { " TIME+ ", "%9.9†", 9, -1, 
_SF
(
P_TME
), "CPU Time, hundredths" },

1167 { "%MEM ", "%#4.1‡", -1, -1, 
_SF
(
P_RES
), "Memory usage (RES)" },

1168 { " VIRT ", "%5.5†", 5, 
SK_Kb
, 
_SF
(
P_VRT
), "Virtual Image (kb)" },

1169 { "SWAP ", "%4.4†", 4, 
SK_Kb
, 
_SF
(
P_SWP
), "Swapped size (kb)" },

1170 { " RES ", "%4.4†", 4, 
SK_Kb
, 
_SF
(
P_RES
), "Resident size (kb)" },

1171 { "CODE ", "%4.4†", 4, 
SK_Kb
, 
_SF
(
P_COD
), "Code size (kb)" },

1172 { "DATA ", "%4.4†", 4, 
SK_Kb
, 
_SF
(
P_DAT
), "Data+Stack size (kb)" },

1173 { " SHR ", "%4.4†", 4, 
SK_Kb
, 
_SF
(
P_SHR
), "Shared Mem size (kb)" },

1174 { "nFLT ", "%4.4†", 4, 
SK_no
, 
_SF
(
P_FLT
), "Page Fault count" },

1175 { "nDRT ", "%4.4†", 4, 
SK_no
, 
_SF
(
P_DRT
), "Dirty Pages count" },

1176 #ifde‡
USE_LIB_STA3


1177 { "STA ", "%3.3†", -1, -1, 
_SF
(
P_STA
), "Process Status" },

1179 { "S ", "%¯", -1, -1, 
_SF
(
P_STA
), "Process Status" },

1183 { "Comm™d ", "%-*.*†", -1, -1, 
_SF
(
P_CMD
), "CommandÜine/name" },

1184 { "WCHAN ", "%-9.9†", -1, -1, 
_SF
(
P_WCH
), "Sleeping in Function" },

1186 #ifde‡
CASEUP_HEXES


1187 { "Fœg† ", "%08lX ", -1, -1, 
_SF
(
P_FLG
), "Task Flags <sched.h>" }

1189 { "Fœg† ", "%08lx ", -1, -1, 
_SF
(
P_FLG
), "Task Flags <sched.h>" }

1201 
	$di•œy_fõlds
 (c⁄° *
fõlds
, c⁄° *
xåa
)

1203 
	#yRSVD
 3

	)

1204 c⁄° *
p
;

1205 
i
, 
cmax
 = 
S¸ìn_cﬁs
 / 2, 
rmax
 = 
S¸ìn_rows
 - 
yRSVD
;

1209 
	`puç
(
C≠_bﬁd
);

1210 
i
 = 0; i < 
	`MAXTBL
(
Fõld°ab
); ++i) {

1211 
b
 = (
NULL
 !
	`°rchr
(
fõlds
, 
i
 + 'A'));

1213 
p
 = 
Fõld°ab
[
i
].
hód
; ' ' == *p; ++p)

1215 
	`PUTP
("%s%s%c %c: %-10s = %s"

1216 , 
	`tg2
((
i
 / 
rmax
Ë* 
cmax
, (ò%ÑmaxË+ 
yRSVD
)

1217 , 
b
 ? 
C≠_bﬁd
 : 
C≠_n‹m


1218 , 
b
 ? '*' : ' '

1219 , 
b
 ? 
i
 + 'A' : i + 'a'

1220 , 
p


1221 , 
Fõld°ab
[
i
].
desc
);

1223 i‡(
xåa
) {

1224 
	`puç
(
Curwö
->
ˇp˛r_rown‹m
);

1225 (
p
 = 
	`°rchr
(
xåa
, '\n'))) {

1226 ++
i
;

1227 
	`PUTP
("%s%.*s"

1228 , 
	`tg2
((
i
 / 
rmax
Ë* 
cmax
, (ò%ÑmaxË+ 
yRSVD
)

1229 , ()(
p
 - 
xåa
)

1230 , 
xåa
);

1231 
xåa
 = ++
p
;

1234 
	`puç
(
C≠s_off
);

1236 #unde‡
yRSVD


1237 
	}
}

1242 
	$fõlds_ª‹dî
 ()

1244 c⁄° 
¥om±
[] =

1246 
c
, *
p
;

1247 
i
;

1249 
	`puç
(
C≠_˛r_s¸
);

1250 
	`puç
(
C≠_curs_huge
);

1251 
	`di•œy_fõlds
(
Curwö
->
fõldscur
, 
FIELDS_xåa
);

1253 
	`show_•ecül
(
	`fmtmk
(
FIELDS_cuºít


1254 , 
C≠_home
, 
Curwö
->
fõldscur
, Curwö->
gΩ«me
, 
¥om±
));

1255 
	`chö
(0, &
c
, 1);

1256 
i
 = 
	`touµî
(
c
) - 'A';

1257 i‡(
i
 < 0 || i >
	`MAXTBL
(
Fõld°ab
)) ;

1258 i‡(((
p
 = 
	`°rchr
(
Curwö
->
fõldscur
, 
i
 + 'A')))

1259 || ((
p
 = 
	`°rchr
(
Curwö
->
fõldscur
, 
i
 + 'a')))) {

1260 i‡(
	`isuµî
(
c
)Ë
p
--;

1261 i‡(('\0' !
p
[1]Ë&& (∞>
Curwö
->
fõldscur
)) {

1262 
c
 = 
p
[0];

1263 
p
[0] =Ö[1];

1264 
p
[1] = 
c
;

1268 
	`puç
(
C≠_curs_n‹m
);

1269 
	}
}

1273 
	$fõlds_s‹t
 ()

1275 c⁄° 
¥om±
[] =

1277 
ph⁄ey
[
PFLAGSSIZ
];

1278 
c
, *
p
;

1279 
i
, 
x
;

1281 
	`°r˝y
(
ph⁄ey
, 
NUL_FIELDS
);

1282 
x
 = 
i
 = 
Curwö
->
s‹tödx
;

1283 
	`puç
(
C≠_˛r_s¸
);

1284 
	`puç
(
C≠_curs_huge
);

1286 
p
 = 
ph⁄ey
 + 
i
;

1287 *
p
 = 
	`touµî
(*p);

1288 
	`di•œy_fõlds
(
ph⁄ey
, 
SORT_xåa
);

1289 
	`show_•ecül
(
	`fmtmk
(
SORT_fõlds


1290 , 
C≠_home
, *
p
, 
Curwö
->
gΩ«me
, 
¥om±
));

1291 
	`chö
(0, &
c
, 1);

1292 
i
 = 
	`touµî
(
c
) - 'A';

1293 i‡(
i
 < 0 || i >
	`MAXTBL
(
Fõld°ab
)) ;

1294 *
p
 = 
	`tﬁowî
(*p);

1295 
x
 = 
i
;

1297 i‡((
p
 = 
	`°rchr
(
Curwö
->
fõldscur
, 
x
 + 'a')))

1298 *
p
 = 
x
 + 'A';

1299 
Curwö
->
s‹tödx
 = 
x
;

1300 
	`puç
(
C≠_curs_n‹m
);

1301 
	}
}

1306 
	$fõlds_toggÀ
 ()

1308 c⁄° 
¥om±
[] =

1310 
c
, *
p
;

1311 
i
;

1313 
	`puç
(
C≠_˛r_s¸
);

1314 
	`puç
(
C≠_curs_huge
);

1316 
	`di•œy_fõlds
(
Curwö
->
fõldscur
, 
FIELDS_xåa
);

1317 
	`show_•ecül
(
	`fmtmk
(
FIELDS_cuºít


1318 , 
C≠_home
, 
Curwö
->
fõldscur
, Curwö->
gΩ«me
, 
¥om±
));

1319 
	`chö
(0, &
c
, 1);

1320 
i
 = 
	`touµî
(
c
) - 'A';

1321 i‡(
i
 < 0 || i >
	`MAXTBL
(
Fõld°ab
)) ;

1322 i‡((
p
 = 
	`°rchr
(
Curwö
->
fõldscur
, 
i
 + 'A')))

1323 *
p
 = 
i
 + 'a';

1324 i‡((
p
 = 
	`°rchr
(
Curwö
->
fõldscur
, 
i
 + 'a')))

1325 *
p
 = 
i
 + 'A';

1327 
	`puç
(
C≠_curs_n‹m
);

1328 
	}
}

1337 
	$wö_cﬁshóds
 (
WIN_t
 *
q
)

1339 c⁄° *
h
;

1340 
i
, 
√edpsdb
 = 0;

1343 
i
 = 0, 
q
->
maxpÊgs
 = 0; q->
fõldscur
[i]; i++) {

1344 i‡(
	`isuµî
(
q
->
fõldscur
[
i
]))

1345 
q
->
¥ocÊags
[q->
maxpÊgs
++] = q->
fõldscur
[
i
] - 'A';

1350 i‡(
Mode_Æts¸
Ë
	`°r˝y
(
q
->
cﬁumnhdr
, " "); q->columnhdr[0] = '\0';

1351 
i
 = 0; i < 
q
->
maxpÊgs
; i++) {

1352 
h
 = 
Fõld°ab
[
q
->
¥ocÊags
[
i
]].
hód
;

1354 i‡(
S¸ìn_cﬁs
 < ()(
	`°æí
(
q
->
cﬁumnhdr
Ë+ såÀn(
h
))) ;

1355 
	`°rˇt
(
q
->
cﬁumnhdr
, 
h
);

1361 
q
->
maxpÊgs
 = 
i
;

1362 
q
->
maxcmd 
 = 
S¸ìn_cﬁs


1363 - (
	`°æí
(
q
->
cﬁumnhdr
Ë- såÀn(
Fõld°ab
[
P_CMD
].
hód
)) - 1;

1368 
	`¢¥ötf
(
q
->
cﬁumnhdr
, (q->columnhdr), "%s"

1369 , 
Mode_Æts¸
 ? 
	`fmtmk
("%d", 
q
->
wönum
) : "");

1370 
i
 = 0; i < 
q
->
maxpÊgs
; i++) {

1371 
h
 = 
Fõld°ab
[
q
->
¥ocÊags
[
i
]].
hód
;

1373 i‡(
P_WCH
 =
q
->
¥ocÊags
[
i
]Ë
√edpsdb
 = 1;

1374 i‡(
P_CMD
 =
q
->
¥ocÊags
[
i
])

1375 
	`°rˇt
(
q
->
cﬁumnhdr


1376 , 
	`fmtmk
(
Fõld°ab
[
P_CMD
].
fmts
, 
q
->
maxcmd 
, q->maxcmd , 
h
));

1378 
	`°rˇt
(
q
->
cﬁumnhdr
, 
h
);

1382 i‡(
√edpsdb
) {

1383 i‡(-1 =
No_ksyms
) {

1384 
No_ksyms
 = 0;

1385 i‡(
	`›í_psdb_mesßge
(
NULL
, 
msg_ßve
))

1388 
No_ksyms
 = 1;

1390 
PSDB›í
 = 1;

1393 
	}
}

1398 
ölöe
 
	$wö_Êdviz
 (
WIN_t
 *
q
, 
PFLG_t
 
Êg
)

1400 
PFLG_t
 *
p
 = 
q
->
¥ocÊags
 + q->
maxpÊgs
 - 1;

1402 *
p
 !
Êg
 && 
q
->
¥ocÊags
 <Ö) --p;

1403  *
p
 =
Êg
;

1404 
	}
}

1409 
	$wö_«mes
 (
WIN_t
 *
q
, c⁄° *
«me
)

1411 
	`•rötf
(
q
->
wö«me
, "%.*s", 
WINNAMSIZ
 -1, 
«me
);

1412 
	`•rötf
(
q
->
gΩ«me
, "%d:%.*s", q->
wönum
, 
WINNAMSIZ
 -1, 
«me
);

1413 
	}
}

1418 
	$wö_£À˘
 (
ch
)

1420 c⁄° 
¥om±
[] = "Choose field group (1 - 4)";

1424 i‡(!
ch
) {

1425 
	`show_pmt
(
¥om±
);

1426 
	`chö
(0, (*)&
ch
, 1);

1428 
ch
) {

1430 
Curwö
 = Curwö->
√xt
;

1433 
Curwö
 = Curwö->
¥ev
;

1437 
Curwö
 = 
Wö°k
[
ch
 - '1'];

1440 
	}
}

1445 
	$wö_w¨n
 ()

1447 
	`show_msg
(
	`fmtmk
("\aCommand disabled,áctivate %s with '-' or '_'"

1448 , 
Curwö
->
gΩ«me
));

1452 
	}
}

1458 
	$wös˛r
 (
WIN_t
 *
q
, 
ßve
)

1460 
Êgsßv
, 
summßv
, 
msgsßv
, 
hódßv
, 
èskßv
;

1462 i‡(
ßve
) {

1463 
Êgsßv
 = 
q
->
wöÊags
; 
summßv
 = q->
summ˛r
;

1464 
msgsßv
 = 
q
->
msgs˛r
; 
hódßv
 = q->
hód˛r
; 
èskßv
 = q->
èsk˛r
;

1465 
	`SETw
(
q
, 
Show_COLORS
);

1467 
q
->
wöÊags
 = 
Êgsßv
; q->
summ˛r
 = 
summßv
;

1468 
q
->
msgs˛r
 = 
msgsßv
; q->
hód˛r
 = 
hódßv
; q->
èsk˛r
 = 
èskßv
;

1470 
	`ˇpsmk
(
q
);

1471 
	}
}

1476 
	$wös_cﬁ‹s
 ()

1478 
	#kbdABORT
 'q'

	)

1479 
	#kbdAPPLY
 '\n'

	)

1480 
˛r
 = 
Curwö
->
èsk˛r
, *
p˛r
 = &Curwin->taskclr;

1481 
ch
, 
tgt
 = 'T';

1483 i‡(0 >
max_cﬁ‹s
) {

1484 
	`show_msg
("\aNo colorsÅo map!");

1487 
	`wös˛r
(
Curwö
, 1);

1488 
	`puç
(
C≠_˛r_s¸
);

1489 
	`puç
(
C≠_curs_huge
);

1492 
	`puç
(
C≠_home
);

1494 
	`show_•ecül
(
	`fmtmk
(
COLOR_hñp


1495 , 
¥o˝s_vîsi⁄
, 
Curwö
->
gΩ«me


1496 , 
	`CHKw
(
Curwö
, 
Show_HIBOLD
) ? "On" : "Off"

1497 , 
	`CHKw
(
Curwö
, 
Show_COLORS
) ? "On" : "Off"

1498 , 
tgt
, 
˛r
, 
Curwö
->
wö«me
));

1499 
	`chö
(0, &
ch
, 1);

1500 
ch
) {

1502 
p˛r
 = &
Curwö
->
summ˛r
;

1503 
˛r
 = *
p˛r
;

1504 
tgt
 = 
ch
;

1507 
p˛r
 = &
Curwö
->
msgs˛r
;

1508 
˛r
 = *
p˛r
;

1509 
tgt
 = 
ch
;

1512 
p˛r
 = &
Curwö
->
hód˛r
;

1513 
˛r
 = *
p˛r
;

1514 
tgt
 = 
ch
;

1517 
p˛r
 = &
Curwö
->
èsk˛r
;

1518 
˛r
 = *
p˛r
;

1519 
tgt
 = 
ch
;

1523 
˛r
 = 
ch
 - '0';

1524 *
p˛r
 = 
˛r
;

1527 
	`TOGw
(
Curwö
, 
Show_HIBOLD
);

1530 
	`TOGw
(
Curwö
, 
Show_COLORS
);

1534 
	`wö_£À˘
(
ch
);

1535 
	`wös˛r
(
Curwö
, 1);

1536 
˛r
 = 
Curwö
->
èsk˛r
, 
p˛r
 = &Curwin->taskclr;

1537 
tgt
 = 'T';

1540 
	`ˇpsmk
(
Curwö
);

1541 } 
kbdAPPLY
 !
ch
 && 
kbdABORT
 != ch);

1543 i‡(
kbdABORT
 =
ch
)

1544 
	`wös˛r
(
Curwö
, 0);

1545 
	`puç
(
C≠_curs_n‹m
);

1547 #unde‡
kbdABORT


1548 #unde‡
kbdAPPLY


1549 
	}
}

1554 
	$wös_ªÊag
 (
wh©
, 
Êg
)

1556 
WIN_t
 *
w
;

1558 
w
 = 
Curwö
;

1560 
wh©
) {

1561 
Fœgs_TOG
:

1562 
	`TOGw
(
w
, 
Êg
);

1564 
Fœgs_SET
:

1565 
	`SETw
(
w
, 
Êg
);

1567 
Fœgs_OFF
:

1568 
	`OFFw
(
w
, 
Êg
);

1573 i‡(
EQUWINS_cwo
 =
Êg
) {

1574 
w
->
maxèsks
 = 0;

1575 
	`SETw
(
w
, 
Show_IDLEPS
 | 
VISIBLE_tsk
);

1577 
w
 = w->
√xt
;

1578 } 
w
 !
Curwö
);

1579 
	}
}

1586 
	$wös_ªsize
 (
d⁄t_ˇª_sig
)

1588 
wösize
 
wz
;

1589 
WIN_t
 *
w
;

1591 ()
d⁄t_ˇª_sig
;

1592 
S¸ìn_cﬁs
 = 
cﬁumns
;

1593 
S¸ìn_rows
 = 
löes
;

1594 i‡(-1 !(
	`io˘l
(
STDOUT_FILENO
, 
TIOCGWINSZ
, &
wz
))) {

1595 
S¸ìn_cﬁs
 = 
wz
.
ws_cﬁ
;

1596 
S¸ìn_rows
 = 
wz
.
ws_row
;

1599 i‡(
SCREENMAX
 < 
S¸ìn_cﬁs
) Screen_cols = SCREENMAX;

1601 
w
 = 
Curwö
;

1603 
	`wö_cﬁshóds
(
w
);

1604 
w
 = w->
√xt
;

1605 } 
w
 !
Curwö
);

1606 
	}
}

1614 
	$wödows_°age1
 ()

1617 c⁄° *
«me
;

1618 c⁄° *
Êds
;

1619 c⁄° 
s‹t
;

1620 c⁄° 
˛rs
[4];

1621 } 
wèb
[] = {

1622 { "Def", 
DEF_FIELDS
, 
P_CPU
,

1623 { 
COLOR_RED
, COLOR_RED, 
COLOR_YELLOW
, COLOR_RED } },

1624 { "Job", 
JOB_FIELDS
, 
P_PID
,

1625 { 
COLOR_CYAN
, COLOR_CYAN, 
COLOR_WHITE
, COLOR_CYAN } },

1626 { "Mem", 
MEM_FIELDS
, 
P_MEM
,

1627 { 
COLOR_MAGENTA
, COLOR_MAGENTA, 
COLOR_BLUE
, COLOR_MAGENTA } },

1628 { "U§", 
USR_FIELDS
, 
P_USR
,

1629 { 
COLOR_YELLOW
, COLOR_YELLOW, 
COLOR_GREEN
, COLOR_YELLOW } },

1631 
WIN_t
 *
w
;

1632 *
pc
;

1633 
i
, 
x
, *
pi
;

1636 
w
 = 
	`Æloc_c
((
WIN_t
Ë* 
GROUPSMAX
);

1638 
i
 = 0; i < 
GROUPSMAX
; i++) {

1639 
Wö°k
[
i
] = 
w
;

1640 
w
->
wönum
 = 
i
 + 1;

1641 
	`°r˝y
(
w
->
wö«me
, 
wèb
[
i
].
«me
);

1642 
	`°r˝y
(
w
->
fõldscur
, 
wèb
[
i
].
Êds
);

1643 
w
->
s‹tödx
 = 
wèb
[
i
].
s‹t
;

1644 
w
->
wöÊags
 = 
DEF_WINFLGS
;

1645 
x
 = 0, 
pi
 = &
w
->
summ˛r
; x < 4; x++,Öi++)

1646 *
pi
 = 
wèb
[
i
].
˛rs
[
x
];

1647 
w
->
ˇ±ab
[0] = 
C≠_n‹m
;

1648 
w
->
ˇ±ab
[1] = 
C≠_n‹m
;

1649 
w
->
ˇ±ab
[2] = 
C≠_bﬁd
;

1651 
x
 = 3, 
pc
 = 
w
->
ˇp˛r_sum
; x < 
CAPTABMAX
; x++) {

1652 
w
->
ˇ±ab
[
x
] = 
pc
;

1653 
pc
 +
CLRBUFSIZ
;

1655 
w
->
√xt
 = w + 1;

1656 
w
->
¥ev
 = w - 1;

1657 ++
w
;

1660 
Wö°k
[3]->
√xt
 = Winstk[0];

1661 
Wö°k
[0]->
¥ev
 = Winstk[3];

1662 
Curwö
 = 
Wö°k
[0];

1663 
Mode_Æts¸
 = 0;

1664 
	}
}

1671 
	$wödows_°age2
 ()

1673 
i
;

1675 i‡(
B©ch
) {

1676 
Mode_Æts¸
 = 0;

1677 
	`OFFw
(
Curwö
, 
Show_COLORS
 | 
Show_HICOLS
 | 
Show_HIROWS
);

1679 
	`wös_ªsize
(0);

1680 
i
 = 0; i < 
GROUPSMAX
; i++) {

1681 
	`wö_«mes
(
Wö°k
[
i
], Wö°k[i]->
wö«me
);

1682 
	`ˇpsmk
(
Wö°k
[
i
]);

1684 
	}
}

1697 
	$˝udo
 (
CPUS_t
 *
˝u
, c⁄° *
pfx
)

1701 
	#TRIMz
(
x
Ë((
tz
 = (
STIC_t
)xË< 0 ? 0 :Åz)

	)

1702 
STIC_t
 
u_‰me
, 
s_‰me
, 
n_‰me
, 
i_‰me
, 
w_‰me
, 
tŸ_‰me
, 
tz
;

1703 
sˇÀ
;

1705 
u_‰me
 = 
	`TRIMz
(
˝u
->
u
 - cpu->
u_ßv
);

1706 
s_‰me
 = 
	`TRIMz
(
˝u
->
s
 - cpu->
s_ßv
);

1707 
n_‰me
 = 
	`TRIMz
(
˝u
->
n
 - cpu->
n_ßv
);

1708 
i_‰me
 = 
	`TRIMz
(
˝u
->
i
 - cpu->
i_ßv
);

1709 
w_‰me
 = 
	`TRIMz
(
˝u
->
w
 - cpu->
w_ßv
);

1710 
tŸ_‰me
 = 
u_‰me
 + 
s_‰me
 + 
n_‰me
 + 
i_‰me
 + 
w_‰me
;

1711 i‡(1 > 
tŸ_‰me
)Åot_frme = 1;

1712 
sˇÀ
 = 100.0 / ()
tŸ_‰me
;

1716 
	`show_•ecül
(
	`fmtmk
(
Sèãs_fmts


1717 , 
pfx


1718 , ()
u_‰me
 * 
sˇÀ


1719 , ()
s_‰me
 * 
sˇÀ


1720 , ()
n_‰me
 * 
sˇÀ


1721 , ()
i_‰me
 * 
sˇÀ


1722 , ()
w_‰me
 * 
sˇÀ
));

1723 
Msg_row
 += 1;

1726 
˝u
->
u_ßv
 = cpu->
u
;

1727 
˝u
->
s_ßv
 = cpu->
s
;

1728 
˝u
->
n_ßv
 = cpu->
n
;

1729 
˝u
->
i_ßv
 = cpu->
i
;

1730 
˝u
->
w_ßv
 = cpu->
w
;

1732 #unde‡
TRIMz


1733 
	}
}

1741 
	$‰ame_°©es
 (
¥oc_t
 **
µt
, 
show
)

1743 
HIST_t
 *
hi°_ßv
;

1744 
HIST_t
 *
hi°_√w
;

1745 
hi°_siz
;

1746 
tŸÆ
, 
ru¬ög
, 
¶ìpög
, 
°›≥d
, 
zombõ
;

1747 
HIST_t
 *
hi°_tmp
;

1750 
hi°_tmp
 = 
hi°_ßv
;

1751 
hi°_ßv
 = 
hi°_√w
;

1752 
hi°_√w
 = 
hi°_tmp
;

1754 
tŸÆ
 = 
ru¬ög
 = 
¶ìpög
 = 
°›≥d
 = 
zombõ
 = 0;

1755 
	`time_ñ≠£d
();

1758 -1 !
µt
[
tŸÆ
]->
pid
) {

1759 
TICS_t
 
tics
;

1760 
¥oc_t
 *
this
 = 
µt
[
tŸÆ
];

1761 
i
;

1763 
this
->
°©e
) {

1766 
¶ìpög
++;

1769 
°›≥d
++;

1772 
zombõ
++;

1775 
ru¬ög
++;

1778 i‡(
tŸÆ
+1 >
hi°_siz
) {

1779 
hi°_siz
 = hist_siz * 5 / 4 + 100;

1780 
hi°_ßv
 = 
	`Æloc_r
(hi°_ßv, (
HIST_t
Ë* 
hi°_siz
);

1781 
hi°_√w
 = 
	`Æloc_r
(hi°_√w, (
HIST_t
Ë* 
hi°_siz
);

1786 
hi°_√w
[
tŸÆ
].
pid
 = 
this
->pid;

1787 
hi°_√w
[
tŸÆ
].
tics
 =Åic†(
this
->
utime
 +Åhis->
°ime
);

1790 
i
 = 0; i < 
Føme_maxèsk
; i++) {

1791 i‡(
this
->
pid
 =
hi°_ßv
[
i
].pid) {

1792 
tics
 -
hi°_ßv
[
i
].tics;

1798 
this
->
p˝u
 = 
tics
;

1800 
tŸÆ
++;

1804 
Føme_maxèsk
 = 
tŸÆ
;

1806 i‡(
show
) {

1807 
CPUS_t
 *
smp˝u
 = 
NULL
;

1810 
	`show_•ecül
(
	`fmtmk
(
STATES_löe1


1811 , 
tŸÆ
, 
ru¬ög
, 
¶ìpög
, 
°›≥d
, 
zombõ
));

1812 
Msg_row
 += 1;

1815 
smp˝u
 = 
	`ª‰esh˝us
(smpcpu);

1817 i‡(
	`CHKw
(
Curwö
, 
Võw_CPUSUM
)) {

1819 
	`˝udo
(&
smp˝u
[
Cpu_tŸ
], "Cpu(s):");

1821 
i
;

1822 
tmp
[
SMLBUFSIZ
];

1824 
i
 = 0; i < 
Cpu_tŸ
; i++) {

1825 
	`¢¥ötf
(
tmp
, —mp), " Cpu%-2d:", 
Mode_úixps
 ? 
i
 : 
Cpu_m≠
[i]);

1826 
	`˝udo
(&
smp˝u
[
i
], 
tmp
);

1830 
	}
}

1835 
	$‰ame_°‹age
 ()

1837 
	`memöfo
();

1838 i‡(
	`CHKw
(
Curwö
, 
Võw_MEMORY
)) {

1839 
	`show_•ecül
(
	`fmtmk
(
MEMORY_löe1


1840 , 
kb_maö_tŸÆ
, 
kb_maö_u£d
, 
kb_maö_‰ì
, 
kb_maö_buf„rs
));

1841 
	`show_•ecül
(
	`fmtmk
(
MEMORY_löe2


1842 , 
kb_sw≠_tŸÆ
, 
kb_sw≠_u£d
, 
kb_sw≠_‰ì
, 
kb_maö_ˇched
));

1843 
Msg_row
 += 2;

1845 
	}
}

1851 
	$mkcﬁ
 (
WIN_t
 *
q
, 
PFLG_t
 
idx
, 
°a
, *
∑d
, *
buf
, ...)

1853 
tmp
[
COLBUFSIZ
];

1854 
va_li°
 
va
;

1856 
	`va_°¨t
(
va
, 
buf
);

1860 i‡(!
	`CHKw
(
q
, 
Show_HICOLS
Ë|| q->
s‹tödx
 !
idx
) {

1861 
	`v•rötf
(
buf
, 
Fõld°ab
[
idx
].
fmts
, 
va
);

1863 
	`v¢¥ötf
(
tmp
, —mp), 
Fõld°ab
[
idx
].
fmts
, 
va
);

1864 
	`•rötf
(
buf
, "%s%s", 
q
->
ˇp˛r_rowhigh
, 
tmp
);

1865 *
∑d
 +
q
->
Àn_rowhigh
;

1866 i‡(!
	`CHKw
(
q
, 
Show_HIROWS
Ë|| 'R' !
°a
) {

1867 
	`°rˇt
(
buf
, 
q
->
ˇp˛r_rown‹m
);

1868 *
∑d
 +
q
->
Àn_rown‹m
;

1871 
	`va_íd
(
va
);

1872 
	}
}

1877 
	$show_a_èsk
 (
WIN_t
 *
q
, 
¥oc_t
 *
èsk
)

1881 
	#MKCOL
(
q
,
idx
,
°a
,
∑d
,
buf
,
¨g
...) do{ \

1882 i‡(!
b
) \

1883 
	`¢¥ötf
(
buf
, (buf), 
f
, ## 
¨g
); \

1884 
	`mkcﬁ
(
q
, 
idx
, 
°a
, 
∑d
, 
buf
, ## 
¨g
); }0)

	)

1886 
rbuf
[
ROWBUFSIZ
];

1887 
j
, 
x
, 
∑d
;

1891 
∑d
 = 
Mode_Æts¸
;

1892 i‡(
∑d
Ë
	`°r˝y
(
rbuf
, " "); rbuf[0] = '\0';

1894 
x
 = 0; x < 
q
->
maxpÊgs
; x++) {

1895 
cbuf
[
COLBUFSIZ
];

1896 
a
 = 
èsk
->
°©e
;

1897 
PFLG_t
 
i
 = 
q
->
¥ocÊags
[
x
];

1898 
s
 = 
Fõld°ab
[
i
].
sˇÀ
;

1899 
w
 = 
Fõld°ab
[
i
].
width
;

1900 c⁄° *
f
 = 
Fõld°ab
[
i
].
fmts
;

1901 
b
 = (
	`CHKw
(
q
, 
Show_HICOLS
Ë&& q->
s‹tödx
 =
i
);

1903 
cbuf
[0] = '\0';

1904 
i
) {

1905 
P_CMD
:

1906 { *
cmd±r
, 
cmd«m
[
ROWBUFSIZ
];

1908 i‡(!
	`CHKw
(
q
, 
Show_CMDLIN
))

1909 
cmd±r
 = 
èsk
->
cmd
;

1911 
cmd«m
[0] = '\0';

1912 i‡(
èsk
->
cmdlöe
) {

1913 
j
 = 0;

1918 
	`°rˇt
(
cmd«m


1919 , 
	`fmtmk
("%.*†", 
q
->
maxcmd 
, 
èsk
->
cmdlöe
[
j
++]));

1923 
	`°rim
(1, 
cmd«m
);

1924 i‡(
q
->
maxcmd 
 < ()
	`°æí
(
cmd«m
)) ;

1925 } 
èsk
->
cmdlöe
[
j
]);

1929 
	`°r˝y
(
cmd«m
, 
	`fmtmk
(
CMDLINE_FMTS
, 
èsk
->
cmd
));

1931 
cmd±r
 = 
cmd«m
;

1933 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, q->
maxcmd 
, q->maxcmd , 
cmd±r
);

1936 
P_COD
:

1937 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
ås
), 
w
, 
s
));

1939 
P_CPN
:

1940 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
¥o˚ss‹
);

1942 
P_CPU
:

1943 { 
u
 = ()
èsk
->
p˝u
 * 
Føme_tsˇÀ
;

1945 i‡(99.9 < 
u
) u = 99.9;

1946 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
u
);

1949 
P_DAT
:

1950 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
drs
), 
w
, 
s
));

1952 
P_DRT
:

1953 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(()
èsk
->
dt
, 
w
, 
s
));

1955 
P_FLG
:

1956 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, ()
èsk
->
Êags
);

1957 
j
 = 0; 
cbuf
[j]; j++)

1958 i‡('0' =
cbuf
[
j
]) cbuf[j] = '.';

1960 
P_FLT
:

1961 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
èsk
->
maj_Êt
, 
w
, 
s
));

1963 
P_GRP
:

1964 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
egroup
);

1966 
P_MEM
:

1967 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf


1968 , ()
	`PAGES_2K
(
èsk
->
ªsidít
Ë* 100 / 
kb_maö_tŸÆ
);

1970 
P_NCE
:

1971 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, ()
èsk
->
ni˚
);

1973 
P_PGD
:

1974 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
pgΩ
);

1976 
P_PID
:

1977 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
pid
);

1979 
P_PPD
:

1980 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
µid
);

1982 
P_PRI
:

1984 i‡(-99 > 
èsk
->
¥i‹ôy
)Åask->priority = -99;

1985 i‡(+99 < 
èsk
->
¥i‹ôy
)Åask->priority = +99;

1986 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, ()
èsk
->
¥i‹ôy
);

1988 
P_RES
:

1989 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
ªsidít
), 
w
, 
s
));

1991 
P_SHR
:

1992 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
sh¨e
), 
w
, 
s
));

1994 
P_STA
:

1995 #ifde‡
USE_LIB_STA3


1996 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`°©us
(
èsk
));

1998 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
°©e
);

2001 
P_SWP
:

2002 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf


2003 , 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
size
 -Åask->
ªsidít
), 
w
, 
s
));

2005 
P_TME
:

2006 
P_TM2
:

2007 { 
TICS_t
 
t
;

2009 
t
 = 
èsk
->
utime
 +Åask->
°ime
;

2010 i‡(
	`CHKw
(
q
, 
Show_CTIMES
))

2011 
t
 +(
èsk
->
cutime
 +Åask->
c°ime
);

2012 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_tics
(
t
, 
w
));

2015 
P_TTY
:

2016 { 
tmp
[
TNYBUFSIZ
];

2018 
	`dev_to_ây
(
tmp
, ()
w
, 
èsk
->
ây
,Åask->
pid
, 
ABBREV_DEV
);

2019 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
tmp
);

2022 
P_UID
:

2023 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
euid
);

2025 
P_USR
:

2026 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
èsk
->
eu£r
);

2028 
P_VRT
:

2029 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`sˇÀ_num
(
	`PAGES_2K
(
èsk
->
size
), 
w
, 
s
));

2031 
P_WCH
:

2032 i‡(
No_ksyms
) {

2033 #ifde‡
CASEUP_HEXES


2034 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`fmtmk
("x%08lX", ()
èsk
->
wch™
));

2036 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`fmtmk
("x%08lx", ()
èsk
->
wch™
));

2039 
	`MKCOL
(
q
, 
i
, 
a
, &
∑d
, 
cbuf
, 
	`wch™
(
èsk
->
wch™
));

2045 
	`°rˇt
(
rbuf
, 
cbuf
);

2049 
	`PUTP
("\n%s%.*s%s%s", (
	`CHKw
(
q
, 
Show_HIROWS
Ë&& 'R' =
èsk
->
°©e
)

2050 ? 
q
->
ˇp˛r_rowhigh
 : q->
ˇp˛r_rown‹m


2051 , 
S¸ìn_cﬁs
 + 
∑d


2052 , 
rbuf


2053 , 
C≠s_off


2054 , 
C≠_˛r_eﬁ
);

2056 #unde‡
MKCOL


2057 
	}
}

2064 
	$do_key
 (
c
)

2067 c⁄° 
îr_£cuª
[] = "\aUnavailable in secure mode";

2068 #ifde‡
WARN_NOT_SMP


2070 c⁄° 
îr_smp
[] = "\aSorry, only 1 cpu detected";

2073 
c
) {

2075 #ifde‡
WARN_NOT_SMP


2076 i‡(
Cpu_tŸ
 > 1)

2077 
	`TOGw
(
Curwö
, 
Võw_CPUSUM
);

2079 
	`show_msg
(
îr_smp
);

2081 
	`TOGw
(
Curwö
, 
Võw_CPUSUM
);

2086 i‡(
Mode_Æts¸
Ë
Curwö
 = Curwö->
√xt
;

2090 
Mode_Æts¸
 = !Mode_altscr;

2091 
	`wös_ªsize
(0);

2095 i‡(
VIZCHKc
) {

2096 i‡(!
	`CHKw
(
Curwö
, 
Show_HICOLS
Ë&& !CHKw(Curwö, 
Show_HIROWS
))

2097 
	`show_msg
("\aNothingÅo highlight!");

2099 
	`TOGw
(
Curwö
, 
Show_HIBOLD
);

2100 
	`ˇpsmk
(
Curwö
);

2106 
	`VIZTOGc
(
Show_CMDLIN
);

2111 i‡(
Secuª_mode
)

2112 
	`show_msg
(
îr_£cuª
);

2114 
tmp
 =

2115 
	`gë_Êﬂt
(
	`fmtmk
("Ch™gêdñay from %.1‡to", 
Dñay_time
));

2116 i‡(
tmp
 > -1Ë
Dñay_time
 =Åmp;

2121 i‡(
VIZCHKc
) {

2122 
	`fõlds_toggÀ
();

2123 
	`wö_cﬁshóds
(
Curwö
);

2129 i‡(
VIZCHKc
) {

2130 
	`fõlds_s‹t
();

2131 
	`wö_cﬁshóds
(
Curwö
);

2136 i‡(
Mode_Æts¸
) {

2137 
tmp
[
GETBUFSIZ
];

2138 
	`°r˝y
(
tmp
, 
	`ask4°r
(
	`fmtmk
("Rename window '%s'Åo (1-3 chars)"

2139 , 
Curwö
->
wö«me
)));

2140 i‡(
tmp
[0]Ë
	`wö_«mes
(
Curwö
,Åmp);

2145 
	`wö_£À˘
(0);

2150 { 
ch
;

2152 
	`puç
(
C≠_˛r_s¸
);

2153 
	`puç
(
C≠_curs_huge
);

2155 
	`show_•ecül
(
	`fmtmk
(
KEYS_hñp


2156 , 
¥o˝s_vîsi⁄


2157 , 
Curwö
->
gΩ«me


2158 , 
	`CHKw
(
Curwö
, 
Show_CTIMES
) ? "On" : "Off"

2159 , 
Dñay_time


2160 , 
Secuª_mode
 ? "On" : "Off"

2161 , 
Secuª_mode
 ? "" : 
KEYS_hñp_un£cuªd
));

2162 
	`chö
(0, &
ch
, 1);

2163 i‡('?' =
ch
 || 'h' == ch) {

2165 
	`puç
(
C≠_˛r_s¸
);

2166 
	`show_•ecül
(
	`fmtmk
(
WINDOWS_hñp


2167 , 
Curwö
->
gΩ«me


2168 , 
Wö°k
[0]->
wö«me


2169 , 
Wö°k
[1]->
wö«me


2170 , 
Wö°k
[2]->
wö«me


2171 , 
Wö°k
[3]->
wö«me
));

2172 
	`chö
(0, &
ch
, 1);

2173 
	`wö_£À˘
(
ch
);

2174 } '\n' !
ch
);

2176 
	`puç
(
C≠_curs_n‹m
);

2181 
	`VIZTOGc
(
Show_IDLEPS
);

2185 #ifde‡
WARN_NOT_SMP


2186 i‡(
Cpu_tŸ
 > 1) {

2187 
Mode_úixps
 = !Mode_irixps;

2188 
	`show_msg
(
	`fmtmk
("Irix modê%s", 
Mode_úixps
 ? "On" : "Off"));

2190 
	`show_msg
(
îr_smp
);

2192 
Mode_úixps
 = !Mode_irixps;

2193 
	`show_msg
(
	`fmtmk
("Irix modê%s", 
Mode_úixps
 ? "On" : "Off"));

2198 i‡(
Secuª_mode
) {

2199 
	`show_msg
(
îr_£cuª
);

2201 
sig
, 
pid
 = 
	`gë_öt
("PIDÅo kill");

2203 i‡(-1 !
pid
) {

2204 
sig
 = 
	`sig«l_«me_to_numbî
(

2205 
	`ask4°r
(
	`fmtmk
("Kill PID %d with signal [%i]"

2206 , 
pid
, 
DEF_SIGNAL
)));

2207 i‡(-1 =
sig
Ësig = 
DEF_SIGNAL
;

2208 i‡(
sig
 && 
	`kûl
(
pid
, sig))

2209 
	`show_msg
(
	`fmtmk
("\aKill of PID '%d' with '%d' failed: %s"

2210 , 
pid
, 
sig
, 
	`°ªº‹
(
î∫o
)));

2216 
	`TOGw
(
Curwö
, 
Võw_LOADAV
);

2220 
	`TOGw
(
Curwö
, 
Võw_MEMORY
);

2225 i‡(
VIZCHKc
) {

2226 
num
;

2227 i‡(-1 < (
num
 = 
	`gë_öt
(

2228 
	`fmtmk
("MaximumÅasks = %d, changeÅo (0 is unlimited)"

2229 , 
Curwö
->
maxèsks
))))

2230 
Curwö
->
maxèsks
 = 
num
;

2235 i‡(
VIZCHKc
) {

2236 
	`fõlds_ª‹dî
();

2237 
	`wö_cﬁshóds
(
Curwö
);

2242 
	`°›
(0);

2245 i‡(
Secuª_mode
)

2246 
	`show_msg
(
îr_£cuª
);

2248 
pid
, 
vÆ
;

2250 
pid
 = 
	`gë_öt
("PIDÅoÑenice");

2251 i‡(-1 =
pid
) ;

2252 
vÆ
 = 
	`gë_öt
(
	`fmtmk
("Ríi˚ PID %dÅÿvÆue", 
pid
));

2253 i‡(
	`£çri‹ôy
(
PRIO_PROCESS
, ()
pid
, 
vÆ
))

2254 
	`show_msg
(
	`fmtmk
("\aRenice of PID %dÅo %d failed: %s"

2255 , 
pid
, 
vÆ
, 
	`°ªº‹
(
î∫o
)));

2260 
	`VIZTOGc
(
Q§t_NORMAL
);

2264 i‡(
VIZCHKc
) {

2265 
	`TOGw
(
Curwö
, 
Show_CTIMES
);

2266 
	`show_msg
(
	`fmtmk
("CumulativeÅime %s"

2267 , 
	`CHKw
(
Curwö
, 
Show_CTIMES
) ? "On" : "Off"));

2272 
	`TOGw
(
Curwö
, 
Võw_STATES
);

2276 i‡(
VIZCHKc
)

2277 
	`°r˝y
(
Curwö
->
cﬁu§«m
, 
	`ask4°r
("Which user (blank foráll)"));

2281 i‡(
Mode_Æts¸
Ë
Curwö
 = Curwö->
¥ev
;

2285 { 
FILE
 *
Â
 = 
	`f›í
(
RCfûe
, "w"); 
i
;

2287 i‡(
Â
) {

2288 
	`Ârötf
(
Â
, "RCfile for \"%s with windows\"\t\t# shameless braggin'\n"

2289 , 
My«me
);

2290 
	`Ârötf
(
Â
, "Id:%c, "

2292 , 
RCF_FILEID


2293 , 
Mode_Æts¸
, 
Mode_úixps
, 
Dñay_time
, 
Curwö
 - 
Wö°k
[0]);

2294 
i
 = 0; i < 
GROUPSMAX
; i++) {

2295 
	`Ârötf
(
Â
, "%s\tfieldscur=%s\n"

2296 , 
Wö°k
[
i
]->
wö«me
, Wö°k[i]->
fõldscur
);

2297 
	`Ârötf
(
Â
, "\twinflags=%d, sortindx=%d, maxtasks=%d\n"

2298 , 
Wö°k
[
i
]->
wöÊags


2299 , 
Wö°k
[
i
]->
s‹tödx


2300 , 
Wö°k
[
i
]->
maxèsks
);

2301 
	`Ârötf
(
Â
, "\tsummclr=%d, msgsclr=%d, headclr=%d,Åaskclr=%d\n"

2302 , 
Wö°k
[
i
]->
summ˛r


2303 , 
Wö°k
[
i
]->
msgs˛r


2304 , 
Wö°k
[
i
]->
hód˛r


2305 , 
Wö°k
[
i
]->
èsk˛r
);

2307 
	`f˛o£
(
Â
);

2308 
	`show_msg
(
	`fmtmk
("WrŸêc⁄figuøti⁄Åÿ'%s'", 
RCfûe
));

2310 
	`show_msg
(
	`fmtmk
("\aFaûed '%s' o≥n: %s", 
RCfûe
, 
	`°ªº‹
(
î∫o
)));

2315 i‡(
VIZCHKc
) {

2316 
	`TOGw
(
Curwö
, 
Show_HICOLS
);

2317 
	`ˇpsmk
(
Curwö
);

2322 i‡(
VIZCHKc
) {

2323 
	`TOGw
(
Curwö
, 
Show_HIROWS
);

2324 
	`ˇpsmk
(
Curwö
);

2329 i‡(
VIZCHKc
) {

2330 
	`TOGw
(
Curwö
, 
Show_COLORS
);

2331 
	`ˇpsmk
(
Curwö
);

2336 
	`wös_cﬁ‹s
();

2340 i‡(
Mode_Æts¸
)

2341 
	`TOGw
(
Curwö
, 
VISIBLE_tsk
);

2345 i‡(
Mode_Æts¸
)

2346 
	`wös_ªÊag
(
Fœgs_TOG
, 
VISIBLE_tsk
);

2350 
Curwö
->
maxèsks
 = 0;

2351 
	`SETw
(
Curwö
, 
Show_IDLEPS
 | 
VISIBLE_tsk
);

2352 
M⁄pidsidx
 = 0;

2356 i‡(
Mode_Æts¸
)

2357 
	`SETw
(
Curwö
, 
EQUWINS_cwo
);

2361 i‡(
VIZCHKc
) {

2362 
PFLG_t
 *
p
 = 
Curwö
->
¥ocÊags
 + Curwö->
maxpÊgs
 - 1;

2363 *
p
 !
Curwö
->
s‹tödx
)

2364 --
p
;

2365 i‡(--
p
 >
Curwö
->
¥ocÊags
)

2366 
Curwö
->
s‹tödx
 = *
p
;

2371 i‡(
VIZCHKc
) {

2372 
PFLG_t
 *
p
 = 
Curwö
->
¥ocÊags
;

2373 *
p
 !
Curwö
->
s‹tödx
)

2374 ++
p
;

2375 i‡(++
p
 < 
Curwö
->
¥ocÊags
 + Curwö->
maxpÊgs
)

2376 
Curwö
->
s‹tödx
 = *
p
;

2385 
	`show_msg
("\aUnknown command -Åry 'h' for help");

2387 
	}
}

2397 
¥oc_t
 **
	$do_summ¨y
 ()

2399 
¥oc_t
 **
p_èbÀ
 = 
NULL
;

2400 
p_Êags
 = 
PROC_FILLMEM
 | 
PROC_FILLSTAT
 | 
PROC_FILLSTATUS
;

2401 
WIN_t
 *
w
;

2404 
w
 = 
Curwö
;

2406 i‡(!
Mode_Æts¸
 || 
	`CHKw
(
w
, 
VISIBLE_tsk
)) {

2407 
p_Êags
 |(
	`CHKw
(
w
, 
Show_CMDLIN
Ë&& 
	`wö_Êdviz
(w, 
P_CMD
)Ë? 
PROC_FILLCOM
 : 0;

2408 
p_Êags
 |
	`wö_Êdviz
(
w
, 
P_USR
Ë? 
PROC_FILLUSR
 : 0;

2409 
p_Êags
 |
	`wö_Êdviz
(
w
, 
P_GRP
Ë? 
PROC_FILLGRP
 : 0;

2411 i‡(
Mode_Æts¸
Ë
w
 = w->
√xt
;

2412 } 
w
 !
Curwö
);

2414 i‡(!
p_èbÀ
) {

2416 
p_èbÀ
 = 
	`ª‰esh¥ocs
(
NULL
, 
p_Êags
);

2417 
	`‰ame_°©es
(
p_èbÀ
, 0);

2418 
	`puç
(
C≠_˛r_s¸
);

2419 
	`¶ìp
(1);

2421 
	`puç
(
B©ch
 ? "\n\n" : 
C≠_home
);

2426 i‡(
	`CHKw
(
Curwö
, 
Võw_LOADAV
)) {

2427 i‡(!
Mode_Æts¸
)

2428 
	`show_•ecül
(
	`fmtmk
(
LOADAV_löe
, 
My«me
, 
	`•röt_u±ime
()));

2430 
	`show_•ecül
(
	`fmtmk
(
	`CHKw
(
Curwö
, 
VISIBLE_tsk
)

2431 ? 
LOADAV_löe_Æt


2432 : 
LOADAV_löe


2433 , 
Curwö
->
gΩ«me
, 
	`•röt_u±ime
()));

2434 
Msg_row
 += 1;

2440 
p_èbÀ
 = 
	`ª‰esh¥ocs
’_èbÀ, 
p_Êags
);

2441 
	`‰ame_°©es
(
p_èbÀ
, 
	`CHKw
(
Curwö
, 
Võw_STATES
));

2445 
	`‰ame_°‹age
();

2447 #i‚de‡
YIELDCPU_OFF


2456 
	`sched_yõld
();

2458 
	`SETw
(
Curwö
, 
NEWFRAM_cwo
);

2459  
p_èbÀ
;

2461 #unde‡
myCMD


2462 #unde‡
myGRP


2463 
	}
}

2469 
	$do_wödow
 (
¥oc_t
 **
µt
, 
WIN_t
 *
q
, *
ls¸
)

2471 #ifde‡
SORT_SUPRESS


2473 
	#§tMASK
 ~–
Q§t_NORMAL
 | 
Show_CMDLIN
 | 
Show_CTIMES
 )

	)

2474 
PFLG_t
 
ßv_ödx
 = 0;

2475 
ßv_Êgs
 = -1;

2477 
i
, 
lwö
;

2481 
	`PUTP
("\n%s%s%s%s", 
q
->
ˇp˛r_hdr
, q->
cﬁumnhdr
, 
C≠s_off
, 
C≠_˛r_eﬁ
);

2483 #ifde‡
SORT_SUPRESS


2484 i‡(
	`CHKw
(
Curwö
, 
NEWFRAM_cwo
)

2485 || 
ßv_ödx
 !
q
->
s‹tödx


2486 || 
ßv_Êgs
 !(
q
->
wöÊags
 & 
§tMASK
)) {

2487 
ßv_ödx
 = 
q
->
s‹tödx
;

2488 
ßv_Êgs
 = (
q
->
wöÊags
 & 
§tMASK
);

2491 i‡(
	`CHKw
(
q
, 
Q§t_NORMAL
)Ë
Føme_§tÊg
 = 1;

2492 
Føme_§tÊg
 = -1;

2493 
Føme_˘imes
 = 
	`CHKw
(
q
, 
Show_CTIMES
);

2494 
Føme_cmdlö
 = 
	`CHKw
(
q
, 
Show_CMDLIN
);

2495 
	`qs‹t
(
µt
, ()
Føme_maxèsk
, (
¥oc_t
 *)

2496 , 
Fõld°ab
[
q
->
s‹tödx
].
s‹t
);

2497 #ifde‡
SORT_SUPRESS


2501 i‡(!
B©ch
Ë(*
ls¸
)++;

2502 
lwö
 = 1;

2503 
i
 = 0;

2505  -1 !
µt
[
i
]->
pid
 && *
ls¸
 < 
Max_löes


2506 && (!
q
->
wölöes
 || (
lwö
 <= q->winlines)) ) {

2507 i‡((
	`CHKw
(
q
, 
Show_IDLEPS
)

2508 || ('S' !
µt
[
i
]->
°©e
 && 'Z' !=Öpt[i]->state))

2509 && ((!
q
->
cﬁu§«m
[0])

2510 || (!
	`°rcmp
(
q
->
cﬁu§«m
, 
µt
[
i
]->
eu£r
)) ) ) {

2513 
	`show_a_èsk
(
q
, 
µt
[
i
]);

2514 i‡(!
B©ch
Ë(*
ls¸
)++;

2515 ++
lwö
;

2517 ++
i
;

2520 
q
->
wölöes
 = 0;

2521 
	`OFFw
(
Curwö
, 
FLGSOFF_cwo
);

2523 #ifde‡
SORT_SUPRESS


2524 #unde‡
§tMASK


2526 
	}
}

2533 
	$sohñpme
 (
wix
, 
max
)

2535 
i
, 
rsvd
, 
size
, 
wös
;

2538 
i
 = 
wix
, 
rsvd
 = 0, 
wös
 = 0; i < 
GROUPSMAX
; i++) {

2539 i‡(
	`CHKw
(
Wö°k
[
i
], 
VISIBLE_tsk
)) {

2540 
rsvd
 +
Wö°k
[
i
]->
maxèsks
;

2541 ++
wös
;

2542 i‡(
max
 <
rsvd
) ;

2545 i‡(!
wös
) wins = 1;

2547 
size
 = (
max
 - 
wös
Ë- 
rsvd
;

2548 i‡(0 <
size
Ësizê
max
;

2549 
size
 = (
max
 - 
wös
) / wins;

2554 
i
 = 
wix
 ; i < 
GROUPSMAX
; i++) {

2555 i‡(
	`CHKw
(
Wö°k
[
i
], 
VISIBLE_tsk
)) {

2556 
Wö°k
[
i
]->
wölöes
 =

2557 
Wö°k
[
i
]->
maxèsks
 ? Wö°k[i]->maxèsk†: 
size
;

2560 
	}
}

2583 
	$so_Àts_£e_em
 ()

2585 
¥oc_t
 **
µt
;

2586 
i
, 
s¸lös
;

2588 
Msg_row
 = 
s¸lös
 = 0;

2589 
µt
 = 
	`do_summ¨y
();

2590 
Max_löes
 = (
S¸ìn_rows
 - 
Msg_row
) - 1;

2592 i‡(
	`CHKw
(
Curwö
, 
EQUWINS_cwo
))

2593 
	`wös_ªÊag
(
Fœgs_OFF
, 
EQUWINS_cwo
);

2596 
	`puç
(
	`tg2
(0, 
Msg_row
));

2598 i‡(!
Mode_Æts¸
) {

2600 
Curwö
->
wölöes
 = Curwö->
maxèsks
;

2601 
	`do_wödow
(
µt
, 
Curwö
, &
s¸lös
);

2604 
i
 = 0 ; i < 
GROUPSMAX
; i++) {

2605 i‡(
	`CHKw
(
Wö°k
[
i
], 
VISIBLE_tsk
)) {

2606 
	`sohñpme
(
i
, 
Max_löes
 - 
s¸lös
);

2607 
	`do_wödow
(
µt
, 
Wö°k
[
i
], &
s¸lös
);

2609 i‡(
Max_löes
 <
s¸lös
) ;

2615 
	`PUTP
("%s%s%s", 
C≠_˛r_eos
, 
	`tg2
(0, 
Msg_row
), 
C≠_˛r_eﬁ
);

2616 
	`fÊush
(
°dout
);

2617 
	}
}

2632 
	$maö
 (
d⁄t_ˇª_¨gc
, **
¨gv
)

2634 ()
d⁄t_ˇª_¨gc
;

2635 
	`bef‹e
(*
¨gv
);

2647 
	`wödows_°age1
();

2648 
	`c⁄figs_ªad
();

2649 
	`∑r£_¨gs
(&
¨gv
[1]);

2650 
	`whack_ãrmöÆ
();

2651 
	`wödows_°age2
();

2653 
	`sig«l
(
SIGALRM
, 
°›
);

2654 
	`sig«l
(
SIGHUP
, 
°›
);

2655 
	`sig«l
(
SIGINT
, 
°›
);

2656 
	`sig«l
(
SIGPIPE
, 
°›
);

2657 
	`sig«l
(
SIGQUIT
, 
°›
);

2658 
	`sig«l
(
SIGTERM
, 
°›
);

2659 
	`sig«l
(
SIGTSTP
, 
su•íd
);

2660 
	`sig«l
(
SIGTTIN
, 
su•íd
);

2661 
	`sig«l
(
SIGTTOU
, 
su•íd
);

2662 
	`sig«l
(
SIGCONT
, 
wös_ªsize
);

2663 
	`sig«l
(
SIGWINCH
, 
wös_ªsize
);

2666 
timevÆ
 
tv
;

2667 
fd_£t
 
fs
;

2668 
c
;

2670 
	`so_Àts_£e_em
();

2672 i‡(
Msg_awaôög
Ë
	`show_msg
(
Msg_dñayed
);

2673 i‡(0 < 
Lo›s
) --Loops;

2674 i‡(!
Lo›s
Ë
	`°›
(0);

2676 i‡(
B©ch
)

2677 
	`¶ìp
(()
Dñay_time
);

2679 
tv
.
tv_£c
 = 
Dñay_time
;

2680 
tv
.
tv_u£c
 = (
Dñay_time
 - ()Delay_time) * 1000000;

2681 
	`FD_ZERO
(&
fs
);

2682 
	`FD_SET
(
STDIN_FILENO
, &
fs
);

2683 i‡(0 < 
	`£À˘
(
STDIN_FILENO
+1, &
fs
, 
NULL
, NULL, &
tv
)

2684 && 0 < 
	`chö
(0, &
c
, 1))

2685 
	`do_key
(()
c
);

2716 
	}
}

	@top.h

20 #i‚de‡
_It›


21 
	#_It›


	)

39 #ifde‡
PRETEND2_5_X


40 
	#löux_vîsi⁄_code
 
	`LINUX_VERSION
(2,5,43)

	)

46 
	#DEF_DELAY
 3.0

	)

49 
	#MSG_SLEEP
 2

	)

52 
	#DEF_SIGNAL
 
SIGTERM


	)

55 
	#MONPIDMAX
 20

	)

59 
	#SCREENMAX
 512

	)

63 
	#PFLAGSSIZ
 32

	)

64 
	#CAPBUFSIZ
 32

	)

65 
	#CLRBUFSIZ
 64

	)

66 
	#GETBUFSIZ
 32

	)

67 
	#TNYBUFSIZ
 32

	)

68 
	#SMLBUFSIZ
 256

	)

69 
	#OURPATHSZ
 1024

	)

70 
	#BIGBUFSIZ
 2048

	)

71 
	#USRNAMSIZ
 
GETBUFSIZ


	)

73 
	#COLBUFSIZ
 
SMLBUFSIZ
 + 
CLRBUFSIZ


	)

74 
	#ROWBUFSIZ
 
SCREENMAX
 + 
CLRBUFSIZ


	)

80 
	#MAXTBL
(
t
Ë()(—Ë/ —[0]))

	)

83 
	#BYTES_2K
(
n
Ë()–“Ë>> 10 )

	)

84 
	#PAGES_2B
(
n
Ë()–“Ë* 
Page_size
 )

	)

85 
	#PAGES_2K
(
n
Ë
	`BYTES_2K
(
	`PAGES_2B
“))

	)

86 
	#PAGE_CNT
(
n
Ë()–“Ë/ 
Page_size
 )

	)

89 
	#SORT_…
 ( 
Føme_§tÊg
 > 0 ? 1 : -1 )

	)

90 
	#SORT_gt
 ( 
Føme_§tÊg
 > 0 ? -1 : 1 )

	)

91 
	#SORT_eq
 0

	)

96 
	#_SF
(
f
Ë(
QSORT_t
)
s‹t_
 ## 
	)
f

97 
	#_SC_NUM1
(
f
,
n
) \

98 
s‹t_
 ## 
	`f
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
) { \

99 i‡–(*
P
)->
n
 < (*
Q
)->¿Ë 
SORT_…
; \

100 i‡–(*
P
)->
n
 > (*
Q
)->¿Ë 
SORT_gt
; \

101  
SORT_eq
; }

	)

102 
	#_SC_NUM2
(
f
,
n1
,
n2
) \

103 
s‹t_
 ## 
	`f
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
) { \

104 i‡–((*
P
)->
n1
 - (*P)->
n2
Ë< ((*
Q
)->n1 - (*Q)->n2ËË 
SORT_…
; \

105 i‡–((*
P
)->
n1
 - (*P)->
n2
Ë> ((*
Q
)->n1 - (*Q)->n2ËË 
SORT_gt
; \

106  
SORT_eq
; }

	)

107 
	#_SC_NUMx
(
f
,
n
) \

108 
s‹t_
 ## 
	`f
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
) { \

109  
Føme_§tÊg
 * ( (*
Q
)->
n
 - (*
P
)->¿); }

	)

110 
	#_SC_STRx
(
f
,
s
) \

111 
s‹t_
 ## 
	`f
 (c⁄° 
¥oc_t
 **
P
, c⁄°Öroc_à**
Q
) { \

112  
Føme_§tÊg
 * 
	`°rcmp
((*
Q
)->
s
, (*
P
)->s); }

	)

117 
	#PUTP
(
fmt
,
¨g
...) do { \

118 
_°r
[
ROWBUFSIZ
]; \

119 
	`¢¥ötf
(
_°r
, (_°r), 
fmt
, ## 
¨g
); \

120 
	`puç
(
_°r
); \

121 } 0);

	)

126 
	#debug_END
(
s
) { \

127 
	`°d_îr
 (const *); \

128 
	`Âuts
(
C≠_˛r_s¸
, 
°dout
); \

129 
	`°d_îr
(
s
); \

130 }

	)

133 
	#ôs_YOUR_Áu…
 { *((*)0Ë'!'; }

	)

139 
	tPFLG_t
;

142 
	tTICS_t
;

143 
	tSTIC_t
;

146 (*
	tQSORT_t
)(const *, const *);

151 c⁄° *
hód
;

152 c⁄° *
fmts
;

153 c⁄° 
width
;

154 c⁄° 
sˇÀ
;

155 c⁄° 
QSORT_t
 
s‹t
;

156 c⁄° *
desc
;

157 } 
	tFTAB_t
;

163 
pid
;

164 
TICS_t
 
tics
;

165 } 
	tHIST_t
;

172 
TICS_t
 
u
, 
n
, 
s
, 
i
, 
w
;

174 
TICS_t
 
u_ßv
, 
s_ßv
, 
n_ßv
, 
i_ßv
, 
w_ßv
;

175 } 
	tCPUS_t
;

179 
	esˇÀ_num
 {

180 
SK_no
, 
SK_Kb
, 
SK_Mb
, 
SK_Gb


184 
	epÊag
 {

185 
P_PID
, 
P_PPD
, 
P_PGD
, 
P_UID
, 
P_USR
, 
P_GRP
, 
P_TTY
,

186 
P_PRI
, 
P_NCE
,

187 
P_CPN
, 
P_CPU
, 
P_TME
, 
P_TM2
,

188 
P_MEM
, 
P_VRT
, 
P_SWP
, 
P_RES
, 
P_COD
, 
P_DAT
, 
P_SHR
,

189 
P_FLT
, 
P_DRT
,

190 
P_STA
, 
P_CMD
, 
P_WCH
, 
P_FLG


198 
	#GROUPSMAX
 4

	)

199 
	#WINNAMSIZ
 4

	)

200 
	#GRPNAMSIZ
 6

	)

201 
	#CAPTABMAX
 9

	)

203 
	#Fœgs_TOG
 1

	)

204 
	#Fœgs_SET
 2

	)

205 
	#Fœgs_OFF
 3

	)

214 
	#Võw_CPUSUM
 0x8000

	)

215 
	#Võw_LOADAV
 0x4000

	)

216 
	#Võw_STATES
 0x2000

	)

217 
	#Võw_MEMORY
 0x1000

	)

219 
	#Show_COLORS
 0x0800

	)

220 
	#Show_HIBOLD
 0x0400

	)

221 
	#Show_HICOLS
 0x0200

	)

222 
	#Show_HIROWS
 0x0100

	)

223 
	#Show_CMDLIN
 0x0080

	)

224 
	#Show_CTIMES
 0x0040

	)

225 
	#Show_IDLEPS
 0x0020

	)

226 
	#Q§t_NORMAL
 0x0010

	)

228 
	#VISIBLE_tsk
 0x0008

	)

229 
	#NEWFRAM_cwo
 0x0004

	)

230 
	#EQUWINS_cwo
 0x0002

	)

232 
	#Êag_unu£d
 0x0001

	)

235 
	#FLGSOFF_cwo
 
EQUWINS_cwo
 | 
NEWFRAM_cwo


	)

238 
	#DEF_WINFLGS
 ( 
Võw_LOADAV
 | 
Võw_STATES
 | 
Võw_CPUSUM
 | 
Võw_MEMORY
 | \

239 
Show_HIBOLD
 | 
Show_HIROWS
 | 
Show_IDLEPS
 | 
Q§t_NORMAL
 | 
VISIBLE_tsk
 )

	)

242 
	#CHKw
(
q
,
f
Ë()(q->
wöÊags
 & (f))

	)

243 
	#TOGw
(
q
,
f
Ëq->
wöÊags
 ^(f)

	)

244 
	#SETw
(
q
,
f
Ëq->
wöÊags
 |(f)

	)

245 
	#OFFw
(
q
,
f
Ëq->
wöÊags
 &~(f)

	)

246 
	#VIZCHKc
 (!
Mode_Æts¸
 || 
Curwö
->
wöÊags
 & 
VISIBLE_tsk
) \

247 ? 1 : 
	`wö_w¨n
()

	)

248 
	#VIZTOGc
(
f
Ë(!
Mode_Æts¸
 || 
Curwö
->
wöÊags
 & 
VISIBLE_tsk
) \

249 ? 
	`TOGw
(
Curwö
, 
f
Ë: 
	`wö_w¨n
()

	)

255 
	swö
 {

256 
wö
 *
√xt
,

257 *
¥ev
;

258 *
ˇ±ab
 [
CAPTABMAX
];

259 
wönum
,

260 
wölöes
;

261 
wöÊags
;

262 
PFLG_t
 
¥ocÊags
 [
PFLAGSSIZ
],

263 
s‹tödx
;

264 
maxpÊgs
,

265 
maxèsks
,

266 
maxcmd 
,

267 
summ˛r
,

268 
msgs˛r
,

269 
hód˛r
,

270 
èsk˛r
;

271 
Àn_rown‹m
,

272 
Àn_rowhigh
;

273 
ˇp˛r_sum
 [
CLRBUFSIZ
],

274 
ˇp˛r_msg
 [
CLRBUFSIZ
],

275 
ˇp˛r_pmt
 [
CLRBUFSIZ
],

276 
ˇp˛r_hdr
 [
CLRBUFSIZ
],

277 
ˇp˛r_rowhigh
 [
CLRBUFSIZ
],

278 
ˇp˛r_rown‹m
 [
CLRBUFSIZ
];

279 
gΩ«me
 [
GRPNAMSIZ
],

280 
wö«me
 [
WINNAMSIZ
],

281 
fõldscur
 [
PFLAGSSIZ
],

282 
cﬁumnhdr
 [
SCREENMAX
],

283 
cﬁu§«m
 [
USRNAMSIZ
];

284 } 
	tWIN_t
;

292 
	#RCF_FILEID
 'a'

	)

293 
	#SYS_RCFILE
 "/ëc/t›rc"

	)

297 
	#DEF_FIELDS
 "AEHIOQTWKNMXbcdfgj∂rsuvyz"

	)

299 
	#JOB_FIELDS
 "ABX˚fgjÃ°uvyzMKNHIWOPQD"

	)

300 
	#MEM_FIELDS
 "ANOPQRSTUVXbcdefgjlmyzWHIK"

	)

301 
	#USR_FIELDS
 "DEFGABXchijl›qr°uvyzMKNW"

	)

303 
	#NUL_FIELDS
 "abcdefghijklmn›qr°uvwxyz"

	)

308 
	#CPU_FMTS_JUST1
 "˝u %Lu %Lu %Lu %Lu %Lu"

	)

309 #ifde‡
PRETEND4CPUS


310 
	#CPU_FMTS_MULTI
 
CPU_FMTS_JUST1


	)

312 
	#CPU_FMTS_MULTI
 "˝u%*d %Lu %Lu %Lu %Lu %Lu"

	)

317 #ifde‡
POSIX_CMDLIN


318 
	#CMDLINE_FMTS
 "[%s]"

	)

320 
	#CMDLINE_FMTS
 "–%†)"

	)

325 
	#LOADAV_löe
 "%†-%s\n"

	)

326 
	#LOADAV_löe_Æt
 "%s\06 -%s\n"

	)

327 
	#STATES_löe1
 "Tasks:\03" \

328 " %3u \02tŸÆ,\03 %3u \02ru¬ög,\03 %3u \02¶ìpög,\03 %3u \02°›≥d,\03 %3u \02zombõ\03\n"

	)

329 
	#STATES_löe2x4
 "%s\03" \

330 " %#5.1f%% \02u£r,\03 %#5.1f%% \02sy°em,\03 %#5.1f%% \02ni˚,\03 %#5.1f%% \02idÀ\03\n"

	)

331 
	#STATES_löe2x5
 "%s\03" \

332 " %#5.1f%% \02u£r,\03 %#5.1f%% \02sy°em,\03 %#5.1f%% \02ni˚,\03 %#5.1f%% \02idÀ,\03 %#5.1f%% \02IO-waô\03\n"

	)

333 #ifde‡
CASEUP_SUMMK


334 
	#MEMORY_löe1
 "Mem: \03" \

335 " %8uK \02tŸÆ,\03 %8uK \02u£d,\03 %8uK \02‰ì,\03 %8uK \02buf„rs\03\n"

	)

336 
	#MEMORY_löe2
 "Swap:\03" \

337 " %8uK \02tŸÆ,\03 %8uK \02u£d,\03 %8uK \02‰ì,\03 %8uK \02ˇched\03\n"

	)

339 
	#MEMORY_löe1
 "Mem: \03" \

340 " %8uk \02tŸÆ,\03 %8uk \02u£d,\03 %8uk \02‰ì,\03 %8uk \02buf„rs\03\n"

	)

341 
	#MEMORY_löe2
 "Swap:\03" \

342 " %8uk \02tŸÆ,\03 %8uk \02u£d,\03 %8uk \02‰ì,\03 %8uk \02ˇched\03\n"

	)

347 
	#KEYS_hñp
 \

371 ""

	)

374 
	#KEYS_hñp_un£cuªd
 \

377 ""

	)

384 
	#FIELDS_cuºít
 \

386 ""

	)

391 
	#FIELDS_xåa
 \

406 ""

	)

415 
	#SORT_fõlds
 \

417 ""

	)

422 
	#SORT_xåa
 \

436 ""

	)

440 
	#COLOR_hñp
 \

464 ""

	)

468 
	#WINDOWS_hñp
 \

493 ""

	)

572 #i‡
USRNAMSIZ
 < 
GETBUFSIZ


	@uptime.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"¥oc/wh©time.h
"

4 
	~"¥oc/vîsi⁄.h
"

6 
	$maö
(
¨gc
, *
¨gv
[]) {

7 if(
¨gc
 == 1) {

8 
	`¥öt_u±ime
();

11 if((
¨gc
 =2Ë&& (!
	`°rcmp
(
¨gv
[1], "-V"))) {

12 
	`di•œy_vîsi⁄
();

15 
	`Ârötf
(
°dîr
, "usage: uptime [-V]\n -V display version\n");

17 
	}
}

	@vmstat.c

1 
	#PROGNAME
 "vm°©"

	)

20 
	~"¥oc/sysöfo.h
"

21 
	~"¥oc/vîsi⁄.h
"

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<˘y≥.h
>

25 
	~<°rög.h
>

26 
	~<as£π.h
>

27 
	~<f˙é.h
>

28 
	~<limôs.h
>

29 
	~<uni°d.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/io˘l.h
>

32 
	~<sys/dú.h
>

33 
	~<dúít.h
>

35 
	#NDEBUG
 !
DEBUG


	)

37 
	#BUFFSIZE
 8192

	)

38 
	#FALSE
 0

	)

39 
	#TRUE
 1

	)

41 
	gbuff
[
BUFFSIZE
];

43 
	tjiff
;

45 
	ga_›ti⁄
;

50 
	$ußge
() {

51 
	`Ârötf
(
°dîr
,"ußge: %†[-V] [-n] [dñay [cou¡]]\n",
PROGNAME
);

52 
	`Ârötf
(
°dîr
," -VÖrints version.\n");

53 
	`Ârötf
(
°dîr
," -n causesÅhe headersÇotÅo beÑeprintedÑegularly.\n");

54 
	`Ârötf
(
°dîr
," -aÖrint inactive/activeÖage stats.\n");

55 
	`Ârötf
(
°dîr
," delay isÅhe delay between updates in seconds. \n");

56 
	`Ârötf
(
°dîr
," count isÅheÇumber of updates.\n");

57 
	`exô
(
EXIT_FAILURE
);

58 
	}
}

60 
	$¸ash
(c⁄° *
fûíame
) {

61 
	`≥º‹
(
fûíame
);

62 
	`exô
(
EXIT_FAILURE
);

63 
	}
}

65 
	$wöhi
() {

66 
wösize
 
wö
;

67 
rows
 = 24;

69 i‡(
	`io˘l
(1, 
TIOCGWINSZ
, &
wö
Ë!-1 && wö.
ws_row
 > 0)

70 
rows
 = 
wö
.
ws_row
;

72  
rows
;

73 
	}
}

76 
	$showhódî
(){

77 
	`¥ötf
("%8s%28s%10s%12s%11s%9s\n",

79 
	`¥ötf
("%2s %2s %2s %6s %6s %6s %6s %4s %4s %5s %5s %4s %5s %2s %2s %2s\n",

81 
a_›ti⁄
?"inact":"buff",á_option?"active":"cache",

84 
	}
}

86 
	$gë°©
(
jiff
 *
cu£
, jif‡*
ci˚
, jif‡*
csys
, jif‡*
cide
, jif‡*
ciow
,

87 *
pö
, *
pout
, *
s_ö
, *
sout
,

88 *
ôŸ
, *
i1
, *
˘
) {

89 
Sèt
;

90 
√ed_exåa_fûe
 = 0;

91 * 
b
;

92 
buff
[
BUFFSIZE
-1] = 0;

94 if(
Sèt
){

95 
	`l£ek
(
Sèt
, 0L, 
SEEK_SET
);

97 
Sèt
 = 
	`›í
("/¥oc/°©", 
O_RDONLY
, 0);

98 if(
Sèt
 =-1Ë
	`¸ash
("/proc/stat");

100 
	`ªad
(
Sèt
,
buff
,
BUFFSIZE
-1);

101 *
ôŸ
 = 0;

102 *
i1
 = 1;

103 *
ciow
 = 0;

105 
b
 = 
	`°r°r
(
buff
, "cpu ");

106 if(
b
Ë
	`ssˇnf
(b, "˝u %Lu %Lu %Lu %Lu %Lu", 
cu£
, 
ci˚
, 
csys
, 
cide
, 
ciow
);

108 
b
 = 
	`°r°r
(
buff
, "page ");

109 if(
b
Ë
	`ssˇnf
(b, "∑gê%u %u", 
pö
, 
pout
);

110 
√ed_exåa_fûe
 = 1;

112 
b
 = 
	`°r°r
(
buff
, "swap ");

113 if(
b
Ë
	`ssˇnf
(b, "sw≠ %u %u", 
s_ö
, 
sout
);

114 
√ed_exåa_fûe
 = 1;

116 
b
 = 
	`°r°r
(
buff
, "intr ");

117 if(
b
Ë
	`ssˇnf
(b, "öå %u %u", 
ôŸ
, 
i1
);

119 
b
 = 
	`°r°r
(
buff
, "ctxt ");

120 if(
b
Ë
	`ssˇnf
(b, "˘xà%u", 
˘
);

122 if(
√ed_exåa_fûe
){

123 
	`vmöfo
();

124 *
pö
 = 
vm_pgpgö
;

125 *
pout
 = 
vm_pgpgout
;

126 *
s_ö
 = 
vm_pswpö
;

127 *
sout
 = 
vm_pswpout
;

129 
	}
}

131 
	$gëru¬îs
(*
ru¬ög
, *
blocked
,

132 *
sw≠≥d
) {

133 
dúe˘
 *
ít
;

134 
fûíame
[80];

135 
fd
;

136 
size
;

137 
c
;

138 
DIR
 *
¥oc
;

140 *
ru¬ög
=0;

141 *
blocked
=0;

142 *
sw≠≥d
=0;

144 i‡((
¥oc
=
	`›ídú
("/¥oc"))==
NULL
Ë
	`¸ash
("/proc");

146 (
ít
=
	`ªaddú
(
¥oc
))) {

147 i‡(
	`isdigô
(
ít
->
d_«me
[0])) {

148 
	`•rötf
(
fûíame
, "/¥oc/%s/°©", 
ít
->
d_«me
);

149 i‡((
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
, 0)) != -1) {

150 
	`ªad
(
fd
,
buff
,
BUFFSIZE
-1);

151 
	`ssˇnf
(

152 
buff
,

157 &
c
,

158 &
size


160 
	`˛o£
(
fd
);

162 i‡(
c
=='R') {

163 i‡(
size
>0Ë(*
ru¬ög
)++;

164 (*
sw≠≥d
)++;

166 i‡(
c
=='D') {

167 i‡(
size
>0Ë(*
blocked
)++;

168 (*
sw≠≥d
)++;

173 
	`˛o£dú
(
¥oc
);

178 (*
ru¬ög
)--;

180 
	}
}

185 
	$maö
(
¨gc
, *
¨gv
[]) {

187 c⁄° 
f‹m©
[]="%2u %2u %2u %6u %6u %6u %6u %4u %4u %5u %5u %4u %5u %2u %2u %2u\n";

188 
height
=22;

190 
¨gs
[2]={0,0};

192 
m‹ehódîs
=
TRUE
;

193 
tog
=0;

194 
i
,
hz
;

195 
ru¬ög
,
blocked
,
sw≠≥d
;

196 
jiff
 
˝u_u£
[2], 
˝u_nic
[2], 
˝u_sys
[2], 
˝u_idl
[2], 
˝u_iow
[2];

197 
jiff
 
du£
,
dsys
,
didl
,
Div
,
divo2
;

198 
pgpgö
[2], 
pgpgout
[2], 
pswpö
[2], 
pswpout
[2];

199 
öãr
[2],
ticks
[2],
˘xt
[2];

200 
≥r
=0, 
≥ro2
;

201 
num
=0;

202 
kb_≥r_∑ge
 = 
	`sysc⁄f
(
_SC_PAGESIZE
) / 1024;

204 
	`£éöebuf
(
°dout
);

205 
¨gc
=0;

206 
≥r
=1;

207 
num
=0;

208 
¨gv
++;*argv;argv++) {

209 i‡('-' ==(**
¨gv
)) {

210 *(++(*
¨gv
))) {

212 
	`di•œy_vîsi⁄
();

213 
	`exô
(0);

216 
a_›ti⁄
=1;

220 
m‹ehódîs
=
FALSE
;

224 
	`ußge
();

227 
¨gc
++;

228 
¨gc
) {

230 i‡((
≥r
 = 
	`©oi
(*
¨gv
)) == 0)

231 
	`ußge
();

232 
num
 = 
ULONG_MAX
;

235 
num
 = 
	`©ﬁ
(*
¨gv
);

238 
	`ußge
();

243 i‡(
m‹ehódîs
) {

244 
tmp
=
	`wöhi
()-3;

245 
height
=((
tmp
>0)?tmp:22);

248 
≥ro2
=(
≥r
/2);

249 
	`showhódî
();

251 
	`gëru¬îs
(&
ru¬ög
,&
blocked
,&
sw≠≥d
);

252 
	`memöfo
();

253 
	`gë°©
(
˝u_u£
,
˝u_nic
,
˝u_sys
,
˝u_idl
,
˝u_iow
,

254 
pgpgö
,
pgpgout
,
pswpö
,
pswpout
,

255 
öãr
,
ticks
,
˘xt
);

256 
du£
*
˝u_u£
 + *
˝u_nic
;

257 
dsys
*
˝u_sys
 + *
˝u_iow
;

258 
didl
*
˝u_idl
;

259 
Div

du£
+
dsys
+
didl
;

260 
hz
=
Hîtz
;

261 
divo2

Div
/2UL;

262 
	`¥ötf
(
f‹m©
,

263 
ru¬ög
,
blocked
,
sw≠≥d
,

264 
kb_sw≠_u£d
,
kb_maö_‰ì
,

265 
a_›ti⁄
?
kb_öa˘ive
:
kb_maö_buf„rs
,

266 
a_›ti⁄
?
kb_a˘ive
:
kb_maö_ˇched
,

267 ()–(*
pswpö
 * 
kb_≥r_∑ge
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

268 ()–(*
pswpout
 * 
kb_≥r_∑ge
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

269 ()–(*
pgpgö
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

270 ()–(*
pgpgout
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

271 ()–(*
öãr
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

272 ()–(*
˘xt
 * 
hz
 + 
divo2
Ë/ 
Div
 ),

273 ()–(100*
du£
 + 
divo2
Ë/ 
Div
 ),

274 ()–(100*
dsys
 + 
divo2
Ë/ 
Div
 ),

275 ()–(100*
didl
 + 
divo2
Ë/ 
Div
 )

278 
i
=1;i<
num
;i++) {

279 
	`¶ìp
(
≥r
);

280 i‡(
m‹ehódîs
 && ((
i
%
height
)==0)Ë
	`showhódî
();

281 
tog
= !tog;

283 
	`gëru¬îs
(&
ru¬ög
,&
blocked
,&
sw≠≥d
);

284 
	`memöfo
();

285 
	`gë°©
(
˝u_u£
+
tog
,
˝u_nic
+tog,
˝u_sys
+tog,
˝u_idl
+tog,
˝u_iow
+tog,

286 
pgpgö
+
tog
,
pgpgout
+tog,
pswpö
+tog,
pswpout
+tog,

287 
öãr
+
tog
,
ticks
+tog,
˘xt
+tog);

288 
du£

˝u_u£
[
tog
]-˝u_u£[!tog] + 
˝u_nic
[tog]-cpu_nic[!tog];

289 
dsys

˝u_sys
[
tog
]-˝u_sys[!tog] + 
˝u_iow
[tog]-cpu_iow[!tog];

290 
didl

˝u_idl
[
tog
]-cpu_idl[!tog];

292 if(
˝u_idl
[
tog
]<˝u_idl[!tog]Ë
didl
=0;

293 
Div

du£
+
dsys
+
didl
;

294 
divo2

Div
/2UL;

295 
	`¥ötf
(
f‹m©
,

296 
ru¬ög
,
blocked
,
sw≠≥d
,

297 
kb_sw≠_u£d
,
kb_maö_‰ì
,

298 
a_›ti⁄
?
kb_öa˘ive
:
kb_maö_buf„rs
,

299 
a_›ti⁄
?
kb_öa˘ive
:
kb_maö_ˇched
,

300 ()––(
pswpö
 [
tog
] -Öswpö [!tog])*
kb_≥r_∑ge
+
≥ro2
 )/
≥r
 ),

301 ()––(
pswpout
[
tog
] -Öswpout[!tog])*
kb_≥r_∑ge
+
≥ro2
 )/
≥r
 ),

302 ()––
pgpgö
 [
tog
] -Ögpgö [!tog] +
≥ro2
 )/
≥r
 ),

303 ()––
pgpgout
[
tog
] -Ögpgout[!tog] +
≥ro2
 )/
≥r
 ),

304 ()––
öãr
 [
tog
] - i¡î [!tog] +
≥ro2
 )/
≥r
 ),

305 ()––
˘xt
 [
tog
] - ctxà[!tog] +
≥ro2
 )/
≥r
 ),

306 ()–(100*
du£
+
divo2
)/
Div
 ),

307 ()–(100*
dsys
+
divo2
)/
Div
 ),

308 ()–(100*
didl
+
divo2
)/
Div
 )

311 
	`exô
(
EXIT_SUCCESS
);

312 
	}
}

	@w.c

6 
	~"¥oc/vîsi⁄.h
"

7 
	~"¥oc/wh©time.h
"

8 
	~"¥oc/ªad¥oc.h
"

9 
	~"¥oc/dev«me.h
"

10 
	~"¥oc/¥o˝s.h
"

11 
	~"¥oc/sysöfo.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<f˙é.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<sys/io˘l.h
>

19 
	~<sys/mm™.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<pwd.h
>

23 
	~<time.h
>

24 
	~<uni°d.h
>

25 
	~<utmp.h
>

26 
	~<loˇÀ.h
>

28 
	gign‹eu£r
 = 0;

29 
¥oc_t
 **
	g¥ocs
;

31 
utmp
 
	tutmp_t
;

33 #ifde‡
W_SHOWFROM


34 
	#FROM_STRING
 "⁄"

	)

36 
	#FROM_STRING
 "off"

	)

40 
	#USERSZ
 ( 
u
->
ut_u£r
)

	)

47 
	$¥öt_ho°
(* 
ho°
, 
Àn
) {

48 *
œ°
;

49 
width
 = 0;

55 i‡(
Àn
 > 16)Üen = 16;

56 
œ°
 = 
ho°
 + 
Àn
;

57  ; 
ho°
 < 
œ°
 ; host++){

58 i‡(
	`i•röt
(*
ho°
) && *host != ' ') {

59 
	`Âutc
(*
ho°
, 
°dout
);

60 ++
width
;

65 if(!
width
){

66 
	`Âutc
('-', 
°dout
);

67 ++
width
;

70 
width
 < 16) {

71 
	`Âutc
(' ', 
°dout
);

72 ++
width
;

74 
	}
}

77 
	$¥öt_time_ivÆ7
(
time_t
 
t
, 
˚¡i_£c
, 
FILE
* 
fout
) {

78 if(()
t
 < ()0){

79 
	`¥ötf
(" ? ");

82 i‡(
t
 >= 48*60*60)

83 
	`Ârötf
(
fout
, " %2ludays", 
t
/(24*60*60));

84 i‡(
t
 >= 60*60)

85 
	`Ârötf
(
fout
, " %2lu:%02um", 
t
/(60*60), () ((t/60)%60));

86 i‡(
t
 > 60)

87 
	`Ârötf
(
fout
, " %2lu:%02u ", 
t
/60, ()Å%60);

89 
	`Ârötf
(
fout
, " %2lu.%02us", 
t
, 
˚¡i_£c
);

90 
	}
}

93 
time_t
 
	$idÀtime
(*
ây
) {

94 
°©
 
sbuf
;

95 i‡(
	`°©
(
ây
, &
sbuf
) != 0)

97  
	`time
(
NULL
Ë- 
sbuf
.
°_©ime
;

98 
	}
}

101 
	$¥öt_logötime
(
time_t
 
logt
, 
FILE
* 
fout
) {

102 
wìkday
[][4] = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" },

103 
m⁄th
 [][4] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",

105 
time_t
 
cuπ
;

106 
tm
 *
logtm
, *
cuπm
;

107 
today
;

109 
cuπ
 = 
	`time
(
NULL
);

110 
cuπm
 = 
	`loˇ…ime
(&
cuπ
);

112 
today
 = 
cuπm
->
tm_yday
;

113 
logtm
 = 
	`loˇ…ime
(&
logt
);

114 i‡(
cuπ
 - 
logt
 > 12*60*60 && 
logtm
->
tm_yday
 !
today
) {

115 i‡(
cuπ
 - 
logt
 > 6*24*60*60)

116 
	`Ârötf
(
fout
, " %02d%3s%02d", 
logtm
->
tm_mday
, 
m⁄th
[logtm->
tm_m⁄
],

117 
logtm
->
tm_yór
 % 100);

119 
	`Ârötf
(
fout
, " %3s%02d ", 
wìkday
[
logtm
->
tm_wday
],Üogtm->
tm_hour
);

121 
	`Ârötf
(
fout
, " %02d:%02d ", 
logtm
->
tm_hour
,Üogtm->
tm_mö
);

123 
	}
}

131 
¥oc_t
 *
	$gë¥oc
(
utmp_t
 *
u
, *
ây
, *
j˝u
, *
found_uçid
) {

132 
löe
;

133 
¥oc_t
 **
p
, *
be°
 = 
NULL
, *
£c⁄dbe°
 = NULL;

134 
uid
 = ~0U;

136 if(!
ign‹eu£r
){

137 
buf
[
UT_NAMESIZE
+1];

138 
∑sswd
 *
∑sswd_d©a
;

139 
	`°∫˝y
(
buf
,
u
->
ut_u£r
,
UT_NAMESIZE
);

140 
buf
[
UT_NAMESIZE
] = '\0';

141 
∑sswd_d©a
 = 
	`gëpw«m
(
buf
);

142 if(!
∑sswd_d©a
Ë 
NULL
;

143 
uid
 = 
∑sswd_d©a
->
pw_uid
;

146 
löe
 = 
	`ây_to_dev
(
ây
);

147 *
j˝u
 = *
found_uçid
 = 0;

148 
p
 = 
¥ocs
; *p;Ö++) {

149 if((**
p
).
pid
 =
u
->
ut_pid
) {

150 *
found_uçid
 = 1;

151 
be°
 = *
p
;

153 if((**
p
).
ây
 !
löe
) ;

154 (*
j˝u
Ë+(**
p
).
utime
 + (**p).
°ime
;

155 
£c⁄dbe°
 = *
p
;

157 if(! (
£c⁄dbe°
 && (**
p
).
°¨t_time
 <= secondbest->start_time) ){

158 
£c⁄dbe°
 = *
p
;

160 if(!
ign‹eu£r
 && 
uid
 !(**
p
).
euid
 && uid !(**p).
ruid
) ;

161 if((**
p
).
pid
 !(**p).
çgid
) ;

162 if(
be°
 && (**
p
).
°¨t_time
 <= best->start_time) ;

163 
be°
 = *
p
;

165  
be°
 ? be° : 
£c⁄dbe°
;

166 
	}
}

170 
	$showöfo
(
utmp_t
 *
u
, 
f‹mty≥
, 
maxcmd
, 
‰om
) {

171 
j˝u
;

172 
ut_pid_found
;

173 
i
;

174 
u«me
[
USERSZ
 + 1] = "",

175 
ây
[5 +  
u
->
ut_löe
 + 1] = "/dev/";

176 
¥oc_t
 *
be°
;

178 
i
=0; i < (
u
->
ut_löe
); i++)

179 i‡(
	`iß um
(
u
->
ut_löe
[
i
]) || (u->ut_line[i]=='/'))

180 
ây
[
i
+5] = 
u
->
ut_löe
[i];

182 
ây
[
i
+5] = '\0';

184 
be°
 = 
	`gë¥oc
(
u
, 
ây
 + 5, &
j˝u
, &
ut_pid_found
);

190 i‡(!
ut_pid_found
)

193 
	`°∫˝y
(
u«me
, 
u
->
ut_u£r
, 
USERSZ
);

194 i‡(
f‹mty≥
) {

195 
	`¥ötf
("%-9.8s%-9.8s", 
u«me
, 
u
->
ut_löe
);

196 i‡(
‰om
)

197 
	`¥öt_ho°
(
u
->
ut_ho°
,  u->ut_host);

198 
	`¥öt_logötime
(
u
->
ut_time
, 
°dout
);

199 i‡(*
u
->
ut_löe
 == ':')

200 
	`¥ötf
(" ?xdm? ");

202 
	`¥öt_time_ivÆ7
(
	`idÀtime
(
ây
), 0, 
°dout
);

203 
	`¥öt_time_ivÆ7
(
j˝u
/
Hîtz
, (j˝u%Hîtz)*(100./Hîtz), 
°dout
);

204 i‡(
be°
) {

205 
p˝u
 = 
be°
->
utime
 + be°->
°ime
;

206 
	`¥öt_time_ivÆ7
(
p˝u
/
Hîtz
, (p˝u%Hîtz)*(100./Hîtz), 
°dout
);

208 
	`¥ötf
(" ? ");

210 
	`¥ötf
("%-9.8s%-9.8s", 
u
->
ut_u£r
, u->
ut_löe
);

211 i‡(
‰om
)

212 
	`¥öt_ho°
(
u
->
ut_ho°
,  u->ut_host);

213 i‡(*
u
->
ut_löe
 == ':')

214 
	`¥ötf
(" ?xdm? ");

216 
	`¥öt_time_ivÆ7
(
	`idÀtime
(
ây
), 0, 
°dout
);

218 
	`Âuts
(" ", 
°dout
);

219 i‡(
be°
) {

220 i‡(
be°
->
cmdlöe
)

221 
	`¥öt_°æi°
(
°dout
, 
be°
->
cmdlöe
, 
maxcmd
);

223 
	`¥ötf
("%*.*s", -
maxcmd
, maxcmd, 
be°
->
cmd
);

225 
	`¥ötf
("-");

227 
	`Âutc
('\n', 
°dout
);

228 
	}
}

231 
	$maö
(
¨gc
, **
¨gv
) {

232 *
u£r
 = 
NULL
;

233 
utmp_t
 *
u
;

234 
wösize
 
wö
;

235 
hódî
=1, 
l⁄gf‹m
=1, 
‰om
=1, 
¨gs
, 
maxcmd
=80, 
ch
;

237 #i‚de‡
W_SHOWFROM


238 
‰om
 = 0;

241 
	`£éoˇÀ
(
LC_ALL
, "");

242 
¨gs
=0; (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "hlusfV")Ë!
EOF
;árgs++)

243 
ch
) {

244 'h': 
hódî
 = 0; ;

245 'l': 
l⁄gf‹m
 = 1; ;

246 's': 
l⁄gf‹m
 = 0; ;

247 'f': 
‰om
 = !from; ;

248 'V': 
	`di•œy_vîsi⁄
(); 
	`exô
(0);

249 'u': 
ign‹eu£r
 = 1; ;

251 
	`¥ötf
("usage: w -hlsufV [user]\n"

257 " -V di•œy vîsi⁄\n", 
FROM_STRING
);

258 
	`exô
(1);

261 i‡((
¨gv
[
›töd
]))

262 
u£r
 = (
¨gv
[
›töd
]);

264 i‡(
	`io˘l
(1, 
TIOCGWINSZ
, &
wö
Ë!-1 && wö.
ws_cﬁ
 > 0)

265 
maxcmd
 = 
wö
.
ws_cﬁ
;

266 i‡(
maxcmd
 < 71) {

267 
	`Ârötf
(
°dîr
, "%d cﬁum¿wödow i†toÿ«ºow\n", 
maxcmd
);

268 
	`exô
(1);

270 
maxcmd
 -29 + (
‰om
 ? 16 : 0Ë+ (
l⁄gf‹m
 ? 20 : 0);

271 i‡(
maxcmd
 < 3)

272 
	`Ârötf
(
°dîr
, "w¨nög: s¸ì¿width %d sub›timÆ.\n", 
wö
.
ws_cﬁ
);

274 
¥ocs
 = 
	`ªad¥o˘ab
(
PROC_FILLCOM
 | 
PROC_FILLUSR
);

276 i‡(
hódî
) {

277 
	`¥öt_u±ime
();

278 
	`¥ötf
("USER TTY ");

279 i‡(
‰om
)

280 
	`¥ötf
("FROM ");

281 i‡(
l⁄gf‹m
)

282 
	`¥ötf
(" LOGIN@ IDLE JCPU PCPU WHAT\n");

284 
	`¥ötf
(" IDLE WHAT\n");

287 
	`utm≤ame
(
UTMP_FILE
);

288 
	`£tuã¡
();

289 (
u
=
	`gëuã¡
())) {

290 i‡(
u
->
ut_ty≥
 =
USER_PROCESS
 &&

291 (
u£r
 ? !
	`°∫cmp
(
u
->
ut_u£r
, u£r, 
USERSZ
) : *u->ut_user))

292 
	`showöfo
(
u
, 
l⁄gf‹m
, 
maxcmd
, 
‰om
);

294 
	`íduã¡
();

297 
	}
}

	@watch.c

12 
	#VERSION
 "0.2.0"

	)

14 
	~<˘y≥.h
>

15 
	~<gë›t.h
>

16 
	~<sig«l.h
>

17 
	~<ncur£s.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<sys/io˘l.h
>

22 
	~<time.h
>

23 
	~<uni°d.h
>

24 
	~<loˇÀ.h
>

26 
›ti⁄
 
	gl⁄g›ts
[] =

28 { "dif„ªn˚s", 
›ti⁄Æ_¨gumít
, 0, 'd' },

29 { "hñp", 
no_¨gumít
, 0, 'h' },

30 { "öãrvÆ", 
ªquúed_¨gumít
, 0, 'n' },

31 { "vîsi⁄", 
no_¨gumít
, 0, 'v' },

35 
	gußge
[] = "Usage: %s [-dhnv] [--differences[=cumulative]] [--help] [--interval=<n>] [--version] <command>\n";

38 *
	g¥og«me
;

40 
	gcur£s_°¨ãd
 = 0;

41 
	gheight
=24, 
	gwidth
=80;

42 
	gs¸ìn_size_ch™ged
=0;

43 
	gfú°_s¸ìn
=1;

46 
	#mö
(
x
,
y
Ë((xË> (yË? (yË: (x))

	)

50 
	$do_ußge
()

52 
	`Ârötf
(
°dîr
, 
ußge
, 
¥og«me
);

53 
	`exô
(1);

54 
	}
}

58 
	$do_exô
(
°©us
) {

59 i‡(
cur£s_°¨ãd
)

60 
	`ídwö
();

61 
	`exô
(
°©us
);

62 
	}
}

67 
	$dõ
(
nŸu£d
)

69 ()
nŸu£d
;

70 
	`do_exô
(0);

71 
	}
}

75 
	$wöch_h™dÀr
(
nŸu£d
)

77 ()
nŸu£d
;

78 
s¸ìn_size_ch™ged
 = 1;

79 
	}
}

83 
	$gë_ãrmöÆ_size
()

85 
wösize
 
w
;

86 i‡(
	`io˘l
(2, 
TIOCGWINSZ
, &
w
) == 0)

88 i‡(
w
.
ws_row
 > 0)

89 
height
 = 
w
.
ws_row
;

90 i‡(
w
.
ws_cﬁ
 > 0)

91 
width
 = 
w
.
ws_cﬁ
;

93 
	}
}

97 
	$maö
(
¨gc
, *
¨gv
[])

99 
›tc
;

100 
›ti⁄_dif„ªn˚s
=0,

101 
›ti⁄_dif„ªn˚s_cumuœtive
=0,

102 
›ti⁄_hñp
=0,

103 
›ti⁄_vîsi⁄
=0;

104 
öãrvÆ
=2;

105 *
comm™d
;

106 
comm™d_Àngth
=0;

108 
	`£éoˇÀ
(
LC_ALL
,"");

109 
¥og«me
 = 
¨gv
[0];

111 (
›tc
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "+d::hn:v", 
l⁄g›ts
, (*) 0))

112 !
EOF
)

114 
›tc
)

117 
›ti⁄_dif„ªn˚s
 = 1;

118 i‡(
›èrg
)

119 
›ti⁄_dif„ªn˚s_cumuœtive
 = 1;

122 
›ti⁄_hñp
 = 1;

126 *
°r
;

127 
öãrvÆ
 = 
	`°πﬁ
(
›èrg
, &
°r
, 10);

128 i‡(!*
›èrg
 || *
°r
)

129 
	`do_ußge
();

133 
›ti⁄_vîsi⁄
 = 1;

136 
	`do_ußge
();

141 i‡(
›ti⁄_vîsi⁄
)

143 
	`Ârötf
 (
°dîr
, "%s\n", 
VERSION
);

144 i‡(!
›ti⁄_hñp
)

145 
	`exô
(0);

148 i‡(
›ti⁄_hñp
)

150 
	`Ârötf
(
°dîr
, 
ußge
, 
¥og«me
);

151 
	`Âuts
(" -d, --dif„ªn˚s[=cumuœtive]\thighlighàch™ge†bëwì¿upd©es\n", 
°dîr
);

152 
	`Âuts
("\t\t(cumuœtivêmón†highlightög i†cumuœtive)\n", 
°dîr
);

153 
	`Âuts
(" -h, --hñp\t\t\t\çröà®summ¨y o‡thê›ti⁄s\n", 
°dîr
);

154 
	`Âuts
(" -n, --öãrvÆ=<£c⁄ds>\t\t£c⁄d†tÿwaô bëwì¿upd©es\n", 
°dîr
);

155 
	`Âuts
(" -v, --vîsi⁄\t\t\t\çröàthêvîsi⁄Çumbî\n", 
°dîr
);

156 
	`exô
(0);

159 i‡(
›töd
 >
¨gc
)

160 
	`do_ußge
();

162 
comm™d
 = 
	`°rdup
(
¨gv
[
›töd
++]);

163 
comm™d_Àngth
 = 
	`°æí
(
comm™d
);

164 ;
›töd
<
¨gc
;optind++)

166 *
ídp
;

167 
s
 = 
	`°æí
(
¨gv
[
›töd
]);

168 
comm™d
 = 
	`ªÆloc
(comm™d, 
comm™d_Àngth
+
s
+2);

169 
ídp
 = 
comm™d
 + 
comm™d_Àngth
;

170 *
ídp
 = ' ';

171 
	`mem˝y
(
ídp
+1, 
¨gv
[
›töd
],
s
);

172 
comm™d_Àngth
 +1+
s
;

173 
comm™d
[
comm™d_Àngth
] = '\0';

176 
	`gë_ãrmöÆ_size
();

179 
	`sig«l
(
SIGINT
, 
dõ
);

180 
	`sig«l
(
SIGTERM
, 
dõ
);

181 
	`sig«l
(
SIGHUP
, 
dõ
);

182 
	`sig«l
(
SIGWINCH
, 
wöch_h™dÀr
);

185 
cur£s_°¨ãd
 = 1;

186 
	`öôs¸
();

187 
	`n⁄l
();

188 
	`n€cho
();

189 
	`cbªak
();

193 
time_t
 
t
 = 
	`time
(
NULL
);

194 *
ts
 = 
	`˘ime
(&
t
);

195 
t¶
 = 
	`°æí
(
ts
);

196 *
hódî
;

197 
FILE
 *
p
;

198 
x
, 
y
;

200 i‡(
s¸ìn_size_ch™ged
)

202 
	`gë_ãrmöÆ_size
();

203 
	`ªsizëîm
(
height
, 
width
);

204 
	`˛ór
();

206 
s¸ìn_size_ch™ged
 = 0;

207 
fú°_s¸ìn
 = 1;

212 
	`a•rötf
(&
hódî
, "Every %ds: %.*s",

213 
öãrvÆ
, 
	`mö
(
width
-1, 
comm™d_Àngth
), 
comm™d
);

214 
	`mvadd°r
(0, 0, 
hódî
);

215 i‡(
	`°æí
(
hódî
Ë> (
size_t
)(
width
 - 
t¶
 - 1))

216 
	`mvadd°r
(0, 
width
 - 
t¶
 - 4, "... ");

217 
	`mvadd°r
(0, 
width
 - 
t¶
 + 1, 
ts
);

218 
	`‰ì
(
hódî
);

220 i‡(!(
p
 = 
	`p›í
(
comm™d
, "r")))

222 
	`≥º‹
("popen");

223 
	`do_exô
(2);

226 
y
=2; y<
height
; y++)

228 
eﬁ£í
 = 0, 
èb≥ndög
 = 0;

229 
x
=0; x<
width
; x++)

231 
c
 = ' ';

232 
©å
 = 0;

234 i‡(!
eﬁ£í
)

238 i‡(!
èb≥ndög
)

240 
c
 = 
	`gëc
(
p
);

241 
c
 !
EOF
 && !
	`i•röt
(c) && c != '\n' && c != '\t');

242 i‡(
c
 == '\n')

243 i‡(
x
 == 0) {

244 
x
=-1;

247 
eﬁ£í
 = 1;

248 i‡(
c
 == '\t')

249 
èb≥ndög
 = 1;

250 i‡(
c
 =
EOF
 || c == '\n' || c == '\t')

251 
c
 = ' ';

252 i‡(
èb≥ndög
 && (((
x
 + 1) % 8) == 0))

253 
èb≥ndög
 = 0;

255 
	`move
(
y
, 
x
);

256 i‡(
›ti⁄_dif„ªn˚s
)

258 
ﬁdch
 = 
	`öch
();

259 
ﬁdc
 = 
ﬁdch
 & 
A_CHARTEXT
;

260 
©å
 = !
fú°_s¸ìn


261 && (
c
 !
ﬁdc


262 || (
›ti⁄_dif„ªn˚s_cumuœtive


263 && (
ﬁdch
 & 
A_ATTRIBUTES
)));

265 i‡(
©å
)

266 
	`°™dout
();

267 
	`addch
(
c
);

268 i‡(
©å
)

269 
	`°™díd
();

273 
	`p˛o£
(
p
);

275 
fú°_s¸ìn
 = 0;

276 
	`ª‰esh
();

277 
	`¶ìp
(
öãrvÆ
);

280 
	`ídwö
();

283 
	}
}

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 7

	)

46 
	#NCURSES_VERSION_PATCH
 20090803

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.7"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_SIZE_T


117 
	#NCURSES_SIZE_T
 

	)

122 #unde‡
NCURSES_TPARM_VARARGS


123 
	#NCURSES_TPARM_VARARGS
 1

	)

130 #unde‡
NCURSES_CH_T


131 
	#NCURSES_CH_T
 
chty≥


	)

133 #i‡0 && 
deföed
(
_LP64
)

134 
	tchty≥
;

135 
	tmmask_t
;

137 
	tchty≥
;

138 
	tmmask_t
;

141 
	~<°dio.h
>

142 
	~<°d¨g.h
>

143 #ifde‡
_XOPEN_SOURCE_EXTENDED


144 
	~<°ddef.h
>

159 #unde‡
TRUE


160 
	#TRUE
 1

	)

162 #unde‡
FALSE


163 
	#FALSE
 0

	)

165 
	tNCURSES_BOOL
;

167 #i‡
deföed
(
__˝lu•lus
)

170 
	#NCURSES_BOOL
 
boﬁ


	)

174 #i‡
NCURSES_ENABLE_STDBOOL_H


175 
	~<°dboﬁ.h
>

177 
	#NCURSES_BOOL
 
boﬁ


	)

180 #unde‡
boﬁ


181 
	#boﬁ
 
NCURSES_BOOL


	)

186 #ifde‡
__˝lu•lus


188 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

190 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

197 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

198 
	#WA_NORMAL
 
A_NORMAL


	)

199 
	#WA_STANDOUT
 
A_STANDOUT


	)

200 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

201 
	#WA_REVERSE
 
A_REVERSE


	)

202 
	#WA_BLINK
 
A_BLINK


	)

203 
	#WA_DIM
 
A_DIM


	)

204 
	#WA_BOLD
 
A_BOLD


	)

205 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

206 
	#WA_INVIS
 
A_INVIS


	)

207 
	#WA_PROTECT
 
A_PROTECT


	)

208 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

209 
	#WA_LEFT
 
A_LEFT


	)

210 
	#WA_LOW
 
A_LOW


	)

211 
	#WA_RIGHT
 
A_RIGHT


	)

212 
	#WA_TOP
 
A_TOP


	)

213 
	#WA_VERTICAL
 
A_VERTICAL


	)

216 
	#COLOR_BLACK
 0

	)

217 
	#COLOR_RED
 1

	)

218 
	#COLOR_GREEN
 2

	)

219 
	#COLOR_YELLOW
 3

	)

220 
	#COLOR_BLUE
 4

	)

221 
	#COLOR_MAGENTA
 5

	)

222 
	#COLOR_CYAN
 6

	)

223 
	#COLOR_WHITE
 7

	)

227 #i‡0 || 
NCURSES_REENTRANT


228 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

229 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

231 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

234 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

237 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

238 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

239 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

240 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

241 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

242 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

243 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

244 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

245 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

246 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

247 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

248 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

249 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

250 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

251 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

252 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

253 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

254 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

256 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

257 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

258 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

259 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

260 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

261 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

262 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

268 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

269 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

270 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

271 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

272 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

273 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

274 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

282 
	#ACS_BSSB
 
ACS_ULCORNER


	)

283 
	#ACS_SSBB
 
ACS_LLCORNER


	)

284 
	#ACS_BBSS
 
ACS_URCORNER


	)

285 
	#ACS_SBBS
 
ACS_LRCORNER


	)

286 
	#ACS_SBSS
 
ACS_RTEE


	)

287 
	#ACS_SSSB
 
ACS_LTEE


	)

288 
	#ACS_SSBS
 
ACS_BTEE


	)

289 
	#ACS_BSSS
 
ACS_TTEE


	)

290 
	#ACS_BSBS
 
ACS_HLINE


	)

291 
	#ACS_SBSB
 
ACS_VLINE


	)

292 
	#ACS_SSSS
 
ACS_PLUS


	)

294 #unde‡
ERR


295 
	#ERR
 (-1)

	)

297 #unde‡
OK


298 
	#OK
 (0)

	)

301 
	#_SUBWIN
 0x01

	)

302 
	#_ENDLINE
 0x02

	)

303 
	#_FULLWIN
 0x04

	)

304 
	#_SCROLLWIN
 0x08

	)

305 
	#_ISPAD
 0x10

	)

306 
	#_HASMOVED
 0x20

	)

307 
	#_WRAPPED
 0x40

	)

313 
	#_NOCHANGE
 -1

	)

319 
	#_NEWINDEX
 -1

	)

321 
s¸ìn
 
	tSCREEN
;

322 
_wö_°
 
	tWINDOW
;

324 
chty≥
 
	t©å_t
;

326 #ifde‡
_XOPEN_SOURCE_EXTENDED


329 #ifde‡
mbÀn


330 #unde‡
mbÀn


332 
	~<libutf8.h
>

336 
	~<wch¨.h
>

340 
	twch¨_t
;

344 
	twöt_t
;

353 
	#CCHARW_MAX
 5

	)

356 
©å_t
 
	g©å
;

357 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

359 #unde‡
NCURSES_EXT_COLORS


360 
	#NCURSES_EXT_COLORS
 20090803

	)

361 
	gext_cﬁ‹
;

364 
	tcch¨_t
;

368 #i‡!
NCURSES_OPAQUE


369 
	gld©
;

371 
	s_wö_°


373 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

376 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

377 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

379 
	g_Êags
;

382 
©å_t
 
	g_©ås
;

383 
chty≥
 
	g_bkgd
;

386 
boﬁ
 
	g_nŸimeout
;

387 
boﬁ
 
	g_˛ór
;

388 
boﬁ
 
	g_Àaveok
;

389 
boﬁ
 
	g_s¸ﬁl
;

390 
boﬁ
 
	g_idlok
;

391 
boﬁ
 
	g_idcok
;

392 
boﬁ
 
	g_immed
;

393 
boﬁ
 
	g_sync
;

394 
boﬁ
 
	g_u£_key∑d
;

395 
	g_dñay
;

397 
ld©
 *
	g_löe
;

400 
NCURSES_SIZE_T
 
	g_ªgt›
;

401 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

404 
	g_∑rx
;

405 
	g_∑ry
;

406 
WINDOW
 *
	g_∑ª¡
;

409 
	spd©


411 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

412 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

413 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

414 } 
	g_∑d
;

416 
NCURSES_SIZE_T
 
	g_yoff£t
;

418 #ifde‡
_XOPEN_SOURCE_EXTENDED


419 
cch¨_t
 
	g_bkg∫d
;

421 
	g_cﬁ‹
;

431 #ifde‡
NCURSES_WGETCH_EVENTS


432 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

434 
	#NCURSES_EVENT_VERSION
 1

	)

440 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

441 
	#_NC_EVENT_FILE
 2

	)

442 
	#_NC_EVENT_FILE_READABLE
 2

	)

444 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

445 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

450 
	gty≥
;

453 
	gtimeout_m£c
;

456 
	gÊags
;

457 
	gfd
;

458 
	gªsu…
;

459 } 
	g„v
;

460 } 
	gd©a
;

461 } 
	t_nc_evít
;

465 
	gcou¡
;

466 
	gªsu…_Êags
;

467 
_nc_evít
 *
	gevíts
[1];

468 } 
	t_nc_evíéi°
;

470 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

471 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

483 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

484 
	#__©åibuã__
(
p
Ë

	)

495 #i‚de‡
GCC_PRINTFLIKE


496 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

497 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

499 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

503 #i‚de‡
GCC_SCANFLIKE


504 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

505 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

507 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

511 #i‚def 
GCC_NORETURN


512 
	#GCC_NORETURN


	)

515 #i‚def 
GCC_UNUSED


516 
	#GCC_UNUSED


	)

523 (*
	gNCURSES_OUTC
)();

532 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

533 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

534 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

535 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

536 
NCURSES_EXPORT
(Ë
add°r
 (const *);

537 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

538 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

539 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

540 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

541 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

542 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

543 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

544 
NCURSES_EXPORT
(Ë
baudøã
 ();

545 
NCURSES_EXPORT
(Ë
bìp
 ();

546 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

547 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

548 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

549 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

550 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

551 
NCURSES_EXPORT
(Ë
cbªak
 ();

552 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

553 
NCURSES_EXPORT
(Ë
˛ór
 ();

554 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

555 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

556 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

557 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

558 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

559 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

560 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

561 
NCURSES_EXPORT
(Ë
curs_£t
 ();

562 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

563 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

564 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

565 
NCURSES_EXPORT
(Ë
dñch
 ();

566 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

567 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

568 
NCURSES_EXPORT
(Ë
dñëñn
 ();

569 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

570 
NCURSES_EXPORT
(Ë
doupd©e
 ();

571 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

572 
NCURSES_EXPORT
(Ë
echo
 ();

573 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

574 
NCURSES_EXPORT
(Ë
îa£
 ();

575 
NCURSES_EXPORT
(Ë
ídwö
 ();

576 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

577 
NCURSES_EXPORT
(Ë
fûãr
 ();

578 
NCURSES_EXPORT
(Ë
Êash
 ();

579 
NCURSES_EXPORT
(Ë
Êushöp
 ();

580 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

581 
NCURSES_EXPORT
(Ë
gëch
 ();

582 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

583 
NCURSES_EXPORT
(Ë
gë°r
 (*);

584 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

585 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

586 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

587 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

588 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

589 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

590 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

591 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

592 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

593 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

594 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

595 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

596 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

597 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

598 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

599 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

600 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

601 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

602 
NCURSES_EXPORT
(Ë
ö£π 
 ();

603 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

604 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

605 
NCURSES_EXPORT
(Ë
ö°r
 (*);

606 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

607 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

608 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

609 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

610 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

611 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

613 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

614 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

615 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

616 
NCURSES_EXPORT
(Ë
move
 (, );

617 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

618 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

619 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

620 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

621 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

622 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

623 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

624 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

625 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

626 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

627 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

628 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

629 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

630 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

631 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

632 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

633 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

634 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

635 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

636 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

637 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

638 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

639 
GCC_PRINTFLIKE
(3,4);

640 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

641 
GCC_SCANFLIKE
(3,4);

642 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

643 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

644 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

645 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

646 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

647 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

648 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

649 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

650 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

651 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

652 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

653 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

654 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

655 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

657 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

658 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

659 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

660 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

661 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

662 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

663 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

664 
GCC_PRINTFLIKE
(4,5);

665 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

666 
GCC_SCANFLIKE
(4,5);

667 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

668 
NCURSES_EXPORT
(Ë
«pms
 ();

669 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

670 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

671 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

672 
NCURSES_EXPORT
(Ë
∆
 ();

673 
NCURSES_EXPORT
(Ë
nocbªak
 ();

674 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

675 
NCURSES_EXPORT
(Ë
n€cho
 ();

676 
NCURSES_EXPORT
(Ë
n⁄l
 ();

677 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

678 
NCURSES_EXPORT
(Ë
n‹aw
 ();

679 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

681 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

682 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

683 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

684 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

685 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

686 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

687 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

688 
GCC_PRINTFLIKE
(1,2);

689 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

690 
NCURSES_EXPORT
(Ë
qiÊush
 ();

691 
NCURSES_EXPORT
(Ë
øw
 ();

692 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

693 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

694 
NCURSES_EXPORT
(Ë
ª£ây
 ();

695 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

696 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

697 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

698 
NCURSES_EXPORT
(Ë
ßvëty
 ();

699 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

700 
GCC_SCANFLIKE
(1,2);

701 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

702 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

703 
NCURSES_EXPORT
(Ë
s¸l
 ();

704 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

705 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

706 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

707 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

708 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

709 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

710 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

711 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

712 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

713 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

714 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

715 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

716 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

717 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

718 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

719 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

720 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

721 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

722 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

723 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

724 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

725 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

726 
NCURSES_EXPORT
(Ë
°™dout
 ();

727 
NCURSES_EXPORT
(Ë
°™díd
 ();

728 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

729 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

730 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

731 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

732 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

733 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

734 
NCURSES_EXPORT
(Ë
timeout
 ();

735 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

736 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

737 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

738 
NCURSES_EXPORT
(Ë
ungëch
 ();

739 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

740 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

741 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

742 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

743 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

744 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

745 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

746 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

747 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

748 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

749 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

750 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

751 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

752 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

753 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

754 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

755 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

756 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

757 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

758 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

759 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

760 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

761 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

762 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

763 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

764 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

765 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

766 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

767 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

768 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

769 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

770 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

771 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

772 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

773 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

774 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

775 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

776 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

777 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

778 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

779 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

780 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

781 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

783 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

785 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

786 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

787 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

788 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

790 
GCC_PRINTFLIKE
(2,3);

791 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

792 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

794 
GCC_SCANFLIKE
(2,3);

795 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

796 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

797 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

798 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

800 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

801 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

803 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

808 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

809 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

810 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

811 
NCURSES_EXPORT
(Ë
puç
 (const *);

813 #i‡
NCURSES_TPARM_VARARGS


814 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

816 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

817 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

823 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

824 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

825 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

826 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

827 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

828 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

829 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

830 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

831 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

836 #i‚de‡
_XOPEN_SOURCE_EXTENDED


837 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

844 #unde‡
NCURSES_EXT_FUNCS


845 
	#NCURSES_EXT_FUNCS
 20090803

	)

846 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

847 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

848 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

849 
NCURSES_EXPORT
(*Ë
keybound
 (, );

850 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

851 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

852 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

853 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

854 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

855 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

856 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

857 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

858 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

859 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

860 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

861 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

862 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

863 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

864 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

865 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

866 
NCURSES_EXPORT
(Ë
nofûãr
();

872 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

873 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

874 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

875 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

876 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

877 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

878 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

879 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

880 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

881 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

882 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

883 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

886 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

894 #unde‡
NCURSES_SP_FUNCS


895 
	#NCURSES_SP_FUNCS
 20090803

	)

896 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

899 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

900 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

902 
NCURSES_EXPORT
(
SCREEN
*Ë
√w_¥es¸
();

904 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

905 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

906 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

907 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

908 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

909 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

910 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

911 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

912 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

913 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

914 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

915 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

916 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

917 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

918 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

919 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

920 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

921 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
)(
SCREEN
*, );

922 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

923 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

924 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

925 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

926 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

928 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

934 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

935 
NCURSES_EXPORT
(
SCREEN
*Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

936 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

945 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

951 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

952 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

954 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

957 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

958 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

959 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

962 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

977 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

980 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
)(
SCREEN
*, const *);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

985 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

993 #unde‡
NCURSES_SP_FUNCS


994 
	#NCURSES_SP_FUNCS
 0

	)

995 
	#NCURSES_SP_NAME
(
«me
Ë
	)
«me

996 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1001 
	#NCURSES_ATTR_SHIFT
 8

	)

1002 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1004 
	#A_NORMAL
 (1UL - 1UL)

	)

1005 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1006 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1007 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1008 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1009 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1010 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1011 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1012 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1013 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1014 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1015 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1016 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1017 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1018 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1019 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1020 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1021 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1022 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1034 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1035 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1036 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1037 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1039 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1040 i‡(
	`is_Àaveok
(
√ws¸
)) \

1041 (
y
Ë(
x
) = -1; \

1043 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1045 } 0)

	)

1047 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1048 i‡((
y
Ë=-1 && (
x
) == -1) \

1049 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1051 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1052 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1055 } 0)

	)

1057 #i‚de‡
NCURSES_NOMACROS


1063 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1064 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1066 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1068 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1069 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1070 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1071 
	#¸mode
(Ë
	`cbªak
()

	)

1072 
	#no¸mode
(Ë
	`nocbªak
()

	)

1073 
	#gëtmode
()

	)

1076 #i‡!
NCURSES_OPAQUE


1077 
	#gë©ås
(
wö
Ë((wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1078 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1079 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1080 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1081 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1082 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1083 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1084 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1085 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1088 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1089 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1091 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1092 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1094 #i‡!
NCURSES_OPAQUE


1095 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1096 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

1097 
	`NCURSES_CAST
(, (
wö
)->
_©ås
 = (
©
)))

	)

1099 
	#w©å£t
(
wö
,
©
Ë
	`NCURSES_CAST
(, (wö)->
_©ås
 = (©))

	)

1103 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1105 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1106 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1107 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1109 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1110 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1111 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1112 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1114 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1115 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1116 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1118 #i‡!
NCURSES_OPAQUE


1119 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1122 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1123 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1128 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1129 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1135 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1136 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1137 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1138 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1139 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1140 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1141 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1142 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1143 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1144 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1145 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1146 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1147 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1148 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1149 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1150 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1151 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1152 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1153 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1154 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1155 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1156 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1157 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1158 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1159 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1160 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1161 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1162 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1163 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1164 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1165 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1166 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1167 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1168 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1169 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1170 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1171 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1172 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1173 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1174 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1175 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1176 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1177 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1178 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1184 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1185 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1186 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1187 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1188 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1189 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1190 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1191 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1192 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1193 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1194 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1195 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1196 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1197 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1198 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1199 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1200 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1201 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1202 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1203 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1205 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1206 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1207 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1208 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1209 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1210 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1211 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1212 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1213 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1214 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1215 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1216 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1217 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1218 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1219 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1220 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1221 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1222 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1223 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1224 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1229 #i‡!
NCURSES_OPAQUE


1230 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1233 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1234 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1236 #i‡!
NCURSES_OPAQUE


1237 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1238 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1239 (
wö
)->
_cﬁ‹
 = (
p
), \

1240 
OK
)

	)

1241 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1242 ()((
p
Ë!(*)0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1243 
OK
)

	)

1245 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1246 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1247 ()((
p
Ë!(*)0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1248 
OK
)

	)

1258 
	#vw_¥ötw
 
vw¥ötw


	)

1259 
	#vw_sˇnw
 
vwsˇnw


	)

1265 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1266 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1273 #i‡!
NCURSES_OPAQUE


1274 
	#is_˛óªd
(
wö
Ë((wö)->
_˛ór
)

	)

1275 
	#is_idcok
(
wö
Ë((wö)->
_idcok
)

	)

1276 
	#is_idlok
(
wö
Ë((wö)->
_idlok
)

	)

1277 
	#is_immedok
(
wö
Ë((wö)->
_immed
)

	)

1278 
	#is_key∑d
(
wö
Ë((wö)->
_u£_key∑d
)

	)

1279 
	#is_Àaveok
(
wö
Ë((wö)->
_Àaveok
)

	)

1280 
	#is_nodñay
(
wö
Ë((wö)->
_dñay
 =0)

	)

1281 
	#is_nŸimeout
(
wö
Ë((wö)->
_nŸimeout
)

	)

1282 
	#is_s¸ﬁlok
(
wö
Ë((wö)->
_s¸ﬁl
)

	)

1283 
	#is_syncok
(
wö
Ë((wö)->
_sync
)

	)

1284 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1285 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1299 #i‡
NCURSES_REENTRANT


1301 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1302 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1303 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1304 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1305 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1306 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1307 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1308 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1309 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1310 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1312 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1313 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1314 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1315 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1316 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1317 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1318 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1319 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1320 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1321 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1325 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1326 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1327 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1328 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1329 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1330 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1331 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1332 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1333 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1334 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1350 
	#KEY_CODE_YES
 0400

	)

1351 
	#KEY_MIN
 0401

	)

1352 
	#KEY_BREAK
 0401

	)

1353 
	#KEY_SRESET
 0530

	)

1354 
	#KEY_RESET
 0531

	)

1358 
	#KEY_DOWN
 0402

	)

1359 
	#KEY_UP
 0403

	)

1360 
	#KEY_LEFT
 0404

	)

1361 
	#KEY_RIGHT
 0405

	)

1362 
	#KEY_HOME
 0406

	)

1363 
	#KEY_BACKSPACE
 0407

	)

1364 
	#KEY_F0
 0410

	)

1365 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1366 
	#KEY_DL
 0510

	)

1367 
	#KEY_IL
 0511

	)

1368 
	#KEY_DC
 0512

	)

1369 
	#KEY_IC
 0513

	)

1370 
	#KEY_EIC
 0514

	)

1371 
	#KEY_CLEAR
 0515

	)

1372 
	#KEY_EOS
 0516

	)

1373 
	#KEY_EOL
 0517

	)

1374 
	#KEY_SF
 0520

	)

1375 
	#KEY_SR
 0521

	)

1376 
	#KEY_NPAGE
 0522

	)

1377 
	#KEY_PPAGE
 0523

	)

1378 
	#KEY_STAB
 0524

	)

1379 
	#KEY_CTAB
 0525

	)

1380 
	#KEY_CATAB
 0526

	)

1381 
	#KEY_ENTER
 0527

	)

1382 
	#KEY_PRINT
 0532

	)

1383 
	#KEY_LL
 0533

	)

1384 
	#KEY_A1
 0534

	)

1385 
	#KEY_A3
 0535

	)

1386 
	#KEY_B2
 0536

	)

1387 
	#KEY_C1
 0537

	)

1388 
	#KEY_C3
 0540

	)

1389 
	#KEY_BTAB
 0541

	)

1390 
	#KEY_BEG
 0542

	)

1391 
	#KEY_CANCEL
 0543

	)

1392 
	#KEY_CLOSE
 0544

	)

1393 
	#KEY_COMMAND
 0545

	)

1394 
	#KEY_COPY
 0546

	)

1395 
	#KEY_CREATE
 0547

	)

1396 
	#KEY_END
 0550

	)

1397 
	#KEY_EXIT
 0551

	)

1398 
	#KEY_FIND
 0552

	)

1399 
	#KEY_HELP
 0553

	)

1400 
	#KEY_MARK
 0554

	)

1401 
	#KEY_MESSAGE
 0555

	)

1402 
	#KEY_MOVE
 0556

	)

1403 
	#KEY_NEXT
 0557

	)

1404 
	#KEY_OPEN
 0560

	)

1405 
	#KEY_OPTIONS
 0561

	)

1406 
	#KEY_PREVIOUS
 0562

	)

1407 
	#KEY_REDO
 0563

	)

1408 
	#KEY_REFERENCE
 0564

	)

1409 
	#KEY_REFRESH
 0565

	)

1410 
	#KEY_REPLACE
 0566

	)

1411 
	#KEY_RESTART
 0567

	)

1412 
	#KEY_RESUME
 0570

	)

1413 
	#KEY_SAVE
 0571

	)

1414 
	#KEY_SBEG
 0572

	)

1415 
	#KEY_SCANCEL
 0573

	)

1416 
	#KEY_SCOMMAND
 0574

	)

1417 
	#KEY_SCOPY
 0575

	)

1418 
	#KEY_SCREATE
 0576

	)

1419 
	#KEY_SDC
 0577

	)

1420 
	#KEY_SDL
 0600

	)

1421 
	#KEY_SELECT
 0601

	)

1422 
	#KEY_SEND
 0602

	)

1423 
	#KEY_SEOL
 0603

	)

1424 
	#KEY_SEXIT
 0604

	)

1425 
	#KEY_SFIND
 0605

	)

1426 
	#KEY_SHELP
 0606

	)

1427 
	#KEY_SHOME
 0607

	)

1428 
	#KEY_SIC
 0610

	)

1429 
	#KEY_SLEFT
 0611

	)

1430 
	#KEY_SMESSAGE
 0612

	)

1431 
	#KEY_SMOVE
 0613

	)

1432 
	#KEY_SNEXT
 0614

	)

1433 
	#KEY_SOPTIONS
 0615

	)

1434 
	#KEY_SPREVIOUS
 0616

	)

1435 
	#KEY_SPRINT
 0617

	)

1436 
	#KEY_SREDO
 0620

	)

1437 
	#KEY_SREPLACE
 0621

	)

1438 
	#KEY_SRIGHT
 0622

	)

1439 
	#KEY_SRSUME
 0623

	)

1440 
	#KEY_SSAVE
 0624

	)

1441 
	#KEY_SSUSPEND
 0625

	)

1442 
	#KEY_SUNDO
 0626

	)

1443 
	#KEY_SUSPEND
 0627

	)

1444 
	#KEY_UNDO
 0630

	)

1445 
	#KEY_MOUSE
 0631

	)

1446 
	#KEY_RESIZE
 0632

	)

1447 
	#KEY_EVENT
 0633

	)

1449 
	#KEY_MAX
 0777

	)

1459 #i‡
NCURSES_MOUSE_VERSION
 > 1

1460 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1462 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1465 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1466 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1467 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1468 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1469 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1470 
	#NCURSES_RESERVED_EVENT
 040L

	)

1473 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1474 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1475 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1476 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1477 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1479 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1480 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1481 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1482 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1483 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1485 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1486 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1487 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1488 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1489 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1491 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1492 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1493 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1494 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1495 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1501 #i‡
NCURSES_MOUSE_VERSION
 > 1

1503 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1504 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1505 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1506 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1507 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1509 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1510 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1511 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1512 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1516 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1517 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1518 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1519 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1521 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1522 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1523 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1524 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1528 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1531 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1532 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1533 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1534 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1535 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1536 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1540 
	gid
;

1541 
	gx
, 
	gy
, 
	gz
;

1542 
mmask_t
 
	gb°©e
;

1544 
	tMEVENT
;

1546 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1547 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1548 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1549 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1550 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1551 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1552 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1553 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1555 #i‡
NCURSES_SP_FUNCS


1556 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1557 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1558 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1559 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1560 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1563 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1567 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1568 
NCURSES_EXPORT
(Ë
has_key
 ();

1570 #i‡
NCURSES_SP_FUNCS


1571 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1572 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1577 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1578 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1579 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1580 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1581 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1582 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1583 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1584 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1585 #ifde‡
_XOPEN_SOURCE_EXTENDED


1586 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1587 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1588 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1589 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1591 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1592 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1594 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1595 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1598 
	#TRACE_DISABLE
 0x0000

	)

1599 
	#TRACE_TIMES
 0x0001

	)

1600 
	#TRACE_TPUTS
 0x0002

	)

1601 
	#TRACE_UPDATE
 0x0004

	)

1602 
	#TRACE_MOVE
 0x0008

	)

1603 
	#TRACE_CHARPUT
 0x0010

	)

1604 
	#TRACE_ORDINARY
 0x001F

	)

1605 
	#TRACE_CALLS
 0x0020

	)

1606 
	#TRACE_VIRTPUT
 0x0040

	)

1607 
	#TRACE_IEVENT
 0x0080

	)

1608 
	#TRACE_BITS
 0x0100

	)

1609 
	#TRACE_ICALLS
 0x0200

	)

1610 
	#TRACE_CCALLS
 0x0400

	)

1611 
	#TRACE_DATABASE
 0x0800

	)

1612 
	#TRACE_ATTRS
 0x1000

	)

1614 
	#TRACE_SHIFT
 13

	)

1615 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1617 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1618 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1619 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1620 
	#OPTIMIZE_MVCUR
 0x01

	)

1621 
	#OPTIMIZE_HASHMAP
 0x02

	)

1622 
	#OPTIMIZE_SCROLL
 0x04

	)

1623 
	#OPTIMIZE_ALL
 0xf‡

	)

1626 
	~<un˘æ.h
>

1628 #ifde‡
__˝lu•lus


1630 #i‚de‡
NCURSES_NOMACROS


1633 #unde‡
box


1634 #unde‡
˛ór


1635 #unde‡
îa£


1636 #unde‡
move


1637 #unde‡
ª‰esh


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


63 
£tgª¡
 ();

69 
ídgª¡
 ();

75 
group
 *
gëgª¡
 ();

78 #ifdef 
__USE_SVID


85 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

88 #ifde‡
__USE_GNU


95 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

96 
FILE
 *
__ª°ri˘
 
__f
);

103 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

109 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

111 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


113 #ifde‡
__USE_MISC


116 
	#NSS_BUFLEN_GROUP
 1024

	)

132 #ifde‡
__USE_GNU


133 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

134 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

135 
group
 **
__ª°ri˘
 
__ªsu…
);

142 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

143 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

144 
group
 **
__ª°ri˘
 
__ªsu…
);

150 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
group
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
group
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
group
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
group
 **
__ª°ri˘
 
__ªsu…
);

172 #ifdef 
__USE_BSD


174 
	#__√ed_size_t


	)

175 
	~<°ddef.h
>

178 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

188 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

189 
__gid_t
 *
__groups
, *
__ngroups
);

199 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

203 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/ncurses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 7

	)

46 
	#NCURSES_VERSION_PATCH
 20090803

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.7"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST
 c⁄°

	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_SIZE_T


117 
	#NCURSES_SIZE_T
 

	)

122 #unde‡
NCURSES_TPARM_VARARGS


123 
	#NCURSES_TPARM_VARARGS
 1

	)

130 #unde‡
NCURSES_CH_T


131 
	#NCURSES_CH_T
 
chty≥


	)

133 #i‡0 && 
deföed
(
_LP64
)

134 
	tchty≥
;

135 
	tmmask_t
;

137 
	tchty≥
;

138 
	tmmask_t
;

141 
	~<°dio.h
>

142 
	~<°d¨g.h
>

143 #ifde‡
_XOPEN_SOURCE_EXTENDED


144 
	~<°ddef.h
>

159 #unde‡
TRUE


160 
	#TRUE
 1

	)

162 #unde‡
FALSE


163 
	#FALSE
 0

	)

165 
	tNCURSES_BOOL
;

167 #i‡
deföed
(
__˝lu•lus
)

170 
	#NCURSES_BOOL
 
boﬁ


	)

174 #i‡
NCURSES_ENABLE_STDBOOL_H


175 
	~<°dboﬁ.h
>

177 
	#NCURSES_BOOL
 
boﬁ


	)

180 #unde‡
boﬁ


181 
	#boﬁ
 
NCURSES_BOOL


	)

186 #ifde‡
__˝lu•lus


188 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

190 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

197 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

198 
	#WA_NORMAL
 
A_NORMAL


	)

199 
	#WA_STANDOUT
 
A_STANDOUT


	)

200 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

201 
	#WA_REVERSE
 
A_REVERSE


	)

202 
	#WA_BLINK
 
A_BLINK


	)

203 
	#WA_DIM
 
A_DIM


	)

204 
	#WA_BOLD
 
A_BOLD


	)

205 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

206 
	#WA_INVIS
 
A_INVIS


	)

207 
	#WA_PROTECT
 
A_PROTECT


	)

208 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

209 
	#WA_LEFT
 
A_LEFT


	)

210 
	#WA_LOW
 
A_LOW


	)

211 
	#WA_RIGHT
 
A_RIGHT


	)

212 
	#WA_TOP
 
A_TOP


	)

213 
	#WA_VERTICAL
 
A_VERTICAL


	)

216 
	#COLOR_BLACK
 0

	)

217 
	#COLOR_RED
 1

	)

218 
	#COLOR_GREEN
 2

	)

219 
	#COLOR_YELLOW
 3

	)

220 
	#COLOR_BLUE
 4

	)

221 
	#COLOR_MAGENTA
 5

	)

222 
	#COLOR_CYAN
 6

	)

223 
	#COLOR_WHITE
 7

	)

227 #i‡0 || 
NCURSES_REENTRANT


228 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

229 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

231 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

234 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

237 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

238 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

239 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

240 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

241 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

242 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

243 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

244 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

245 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

246 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

247 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

248 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

249 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

250 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

251 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

252 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

253 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

254 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

256 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

257 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

258 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

259 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

260 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

261 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

262 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

268 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

269 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

270 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

271 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

272 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

273 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

274 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

282 
	#ACS_BSSB
 
ACS_ULCORNER


	)

283 
	#ACS_SSBB
 
ACS_LLCORNER


	)

284 
	#ACS_BBSS
 
ACS_URCORNER


	)

285 
	#ACS_SBBS
 
ACS_LRCORNER


	)

286 
	#ACS_SBSS
 
ACS_RTEE


	)

287 
	#ACS_SSSB
 
ACS_LTEE


	)

288 
	#ACS_SSBS
 
ACS_BTEE


	)

289 
	#ACS_BSSS
 
ACS_TTEE


	)

290 
	#ACS_BSBS
 
ACS_HLINE


	)

291 
	#ACS_SBSB
 
ACS_VLINE


	)

292 
	#ACS_SSSS
 
ACS_PLUS


	)

294 #unde‡
ERR


295 
	#ERR
 (-1)

	)

297 #unde‡
OK


298 
	#OK
 (0)

	)

301 
	#_SUBWIN
 0x01

	)

302 
	#_ENDLINE
 0x02

	)

303 
	#_FULLWIN
 0x04

	)

304 
	#_SCROLLWIN
 0x08

	)

305 
	#_ISPAD
 0x10

	)

306 
	#_HASMOVED
 0x20

	)

307 
	#_WRAPPED
 0x40

	)

313 
	#_NOCHANGE
 -1

	)

319 
	#_NEWINDEX
 -1

	)

321 
s¸ìn
 
	tSCREEN
;

322 
_wö_°
 
	tWINDOW
;

324 
chty≥
 
	t©å_t
;

326 #ifde‡
_XOPEN_SOURCE_EXTENDED


329 #ifde‡
mbÀn


330 #unde‡
mbÀn


332 
	~<libutf8.h
>

336 
	~<wch¨.h
>

340 
	twch¨_t
;

344 
	twöt_t
;

353 
	#CCHARW_MAX
 5

	)

356 
©å_t
 
	g©å
;

357 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

359 #unde‡
NCURSES_EXT_COLORS


360 
	#NCURSES_EXT_COLORS
 20090803

	)

361 
	gext_cﬁ‹
;

364 
	tcch¨_t
;

368 #i‡!
NCURSES_OPAQUE


369 
	gld©
;

371 
	s_wö_°


373 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

376 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

377 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

379 
	g_Êags
;

382 
©å_t
 
	g_©ås
;

383 
chty≥
 
	g_bkgd
;

386 
boﬁ
 
	g_nŸimeout
;

387 
boﬁ
 
	g_˛ór
;

388 
boﬁ
 
	g_Àaveok
;

389 
boﬁ
 
	g_s¸ﬁl
;

390 
boﬁ
 
	g_idlok
;

391 
boﬁ
 
	g_idcok
;

392 
boﬁ
 
	g_immed
;

393 
boﬁ
 
	g_sync
;

394 
boﬁ
 
	g_u£_key∑d
;

395 
	g_dñay
;

397 
ld©
 *
	g_löe
;

400 
NCURSES_SIZE_T
 
	g_ªgt›
;

401 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

404 
	g_∑rx
;

405 
	g_∑ry
;

406 
WINDOW
 *
	g_∑ª¡
;

409 
	spd©


411 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

412 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

413 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

414 } 
	g_∑d
;

416 
NCURSES_SIZE_T
 
	g_yoff£t
;

418 #ifde‡
_XOPEN_SOURCE_EXTENDED


419 
cch¨_t
 
	g_bkg∫d
;

421 
	g_cﬁ‹
;

431 #ifde‡
NCURSES_WGETCH_EVENTS


432 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

434 
	#NCURSES_EVENT_VERSION
 1

	)

440 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

441 
	#_NC_EVENT_FILE
 2

	)

442 
	#_NC_EVENT_FILE_READABLE
 2

	)

444 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

445 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

450 
	gty≥
;

453 
	gtimeout_m£c
;

456 
	gÊags
;

457 
	gfd
;

458 
	gªsu…
;

459 } 
	g„v
;

460 } 
	gd©a
;

461 } 
	t_nc_evít
;

465 
	gcou¡
;

466 
	gªsu…_Êags
;

467 
_nc_evít
 *
	gevíts
[1];

468 } 
	t_nc_evíéi°
;

470 
NCURSES_EXPORT
(Ë
wgëch_evíts
(
WINDOW
 *, 
_nc_evíéi°
 *);

471 
NCURSES_EXPORT
(Ë
wgën°r_evíts
(
WINDOW
 *,*,,
_nc_evíéi°
 *);

483 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

484 
	#__©åibuã__
(
p
Ë

	)

495 #i‚de‡
GCC_PRINTFLIKE


496 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

497 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

499 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

503 #i‚de‡
GCC_SCANFLIKE


504 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

505 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

507 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

511 #i‚def 
GCC_NORETURN


512 
	#GCC_NORETURN


	)

515 #i‚def 
GCC_UNUSED


516 
	#GCC_UNUSED


	)

523 (*
	gNCURSES_OUTC
)();

532 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

533 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

534 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

535 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

536 
NCURSES_EXPORT
(Ë
add°r
 (const *);

537 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

538 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

539 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

540 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

541 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

542 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

543 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

544 
NCURSES_EXPORT
(Ë
baudøã
 ();

545 
NCURSES_EXPORT
(Ë
bìp
 ();

546 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

547 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

548 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

549 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

550 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

551 
NCURSES_EXPORT
(Ë
cbªak
 ();

552 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

553 
NCURSES_EXPORT
(Ë
˛ór
 ();

554 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

555 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

556 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

557 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

558 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

559 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

560 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

561 
NCURSES_EXPORT
(Ë
curs_£t
 ();

562 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

563 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

564 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

565 
NCURSES_EXPORT
(Ë
dñch
 ();

566 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

567 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

568 
NCURSES_EXPORT
(Ë
dñëñn
 ();

569 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

570 
NCURSES_EXPORT
(Ë
doupd©e
 ();

571 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

572 
NCURSES_EXPORT
(Ë
echo
 ();

573 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

574 
NCURSES_EXPORT
(Ë
îa£
 ();

575 
NCURSES_EXPORT
(Ë
ídwö
 ();

576 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

577 
NCURSES_EXPORT
(Ë
fûãr
 ();

578 
NCURSES_EXPORT
(Ë
Êash
 ();

579 
NCURSES_EXPORT
(Ë
Êushöp
 ();

580 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

581 
NCURSES_EXPORT
(Ë
gëch
 ();

582 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

583 
NCURSES_EXPORT
(Ë
gë°r
 (*);

584 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

585 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

586 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

587 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

588 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

589 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

590 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

591 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

592 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

593 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

594 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

595 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

596 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

597 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

598 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

599 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

600 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

601 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

602 
NCURSES_EXPORT
(Ë
ö£π 
 ();

603 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

604 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

605 
NCURSES_EXPORT
(Ë
ö°r
 (*);

606 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

607 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

608 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

609 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

610 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

611 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

612 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

613 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

614 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

615 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

616 
NCURSES_EXPORT
(Ë
move
 (, );

617 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

618 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

619 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

620 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

621 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

622 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

623 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

624 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

625 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

626 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

627 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

628 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

629 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

630 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

631 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

632 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

633 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

634 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

635 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

636 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

637 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

638 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

639 
GCC_PRINTFLIKE
(3,4);

640 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

641 
GCC_SCANFLIKE
(3,4);

642 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

643 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

644 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

645 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

646 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

647 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

648 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

649 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

650 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

651 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

652 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

653 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

654 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

655 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

656 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

657 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

658 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

659 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

660 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

661 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

662 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

663 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

664 
GCC_PRINTFLIKE
(4,5);

665 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

666 
GCC_SCANFLIKE
(4,5);

667 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

668 
NCURSES_EXPORT
(Ë
«pms
 ();

669 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

670 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

671 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

672 
NCURSES_EXPORT
(Ë
∆
 ();

673 
NCURSES_EXPORT
(Ë
nocbªak
 ();

674 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

675 
NCURSES_EXPORT
(Ë
n€cho
 ();

676 
NCURSES_EXPORT
(Ë
n⁄l
 ();

677 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

678 
NCURSES_EXPORT
(Ë
n‹aw
 ();

679 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

680 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

681 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

682 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

683 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

684 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

685 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

686 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

687 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

688 
GCC_PRINTFLIKE
(1,2);

689 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

690 
NCURSES_EXPORT
(Ë
qiÊush
 ();

691 
NCURSES_EXPORT
(Ë
øw
 ();

692 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

693 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

694 
NCURSES_EXPORT
(Ë
ª£ây
 ();

695 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

696 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

697 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

698 
NCURSES_EXPORT
(Ë
ßvëty
 ();

699 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

700 
GCC_SCANFLIKE
(1,2);

701 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

702 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

703 
NCURSES_EXPORT
(Ë
s¸l
 ();

704 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

705 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

706 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

707 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

708 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

709 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

710 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

711 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

712 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

713 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

714 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

715 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

716 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

717 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

718 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

719 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

720 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

721 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

722 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

723 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

724 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

725 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

726 
NCURSES_EXPORT
(Ë
°™dout
 ();

727 
NCURSES_EXPORT
(Ë
°™díd
 ();

728 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

729 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

730 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

731 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

732 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

733 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

734 
NCURSES_EXPORT
(Ë
timeout
 ();

735 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

736 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

737 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

738 
NCURSES_EXPORT
(Ë
ungëch
 ();

739 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

740 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

741 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

742 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

743 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

744 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

745 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

746 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

747 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

748 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

749 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

750 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

751 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

752 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

753 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

754 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

755 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

756 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

757 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

758 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

759 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

760 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

761 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

762 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

763 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

764 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

765 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

766 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

767 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

768 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

769 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

770 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

771 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

772 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

773 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

774 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

775 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

776 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

777 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

778 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

779 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

780 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

781 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

782 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

783 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

785 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

786 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

787 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

788 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

790 
GCC_PRINTFLIKE
(2,3);

791 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

792 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

794 
GCC_SCANFLIKE
(2,3);

795 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

796 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

797 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

798 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

799 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

800 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

801 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

803 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

808 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

809 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

810 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

811 
NCURSES_EXPORT
(Ë
puç
 (const *);

813 #i‡
NCURSES_TPARM_VARARGS


814 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

816 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

817 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

823 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

824 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

825 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

826 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

827 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

828 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

829 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

830 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

831 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

836 #i‚de‡
_XOPEN_SOURCE_EXTENDED


837 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

844 #unde‡
NCURSES_EXT_FUNCS


845 
	#NCURSES_EXT_FUNCS
 20090803

	)

846 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

847 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

848 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

849 
NCURSES_EXPORT
(*Ë
keybound
 (, );

850 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

851 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

852 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

853 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

854 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

855 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

856 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

857 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

858 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

859 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

860 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

861 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

862 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

863 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

864 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

865 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

866 
NCURSES_EXPORT
(Ë
nofûãr
();

872 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

873 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

874 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

875 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

876 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

877 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

878 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

879 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

880 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

881 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

882 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

883 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

886 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

894 #unde‡
NCURSES_SP_FUNCS


895 
	#NCURSES_SP_FUNCS
 20090803

	)

896 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

899 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

900 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

902 
NCURSES_EXPORT
(
SCREEN
*Ë
√w_¥es¸
();

904 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

905 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

906 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

907 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

908 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

909 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

910 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

911 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

912 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

913 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

914 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

915 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

916 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

917 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

918 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

919 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

920 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

921 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
)(
SCREEN
*, );

922 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

923 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

924 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

925 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

926 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

928 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

934 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

935 
NCURSES_EXPORT
(
SCREEN
*Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

936 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

945 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

951 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

952 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

954 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

957 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

958 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

959 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

962 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

977 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

980 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
)(
SCREEN
*, const *);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

985 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

993 #unde‡
NCURSES_SP_FUNCS


994 
	#NCURSES_SP_FUNCS
 0

	)

995 
	#NCURSES_SP_NAME
(
«me
Ë
	)
«me

996 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1001 
	#NCURSES_ATTR_SHIFT
 8

	)

1002 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1004 
	#A_NORMAL
 (1UL - 1UL)

	)

1005 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1006 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1007 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1008 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1009 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1010 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1011 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1012 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1013 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1014 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1015 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1016 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1017 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1018 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1019 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1020 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1021 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1022 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1034 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1035 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1036 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1037 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1039 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1040 i‡(
	`is_Àaveok
(
√ws¸
)) \

1041 (
y
Ë(
x
) = -1; \

1043 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1045 } 0)

	)

1047 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1048 i‡((
y
Ë=-1 && (
x
) == -1) \

1049 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1051 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1052 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1055 } 0)

	)

1057 #i‚de‡
NCURSES_NOMACROS


1063 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1064 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1066 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1068 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1069 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1070 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1071 
	#¸mode
(Ë
	`cbªak
()

	)

1072 
	#no¸mode
(Ë
	`nocbªak
()

	)

1073 
	#gëtmode
()

	)

1076 #i‡!
NCURSES_OPAQUE


1077 
	#gë©ås
(
wö
Ë((wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1078 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1079 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1080 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1081 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1082 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1083 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1084 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1085 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1088 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1089 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1091 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1092 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1094 #i‡!
NCURSES_OPAQUE


1095 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1096 
	#w©å£t
(
wö
,
©
Ë((wö)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(at), \

1097 
	`NCURSES_CAST
(, (
wö
)->
_©ås
 = (
©
)))

	)

1099 
	#w©å£t
(
wö
,
©
Ë
	`NCURSES_CAST
(, (wö)->
_©ås
 = (©))

	)

1103 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1105 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1106 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1107 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1109 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1110 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1111 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1112 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1114 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1115 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1116 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1118 #i‡!
NCURSES_OPAQUE


1119 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (wö)->
_maxy
+1)

	)

1122 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1123 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1128 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1129 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((◊Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1135 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1136 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1137 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1138 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1139 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1140 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1141 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1142 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1143 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1144 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1145 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1146 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1147 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1148 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1149 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1150 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1151 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1152 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1153 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1154 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1155 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1156 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1157 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1158 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1159 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1160 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1161 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1162 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1163 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1164 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1165 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1166 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1167 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1168 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1169 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1170 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1171 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1172 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1173 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1174 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1175 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1176 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1177 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1178 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1184 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1185 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1186 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1187 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1188 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1189 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1190 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1191 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1192 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1193 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1194 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1195 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1196 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1197 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1198 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1199 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1200 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1201 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1202 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1203 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1205 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1206 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1207 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1208 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1209 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1210 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1211 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1212 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1213 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1214 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1215 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1216 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1217 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1218 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1219 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1220 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1221 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1222 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1223 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1224 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1229 #i‡!
NCURSES_OPAQUE


1230 
	#gëbkgd
(
wö
Ë((wö)->
_bkgd
)

	)

1233 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1234 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1236 #i‡!
NCURSES_OPAQUE


1237 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
) && 0

1238 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = (◊Ë& ~
A_COLOR
), \

1239 (
wö
)->
_cﬁ‹
 = (
p
), \

1240 
OK
)

	)

1241 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1242 ()((
p
Ë!(*)0 && (*’Ë(
wö
)->
_cﬁ‹
)), \

1243 
OK
)

	)

1245 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
Ë((wö)->
_©ås
 = ((◊Ë& ~
A_COLOR
Ë| 
	`COLOR_PAIR
’)), 
OK
)

	)

1246 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
Ë(()(◊Ë!(*)0 && (*◊Ë(wö)->
_©ås
)), \

1247 ()((
p
Ë!(*)0 && (*’Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
))), \

1248 
OK
)

	)

1258 
	#vw_¥ötw
 
vw¥ötw


	)

1259 
	#vw_sˇnw
 
vwsˇnw


	)

1265 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1266 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1273 #i‡!
NCURSES_OPAQUE


1274 
	#is_˛óªd
(
wö
Ë((wö)->
_˛ór
)

	)

1275 
	#is_idcok
(
wö
Ë((wö)->
_idcok
)

	)

1276 
	#is_idlok
(
wö
Ë((wö)->
_idlok
)

	)

1277 
	#is_immedok
(
wö
Ë((wö)->
_immed
)

	)

1278 
	#is_key∑d
(
wö
Ë((wö)->
_u£_key∑d
)

	)

1279 
	#is_Àaveok
(
wö
Ë((wö)->
_Àaveok
)

	)

1280 
	#is_nodñay
(
wö
Ë((wö)->
_dñay
 =0)

	)

1281 
	#is_nŸimeout
(
wö
Ë((wö)->
_nŸimeout
)

	)

1282 
	#is_s¸ﬁlok
(
wö
Ë((wö)->
_s¸ﬁl
)

	)

1283 
	#is_syncok
(
wö
Ë((wö)->
_sync
)

	)

1284 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1285 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1299 #i‡
NCURSES_REENTRANT


1301 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1302 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1303 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1304 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1305 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1306 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1307 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1308 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1309 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1310 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1312 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1313 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1314 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1315 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1316 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1317 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1318 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1319 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1320 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1321 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1325 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1326 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1327 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1328 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1329 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1330 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1331 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1332 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1333 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1334 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1350 
	#KEY_CODE_YES
 0400

	)

1351 
	#KEY_MIN
 0401

	)

1352 
	#KEY_BREAK
 0401

	)

1353 
	#KEY_SRESET
 0530

	)

1354 
	#KEY_RESET
 0531

	)

1358 
	#KEY_DOWN
 0402

	)

1359 
	#KEY_UP
 0403

	)

1360 
	#KEY_LEFT
 0404

	)

1361 
	#KEY_RIGHT
 0405

	)

1362 
	#KEY_HOME
 0406

	)

1363 
	#KEY_BACKSPACE
 0407

	)

1364 
	#KEY_F0
 0410

	)

1365 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1366 
	#KEY_DL
 0510

	)

1367 
	#KEY_IL
 0511

	)

1368 
	#KEY_DC
 0512

	)

1369 
	#KEY_IC
 0513

	)

1370 
	#KEY_EIC
 0514

	)

1371 
	#KEY_CLEAR
 0515

	)

1372 
	#KEY_EOS
 0516

	)

1373 
	#KEY_EOL
 0517

	)

1374 
	#KEY_SF
 0520

	)

1375 
	#KEY_SR
 0521

	)

1376 
	#KEY_NPAGE
 0522

	)

1377 
	#KEY_PPAGE
 0523

	)

1378 
	#KEY_STAB
 0524

	)

1379 
	#KEY_CTAB
 0525

	)

1380 
	#KEY_CATAB
 0526

	)

1381 
	#KEY_ENTER
 0527

	)

1382 
	#KEY_PRINT
 0532

	)

1383 
	#KEY_LL
 0533

	)

1384 
	#KEY_A1
 0534

	)

1385 
	#KEY_A3
 0535

	)

1386 
	#KEY_B2
 0536

	)

1387 
	#KEY_C1
 0537

	)

1388 
	#KEY_C3
 0540

	)

1389 
	#KEY_BTAB
 0541

	)

1390 
	#KEY_BEG
 0542

	)

1391 
	#KEY_CANCEL
 0543

	)

1392 
	#KEY_CLOSE
 0544

	)

1393 
	#KEY_COMMAND
 0545

	)

1394 
	#KEY_COPY
 0546

	)

1395 
	#KEY_CREATE
 0547

	)

1396 
	#KEY_END
 0550

	)

1397 
	#KEY_EXIT
 0551

	)

1398 
	#KEY_FIND
 0552

	)

1399 
	#KEY_HELP
 0553

	)

1400 
	#KEY_MARK
 0554

	)

1401 
	#KEY_MESSAGE
 0555

	)

1402 
	#KEY_MOVE
 0556

	)

1403 
	#KEY_NEXT
 0557

	)

1404 
	#KEY_OPEN
 0560

	)

1405 
	#KEY_OPTIONS
 0561

	)

1406 
	#KEY_PREVIOUS
 0562

	)

1407 
	#KEY_REDO
 0563

	)

1408 
	#KEY_REFERENCE
 0564

	)

1409 
	#KEY_REFRESH
 0565

	)

1410 
	#KEY_REPLACE
 0566

	)

1411 
	#KEY_RESTART
 0567

	)

1412 
	#KEY_RESUME
 0570

	)

1413 
	#KEY_SAVE
 0571

	)

1414 
	#KEY_SBEG
 0572

	)

1415 
	#KEY_SCANCEL
 0573

	)

1416 
	#KEY_SCOMMAND
 0574

	)

1417 
	#KEY_SCOPY
 0575

	)

1418 
	#KEY_SCREATE
 0576

	)

1419 
	#KEY_SDC
 0577

	)

1420 
	#KEY_SDL
 0600

	)

1421 
	#KEY_SELECT
 0601

	)

1422 
	#KEY_SEND
 0602

	)

1423 
	#KEY_SEOL
 0603

	)

1424 
	#KEY_SEXIT
 0604

	)

1425 
	#KEY_SFIND
 0605

	)

1426 
	#KEY_SHELP
 0606

	)

1427 
	#KEY_SHOME
 0607

	)

1428 
	#KEY_SIC
 0610

	)

1429 
	#KEY_SLEFT
 0611

	)

1430 
	#KEY_SMESSAGE
 0612

	)

1431 
	#KEY_SMOVE
 0613

	)

1432 
	#KEY_SNEXT
 0614

	)

1433 
	#KEY_SOPTIONS
 0615

	)

1434 
	#KEY_SPREVIOUS
 0616

	)

1435 
	#KEY_SPRINT
 0617

	)

1436 
	#KEY_SREDO
 0620

	)

1437 
	#KEY_SREPLACE
 0621

	)

1438 
	#KEY_SRIGHT
 0622

	)

1439 
	#KEY_SRSUME
 0623

	)

1440 
	#KEY_SSAVE
 0624

	)

1441 
	#KEY_SSUSPEND
 0625

	)

1442 
	#KEY_SUNDO
 0626

	)

1443 
	#KEY_SUSPEND
 0627

	)

1444 
	#KEY_UNDO
 0630

	)

1445 
	#KEY_MOUSE
 0631

	)

1446 
	#KEY_RESIZE
 0632

	)

1447 
	#KEY_EVENT
 0633

	)

1449 
	#KEY_MAX
 0777

	)

1459 #i‡
NCURSES_MOUSE_VERSION
 > 1

1460 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1462 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1465 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1466 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1467 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1468 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1469 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1470 
	#NCURSES_RESERVED_EVENT
 040L

	)

1473 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1474 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1475 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1476 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1477 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1479 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1480 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1481 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1482 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1483 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1485 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1486 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1487 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1488 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1489 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1491 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1492 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1493 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1494 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1495 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1501 #i‡
NCURSES_MOUSE_VERSION
 > 1

1503 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1504 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1505 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1506 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1507 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1509 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1510 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1511 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1512 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1516 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1517 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1518 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1519 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1521 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1522 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1523 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1524 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1528 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1531 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1532 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1533 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1534 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1535 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1536 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1540 
	gid
;

1541 
	gx
, 
	gy
, 
	gz
;

1542 
mmask_t
 
	gb°©e
;

1544 
	tMEVENT
;

1546 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1547 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1548 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1549 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1550 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1551 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1552 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1553 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1555 #i‡
NCURSES_SP_FUNCS


1556 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1557 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1558 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1559 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1560 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1563 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1567 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1568 
NCURSES_EXPORT
(Ë
has_key
 ();

1570 #i‡
NCURSES_SP_FUNCS


1571 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1572 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1577 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1578 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1579 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1580 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1581 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1582 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1583 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1584 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1585 #ifde‡
_XOPEN_SOURCE_EXTENDED


1586 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1587 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1588 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1589 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1591 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1592 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1594 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1595 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1598 
	#TRACE_DISABLE
 0x0000

	)

1599 
	#TRACE_TIMES
 0x0001

	)

1600 
	#TRACE_TPUTS
 0x0002

	)

1601 
	#TRACE_UPDATE
 0x0004

	)

1602 
	#TRACE_MOVE
 0x0008

	)

1603 
	#TRACE_CHARPUT
 0x0010

	)

1604 
	#TRACE_ORDINARY
 0x001F

	)

1605 
	#TRACE_CALLS
 0x0020

	)

1606 
	#TRACE_VIRTPUT
 0x0040

	)

1607 
	#TRACE_IEVENT
 0x0080

	)

1608 
	#TRACE_BITS
 0x0100

	)

1609 
	#TRACE_ICALLS
 0x0200

	)

1610 
	#TRACE_CCALLS
 0x0400

	)

1611 
	#TRACE_DATABASE
 0x0800

	)

1612 
	#TRACE_ATTRS
 0x1000

	)

1614 
	#TRACE_SHIFT
 13

	)

1615 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1617 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1618 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1619 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1620 
	#OPTIMIZE_MVCUR
 0x01

	)

1621 
	#OPTIMIZE_HASHMAP
 0x02

	)

1622 
	#OPTIMIZE_SCROLL
 0x04

	)

1623 
	#OPTIMIZE_ALL
 0xf‡

	)

1626 
	~<un˘æ.h
>

1628 #ifde‡
__˝lu•lus


1630 #i‚de‡
NCURSES_NOMACROS


1633 #unde‡
box


1634 #unde‡
˛ór


1635 #unde‡
îa£


1636 #unde‡
move


1637 #unde‡
ª‰esh


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

26 
	~<gnu/›ti⁄-groups.h
>

29 #ifde‡
__˝lu•lus


37 
	ts_ªg_t
;

38 
	ta˘ive_ªg_t
;

45 
	tªg_sy¡ax_t
;

47 #ifde‡
__USE_GNU


50 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

55 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

61 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

75 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

83 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

87 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

91 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

95 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

99 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

104 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

108 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

112 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

117 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

121 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

125 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

129 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

135 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

139 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

143 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

147 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

155 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

160 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

163 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


166 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

171 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

175 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

179 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

187 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

189 #ifde‡
__USE_GNU


194 
	#RE_SYNTAX_EMACS
 0

	)

196 
	#RE_SYNTAX_AWK
 \

197 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

198 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

199 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

200 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

201 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

203 
	#RE_SYNTAX_GNU_AWK
 \

204 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

205 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

206 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

208 
	#RE_SYNTAX_POSIX_AWK
 \

209 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

210 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

212 
	#RE_SYNTAX_GREP
 \

213 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

214 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

215 | 
RE_NEWLINE_ALT
)

	)

217 
	#RE_SYNTAX_EGREP
 \

218 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

219 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

220 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

221 | 
RE_NO_BK_VBAR
)

	)

223 
	#RE_SYNTAX_POSIX_EGREP
 \

224 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

225 | 
RE_INVALID_INTERVAL_ORD
)

	)

228 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

230 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

233 
	#_RE_SYNTAX_POSIX_COMMON
 \

234 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

235 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

237 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


238 
	#RE_SYNTAX_POSIX_BASIC
 \

239 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

241 
	#RE_SYNTAX_POSIX_BASIC
 \

242 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
)

	)

248 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

249 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

251 
	#RE_SYNTAX_POSIX_EXTENDED
 \

252 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

253 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

254 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

255 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

259 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

260 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

261 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

262 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

263 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

269 #ifde‡
RE_DUP_MAX


270 #unde‡
RE_DUP_MAX


273 
	#RE_DUP_MAX
 (0x7fff)

	)

281 
	#REG_EXTENDED
 1

	)

285 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

290 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

294 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

304 
	#REG_NOTBOL
 1

	)

307 
	#REG_NOTEOL
 (1 << 1)

	)

309 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


312 
	#REG_STARTEND
 (1 << 2)

	)

320 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


321 
	gREG_ENOSYS
 = -1,

324 
	gREG_NOERROR
 = 0,

325 
	gREG_NOMATCH
,

329 
	gREG_BADPAT
,

330 
	gREG_ECOLLATE
,

331 
	gREG_ECTYPE
,

332 
	gREG_EESCAPE
,

333 
	gREG_ESUBREG
,

334 
	gREG_EBRACK
,

335 
	gREG_EPAREN
,

336 
	gREG_EBRACE
,

337 
	gREG_BADBR
,

338 
	gREG_ERANGE
,

339 
	gREG_ESPACE
,

340 
	gREG_BADRPT
,

343 
	gREG_EEND
,

344 
	gREG_ESIZE
,

345 
	gREG_ERPAREN


346 } 
	tªg_îrcode_t
;

354 #i‚de‡
RE_TRANSLATE_TYPE


355 
	#__RE_TRANSLATE_TYPE
 *

	)

356 #ifde‡
__USE_GNU


357 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

361 #ifde‡
__USE_GNU


362 
	#__REPB_PREFIX
(
«me
Ë
	)
«me

364 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
«me

367 
	sª_∑âîn_buf„r


372 *
__REPB_PREFIX
(
buf„r
);

375 
__REPB_PREFIX
(
Æloˇãd
);

378 
__REPB_PREFIX
(
u£d
);

381 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

386 *
__REPB_PREFIX
(
Á°m≠
);

392 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

395 
size_t
 
	gª_nsub
;

401 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

407 #ifde‡
__USE_GNU


408 
	#REGS_UNALLOCATED
 0

	)

409 
	#REGS_REALLOCATE
 1

	)

410 
	#REGS_FIXED
 2

	)

412 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

416 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

420 
__REPB_PREFIX
(
no_sub
) : 1;

424 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

427 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

430 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

433 
ª_∑âîn_buf„r
 
	tªgex_t
;

436 
	tªgoff_t
;

439 #ifde‡
__USE_GNU


442 
	sª_ªgi°îs


444 
	gnum_ªgs
;

445 
ªgoff_t
 *
	g°¨t
;

446 
ªgoff_t
 *
	gíd
;

453 #i‚de‡
RE_NREGS


454 
	#RE_NREGS
 30

	)

464 
ªgoff_t
 
	grm_so
;

465 
ªgoff_t
 
	grm_eo
;

466 } 
	tªgm©ch_t
;

470 #ifde‡
__USE_GNU


473 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

478 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

479 
ª_∑âîn_buf„r
 *
__buf„r
);

485 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

493 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

494 
__Àngth
, 
__°¨t
, 
__ønge
,

495 
ª_ªgi°îs
 *
__ªgs
);

500 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

501 c⁄° *
__°rög1
, 
__Àngth1
,

502 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

503 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

508 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

509 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

513 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

514 c⁄° *
__°rög1
, 
__Àngth1
,

515 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

516 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

531 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

532 
ª_ªgi°îs
 *
__ªgs
,

533 
__num_ªgs
,

534 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

537 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

538 #i‚de‡
_CRAY


540 *
ª_comp
 (const *);

541 
ª_exec
 (const *);

547 #i‚de‡
__ª°ri˘


548 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

549 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


550 
	#__ª°ri˘
 
ª°ri˘


	)

552 
	#__ª°ri˘


	)

557 #i‚de‡
__ª°ri˘_¨r


558 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

559 && !
deföed
 
	g__GNUG__


560 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

562 
	#__ª°ri˘_¨r


	)

567 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

568 c⁄° *
__ª°ri˘
 
__∑âîn
,

569 
__cÊags
);

571 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

572 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

573 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

574 
__eÊags
);

576 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

577 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

579 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

582 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/dir.h

19 #i‚def 
_SYS_DIR_H


20 
	#_SYS_DIR_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<dúít.h
>

26 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/term.h

41 #i‚de‡
NCURSES_TERM_H_ö˛


42 
	#NCURSES_TERM_H_ö˛
 1

	)

44 #unde‡
NCURSES_VERSION


45 
	#NCURSES_VERSION
 "5.7"

	)

47 
	~<ncur£s_dŒ.h
>

49 #ifde‡
__˝lu•lus


57 #unde‡
NCURSES_CONST


58 
	#NCURSES_CONST
 c⁄°

	)

60 #unde‡
NCURSES_SBOOL


61 
	#NCURSES_SBOOL
 

	)

63 #unde‡
NCURSES_XNAMES


64 
	#NCURSES_XNAMES
 1

	)

69 #unde‡
TTY


70 #unde‡
SET_TTY


71 #unde‡
GET_TTY


77 #unde‡
TERMIOS


78 
	#TERMIOS
 1

	)

80 
	~<ãrmios.h
>

81 
	#TTY
 
ãrmios


	)

88 #unde‡
TERMIOS


89 
	#TERMIOS
 1

	)

91 
	~<ãrmio.h
>

92 
	#TTY
 
ãrmio


	)

98 #i‚de‡
TCSANOW


99 
	#TCSANOW
 
TCSETA


	)

101 #i‚de‡
TCSADRAIN


102 
	#TCSADRAIN
 
TCSETAW


	)

104 #i‚de‡
TCSAFLUSH


105 
	#TCSAFLUSH
 
TCSETAF


	)

107 #i‚de‡
tc£èâr


108 
	#tc£èâr
(
fd
, 
cmd
, 
¨g
Ë
	`io˘l
(fd, cmd,árg)

	)

110 #i‚de‡
tcgë©å


111 
	#tcgë©å
(
fd
, 
¨g
Ë
	`io˘l
(fd, 
TCGETA
,árg)

	)

113 #i‚de‡
cfgëo•ìd


114 
	#cfgëo•ìd
(
t
Ë(—)->
c_cÊag
 & 
CBAUD
)

	)

116 #i‚de‡
TCIFLUSH


117 
	#TCIFLUSH
 0

	)

119 #i‚de‡
TCOFLUSH


120 
	#TCOFLUSH
 1

	)

122 #i‚de‡
TCIOFLUSH


123 
	#TCIOFLUSH
 2

	)

125 #i‚de‡
tcÊush


126 
	#tcÊush
(
fd
, 
¨g
Ë
	`io˘l
(fd, 
TCFLSH
,árg)

	)

131 #i‡
__MINGW32__


132 
	~<ncur£s_mögw.h
>

133 
	#TTY
 
ãrmios


	)

135 #unde‡
TERMIOS


136 
	~<sgây.h
>

137 
	~<sys/io˘l.h
>

138 
	#TTY
 
sgâyb


	)

144 #ifde‡
TERMIOS


145 
	#GET_TTY
(
fd
, 
buf
Ë
	`tcgë©å
(fd, buf)

	)

146 
	#SET_TTY
(
fd
, 
buf
Ë
	`tc£èâr
(fd, 
TCSADRAIN
, buf)

	)

148 
	#GET_TTY
(
fd
, 
buf
Ë
	`gây
(fd, buf)

	)

149 
	#SET_TTY
(
fd
, 
buf
Ë
	`°ty
(fd, buf)

	)

152 
	#NAMESIZE
 256

	)

154 
	#CUR
 
cur_ãrm
->
ty≥
.

	)

156 
	#auto_À·_m¨gö
 
CUR
 
Boﬁóns
[0]

	)

157 
	#auto_right_m¨gö
 
CUR
 
Boﬁóns
[1]

	)

158 
	#no_esc_˘lc
 
CUR
 
Boﬁóns
[2]

	)

159 
	#˚ﬁ_°™dout_glôch
 
CUR
 
Boﬁóns
[3]

	)

160 
	#ót_√wlöe_glôch
 
CUR
 
Boﬁóns
[4]

	)

161 
	#îa£_ovî°rike
 
CUR
 
Boﬁóns
[5]

	)

162 
	#gíîic_ty≥
 
CUR
 
Boﬁóns
[6]

	)

163 
	#h¨d_c›y
 
CUR
 
Boﬁóns
[7]

	)

164 
	#has_mëa_key
 
CUR
 
Boﬁóns
[8]

	)

165 
	#has_°©us_löe
 
CUR
 
Boﬁóns
[9]

	)

166 
	#ö£π_nuŒ_glôch
 
CUR
 
Boﬁóns
[10]

	)

167 
	#mem‹y_above
 
CUR
 
Boﬁóns
[11]

	)

168 
	#mem‹y_bñow
 
CUR
 
Boﬁóns
[12]

	)

169 
	#move_ö£π_mode
 
CUR
 
Boﬁóns
[13]

	)

170 
	#move_°™dout_mode
 
CUR
 
Boﬁóns
[14]

	)

171 
	#ovî_°rike
 
CUR
 
Boﬁóns
[15]

	)

172 
	#°©us_löe_esc_ok
 
CUR
 
Boﬁóns
[16]

	)

173 
	#de°_èbs_magic_smso
 
CUR
 
Boﬁóns
[17]

	)

174 
	#tûde_glôch
 
CUR
 
Boﬁóns
[18]

	)

175 
	#å™•¨ít_undîlöe
 
CUR
 
Boﬁóns
[19]

	)

176 
	#x⁄_xoff
 
CUR
 
Boﬁóns
[20]

	)

177 
	#√eds_x⁄_xoff
 
CUR
 
Boﬁóns
[21]

	)

178 
	#¥å_sûít
 
CUR
 
Boﬁóns
[22]

	)

179 
	#h¨d_curs‹
 
CUR
 
Boﬁóns
[23]

	)

180 
	#n⁄_ªv_rmcup
 
CUR
 
Boﬁóns
[24]

	)

181 
	#no_∑d_ch¨
 
CUR
 
Boﬁóns
[25]

	)

182 
	#n⁄_de°_s¸ﬁl_ªgi⁄
 
CUR
 
Boﬁóns
[26]

	)

183 
	#ˇn_ch™ge
 
CUR
 
Boﬁóns
[27]

	)

184 
	#back_cﬁ‹_îa£
 
CUR
 
Boﬁóns
[28]

	)

185 
	#hue_lighäess_ßtuøti⁄
 
CUR
 
Boﬁóns
[29]

	)

186 
	#cﬁ_addr_glôch
 
CUR
 
Boﬁóns
[30]

	)

187 
	#¸_ˇn˚ls_mi¸o_mode
 
CUR
 
Boﬁóns
[31]

	)

188 
	#has_¥öt_whìl
 
CUR
 
Boﬁóns
[32]

	)

189 
	#row_addr_glôch
 
CUR
 
Boﬁóns
[33]

	)

190 
	#£mi_auto_right_m¨gö
 
CUR
 
Boﬁóns
[34]

	)

191 
	#˝i_ch™ges_ªs
 
CUR
 
Boﬁóns
[35]

	)

192 
	#Õi_ch™ges_ªs
 
CUR
 
Boﬁóns
[36]

	)

193 
	#cﬁumns
 
CUR
 
Numbîs
[0]

	)

194 
	#öô_èbs
 
CUR
 
Numbîs
[1]

	)

195 
	#löes
 
CUR
 
Numbîs
[2]

	)

196 
	#löes_of_mem‹y
 
CUR
 
Numbîs
[3]

	)

197 
	#magic_cookõ_glôch
 
CUR
 
Numbîs
[4]

	)

198 
	#∑ddög_baud_øã
 
CUR
 
Numbîs
[5]

	)

199 
	#vútuÆ_ãrmöÆ
 
CUR
 
Numbîs
[6]

	)

200 
	#width_°©us_löe
 
CUR
 
Numbîs
[7]

	)

201 
	#num_œbñs
 
CUR
 
Numbîs
[8]

	)

202 
	#œbñ_height
 
CUR
 
Numbîs
[9]

	)

203 
	#œbñ_width
 
CUR
 
Numbîs
[10]

	)

204 
	#max_©åibuãs
 
CUR
 
Numbîs
[11]

	)

205 
	#maximum_wödows
 
CUR
 
Numbîs
[12]

	)

206 
	#max_cﬁ‹s
 
CUR
 
Numbîs
[13]

	)

207 
	#max_∑ús
 
CUR
 
Numbîs
[14]

	)

208 
	#no_cﬁ‹_video
 
CUR
 
Numbîs
[15]

	)

209 
	#buf„r_ˇ∑côy
 
CUR
 
Numbîs
[16]

	)

210 
	#dŸ_vît_•acög
 
CUR
 
Numbîs
[17]

	)

211 
	#dŸ_h‹z_•acög
 
CUR
 
Numbîs
[18]

	)

212 
	#max_mi¸o_addªss
 
CUR
 
Numbîs
[19]

	)

213 
	#max_mi¸o_jump
 
CUR
 
Numbîs
[20]

	)

214 
	#mi¸o_cﬁ_size
 
CUR
 
Numbîs
[21]

	)

215 
	#mi¸o_löe_size
 
CUR
 
Numbîs
[22]

	)

216 
	#numbî_of_pös
 
CUR
 
Numbîs
[23]

	)

217 
	#ouçut_ªs_ch¨
 
CUR
 
Numbîs
[24]

	)

218 
	#ouçut_ªs_löe
 
CUR
 
Numbîs
[25]

	)

219 
	#ouçut_ªs_h‹z_öch
 
CUR
 
Numbîs
[26]

	)

220 
	#ouçut_ªs_vît_öch
 
CUR
 
Numbîs
[27]

	)

221 
	#¥öt_øã
 
CUR
 
Numbîs
[28]

	)

222 
	#wide_ch¨_size
 
CUR
 
Numbîs
[29]

	)

223 
	#buâ⁄s
 
CUR
 
Numbîs
[30]

	)

224 
	#bô_image_ítwöög
 
CUR
 
Numbîs
[31]

	)

225 
	#bô_image_ty≥
 
CUR
 
Numbîs
[32]

	)

226 
	#back_èb
 
CUR
 
Såögs
[0]

	)

227 
	#bñl
 
CUR
 
Såögs
[1]

	)

228 
	#ˇºüge_ªtu∫
 
CUR
 
Såögs
[2]

	)

229 
	#ch™ge_s¸ﬁl_ªgi⁄
 
CUR
 
Såögs
[3]

	)

230 
	#˛ór_Æl_èbs
 
CUR
 
Såögs
[4]

	)

231 
	#˛ór_s¸ìn
 
CUR
 
Såögs
[5]

	)

232 
	#˛r_eﬁ
 
CUR
 
Såögs
[6]

	)

233 
	#˛r_eos
 
CUR
 
Såögs
[7]

	)

234 
	#cﬁumn_addªss
 
CUR
 
Såögs
[8]

	)

235 
	#comm™d_ch¨a˘î
 
CUR
 
Såögs
[9]

	)

236 
	#curs‹_addªss
 
CUR
 
Såögs
[10]

	)

237 
	#curs‹_down
 
CUR
 
Såögs
[11]

	)

238 
	#curs‹_home
 
CUR
 
Såögs
[12]

	)

239 
	#curs‹_övisibÀ
 
CUR
 
Såögs
[13]

	)

240 
	#curs‹_À·
 
CUR
 
Såögs
[14]

	)

241 
	#curs‹_mem_addªss
 
CUR
 
Såögs
[15]

	)

242 
	#curs‹_n‹mÆ
 
CUR
 
Såögs
[16]

	)

243 
	#curs‹_right
 
CUR
 
Såögs
[17]

	)

244 
	#curs‹_to_Œ
 
CUR
 
Såögs
[18]

	)

245 
	#curs‹_up
 
CUR
 
Såögs
[19]

	)

246 
	#curs‹_visibÀ
 
CUR
 
Såögs
[20]

	)

247 
	#dñëe_ch¨a˘î
 
CUR
 
Såögs
[21]

	)

248 
	#dñëe_löe
 
CUR
 
Såögs
[22]

	)

249 
	#dis_°©us_löe
 
CUR
 
Såögs
[23]

	)

250 
	#down_hÆf_löe
 
CUR
 
Såögs
[24]

	)

251 
	#íãr_Æt_ch¨£t_mode
 
CUR
 
Såögs
[25]

	)

252 
	#íãr_blök_mode
 
CUR
 
Såögs
[26]

	)

253 
	#íãr_bﬁd_mode
 
CUR
 
Såögs
[27]

	)

254 
	#íãr_ˇ_mode
 
CUR
 
Såögs
[28]

	)

255 
	#íãr_dñëe_mode
 
CUR
 
Såögs
[29]

	)

256 
	#íãr_dim_mode
 
CUR
 
Såögs
[30]

	)

257 
	#íãr_ö£π_mode
 
CUR
 
Såögs
[31]

	)

258 
	#íãr_£cuª_mode
 
CUR
 
Såögs
[32]

	)

259 
	#íãr_¥Ÿe˘ed_mode
 
CUR
 
Såögs
[33]

	)

260 
	#íãr_ªvî£_mode
 
CUR
 
Såögs
[34]

	)

261 
	#íãr_°™dout_mode
 
CUR
 
Såögs
[35]

	)

262 
	#íãr_undîlöe_mode
 
CUR
 
Såögs
[36]

	)

263 
	#îa£_ch¨s
 
CUR
 
Såögs
[37]

	)

264 
	#exô_Æt_ch¨£t_mode
 
CUR
 
Såögs
[38]

	)

265 
	#exô_©åibuã_mode
 
CUR
 
Såögs
[39]

	)

266 
	#exô_ˇ_mode
 
CUR
 
Såögs
[40]

	)

267 
	#exô_dñëe_mode
 
CUR
 
Såögs
[41]

	)

268 
	#exô_ö£π_mode
 
CUR
 
Såögs
[42]

	)

269 
	#exô_°™dout_mode
 
CUR
 
Såögs
[43]

	)

270 
	#exô_undîlöe_mode
 
CUR
 
Såögs
[44]

	)

271 
	#Êash_s¸ìn
 
CUR
 
Såögs
[45]

	)

272 
	#f‹m_„ed
 
CUR
 
Såögs
[46]

	)

273 
	#‰om_°©us_löe
 
CUR
 
Såögs
[47]

	)

274 
	#öô_1°rög
 
CUR
 
Såögs
[48]

	)

275 
	#öô_2°rög
 
CUR
 
Såögs
[49]

	)

276 
	#öô_3°rög
 
CUR
 
Såögs
[50]

	)

277 
	#öô_fûe
 
CUR
 
Såögs
[51]

	)

278 
	#ö£π_ch¨a˘î
 
CUR
 
Såögs
[52]

	)

279 
	#ö£π_löe
 
CUR
 
Såögs
[53]

	)

280 
	#ö£π_∑ddög
 
CUR
 
Såögs
[54]

	)

281 
	#key_back•a˚
 
CUR
 
Såögs
[55]

	)

282 
	#key_ˇèb
 
CUR
 
Såögs
[56]

	)

283 
	#key_˛ór
 
CUR
 
Såögs
[57]

	)

284 
	#key_˘ab
 
CUR
 
Såögs
[58]

	)

285 
	#key_dc
 
CUR
 
Såögs
[59]

	)

286 
	#key_dl
 
CUR
 
Såögs
[60]

	)

287 
	#key_down
 
CUR
 
Såögs
[61]

	)

288 
	#key_eic
 
CUR
 
Såögs
[62]

	)

289 
	#key_eﬁ
 
CUR
 
Såögs
[63]

	)

290 
	#key_eos
 
CUR
 
Såögs
[64]

	)

291 
	#key_f0
 
CUR
 
Såögs
[65]

	)

292 
	#key_f1
 
CUR
 
Såögs
[66]

	)

293 
	#key_f10
 
CUR
 
Såögs
[67]

	)

294 
	#key_f2
 
CUR
 
Såögs
[68]

	)

295 
	#key_f3
 
CUR
 
Såögs
[69]

	)

296 
	#key_f4
 
CUR
 
Såögs
[70]

	)

297 
	#key_f5
 
CUR
 
Såögs
[71]

	)

298 
	#key_f6
 
CUR
 
Såögs
[72]

	)

299 
	#key_f7
 
CUR
 
Såögs
[73]

	)

300 
	#key_f8
 
CUR
 
Såögs
[74]

	)

301 
	#key_f9
 
CUR
 
Såögs
[75]

	)

302 
	#key_home
 
CUR
 
Såögs
[76]

	)

303 
	#key_ic
 
CUR
 
Såögs
[77]

	)

304 
	#key_û
 
CUR
 
Såögs
[78]

	)

305 
	#key_À·
 
CUR
 
Såögs
[79]

	)

306 
	#key_Œ
 
CUR
 
Såögs
[80]

	)

307 
	#key_≈age
 
CUR
 
Såögs
[81]

	)

308 
	#key_µage
 
CUR
 
Såögs
[82]

	)

309 
	#key_right
 
CUR
 
Såögs
[83]

	)

310 
	#key_sf
 
CUR
 
Såögs
[84]

	)

311 
	#key_§
 
CUR
 
Såögs
[85]

	)

312 
	#key_°ab
 
CUR
 
Såögs
[86]

	)

313 
	#key_up
 
CUR
 
Såögs
[87]

	)

314 
	#key∑d_loˇl
 
CUR
 
Såögs
[88]

	)

315 
	#key∑d_xmô
 
CUR
 
Såögs
[89]

	)

316 
	#œb_f0
 
CUR
 
Såögs
[90]

	)

317 
	#œb_f1
 
CUR
 
Såögs
[91]

	)

318 
	#œb_f10
 
CUR
 
Såögs
[92]

	)

319 
	#œb_f2
 
CUR
 
Såögs
[93]

	)

320 
	#œb_f3
 
CUR
 
Såögs
[94]

	)

321 
	#œb_f4
 
CUR
 
Såögs
[95]

	)

322 
	#œb_f5
 
CUR
 
Såögs
[96]

	)

323 
	#œb_f6
 
CUR
 
Såögs
[97]

	)

324 
	#œb_f7
 
CUR
 
Såögs
[98]

	)

325 
	#œb_f8
 
CUR
 
Såögs
[99]

	)

326 
	#œb_f9
 
CUR
 
Såögs
[100]

	)

327 
	#mëa_off
 
CUR
 
Såögs
[101]

	)

328 
	#mëa_⁄
 
CUR
 
Såögs
[102]

	)

329 
	#√wlöe
 
CUR
 
Såögs
[103]

	)

330 
	#∑d_ch¨
 
CUR
 
Såögs
[104]

	)

331 
	#∑rm_dch
 
CUR
 
Såögs
[105]

	)

332 
	#∑rm_dñëe_löe
 
CUR
 
Såögs
[106]

	)

333 
	#∑rm_down_curs‹
 
CUR
 
Såögs
[107]

	)

334 
	#∑rm_ich
 
CUR
 
Såögs
[108]

	)

335 
	#∑rm_ödex
 
CUR
 
Såögs
[109]

	)

336 
	#∑rm_ö£π_löe
 
CUR
 
Såögs
[110]

	)

337 
	#∑rm_À·_curs‹
 
CUR
 
Såögs
[111]

	)

338 
	#∑rm_right_curs‹
 
CUR
 
Såögs
[112]

	)

339 
	#∑rm_rödex
 
CUR
 
Såögs
[113]

	)

340 
	#∑rm_up_curs‹
 
CUR
 
Såögs
[114]

	)

341 
	#pkey_key
 
CUR
 
Såögs
[115]

	)

342 
	#pkey_loˇl
 
CUR
 
Såögs
[116]

	)

343 
	#pkey_xmô
 
CUR
 
Såögs
[117]

	)

344 
	#¥öt_s¸ìn
 
CUR
 
Såögs
[118]

	)

345 
	#¥å_off
 
CUR
 
Såögs
[119]

	)

346 
	#¥å_⁄
 
CUR
 
Såögs
[120]

	)

347 
	#ª≥©_ch¨
 
CUR
 
Såögs
[121]

	)

348 
	#ª£t_1°rög
 
CUR
 
Såögs
[122]

	)

349 
	#ª£t_2°rög
 
CUR
 
Såögs
[123]

	)

350 
	#ª£t_3°rög
 
CUR
 
Såögs
[124]

	)

351 
	#ª£t_fûe
 
CUR
 
Såögs
[125]

	)

352 
	#ª°‹e_curs‹
 
CUR
 
Såögs
[126]

	)

353 
	#row_addªss
 
CUR
 
Såögs
[127]

	)

354 
	#ßve_curs‹
 
CUR
 
Såögs
[128]

	)

355 
	#s¸ﬁl_f‹w¨d
 
CUR
 
Såögs
[129]

	)

356 
	#s¸ﬁl_ªvî£
 
CUR
 
Såögs
[130]

	)

357 
	#£t_©åibuãs
 
CUR
 
Såögs
[131]

	)

358 
	#£t_èb
 
CUR
 
Såögs
[132]

	)

359 
	#£t_wödow
 
CUR
 
Såögs
[133]

	)

360 
	#èb
 
CUR
 
Såögs
[134]

	)

361 
	#to_°©us_löe
 
CUR
 
Såögs
[135]

	)

362 
	#undîlöe_ch¨
 
CUR
 
Såögs
[136]

	)

363 
	#up_hÆf_löe
 
CUR
 
Såögs
[137]

	)

364 
	#öô_¥og
 
CUR
 
Såögs
[138]

	)

365 
	#key_a1
 
CUR
 
Såögs
[139]

	)

366 
	#key_a3
 
CUR
 
Såögs
[140]

	)

367 
	#key_b2
 
CUR
 
Såögs
[141]

	)

368 
	#key_c1
 
CUR
 
Såögs
[142]

	)

369 
	#key_c3
 
CUR
 
Såögs
[143]

	)

370 
	#¥å_n⁄
 
CUR
 
Såögs
[144]

	)

371 
	#ch¨_∑ddög
 
CUR
 
Såögs
[145]

	)

372 
	#acs_ch¨s
 
CUR
 
Såögs
[146]

	)

373 
	#∂ab_n‹m
 
CUR
 
Såögs
[147]

	)

374 
	#key_bèb
 
CUR
 
Såögs
[148]

	)

375 
	#íãr_x⁄_mode
 
CUR
 
Såögs
[149]

	)

376 
	#exô_x⁄_mode
 
CUR
 
Såögs
[150]

	)

377 
	#íãr_am_mode
 
CUR
 
Såögs
[151]

	)

378 
	#exô_am_mode
 
CUR
 
Såögs
[152]

	)

379 
	#x⁄_ch¨a˘î
 
CUR
 
Såögs
[153]

	)

380 
	#xoff_ch¨a˘î
 
CUR
 
Såögs
[154]

	)

381 
	#ía_acs
 
CUR
 
Såögs
[155]

	)

382 
	#œbñ_⁄
 
CUR
 
Såögs
[156]

	)

383 
	#œbñ_off
 
CUR
 
Såögs
[157]

	)

384 
	#key_beg
 
CUR
 
Såögs
[158]

	)

385 
	#key_ˇn˚l
 
CUR
 
Såögs
[159]

	)

386 
	#key_˛o£
 
CUR
 
Såögs
[160]

	)

387 
	#key_comm™d
 
CUR
 
Såögs
[161]

	)

388 
	#key_c›y
 
CUR
 
Såögs
[162]

	)

389 
	#key_¸óã
 
CUR
 
Såögs
[163]

	)

390 
	#key_íd
 
CUR
 
Såögs
[164]

	)

391 
	#key_íãr
 
CUR
 
Såögs
[165]

	)

392 
	#key_exô
 
CUR
 
Såögs
[166]

	)

393 
	#key_föd
 
CUR
 
Såögs
[167]

	)

394 
	#key_hñp
 
CUR
 
Såögs
[168]

	)

395 
	#key_m¨k
 
CUR
 
Såögs
[169]

	)

396 
	#key_mesßge
 
CUR
 
Såögs
[170]

	)

397 
	#key_move
 
CUR
 
Såögs
[171]

	)

398 
	#key_√xt
 
CUR
 
Såögs
[172]

	)

399 
	#key_›í
 
CUR
 
Såögs
[173]

	)

400 
	#key_›ti⁄s
 
CUR
 
Såögs
[174]

	)

401 
	#key_¥evious
 
CUR
 
Såögs
[175]

	)

402 
	#key_¥öt
 
CUR
 
Såögs
[176]

	)

403 
	#key_ªdo
 
CUR
 
Såögs
[177]

	)

404 
	#key_ª„ªn˚
 
CUR
 
Såögs
[178]

	)

405 
	#key_ª‰esh
 
CUR
 
Såögs
[179]

	)

406 
	#key_ª∂a˚
 
CUR
 
Såögs
[180]

	)

407 
	#key_ª°¨t
 
CUR
 
Såögs
[181]

	)

408 
	#key_ªsume
 
CUR
 
Såögs
[182]

	)

409 
	#key_ßve
 
CUR
 
Såögs
[183]

	)

410 
	#key_su•íd
 
CUR
 
Såögs
[184]

	)

411 
	#key_undo
 
CUR
 
Såögs
[185]

	)

412 
	#key_sbeg
 
CUR
 
Såögs
[186]

	)

413 
	#key_sˇn˚l
 
CUR
 
Såögs
[187]

	)

414 
	#key_scomm™d
 
CUR
 
Såögs
[188]

	)

415 
	#key_sc›y
 
CUR
 
Såögs
[189]

	)

416 
	#key_s¸óã
 
CUR
 
Såögs
[190]

	)

417 
	#key_sdc
 
CUR
 
Såögs
[191]

	)

418 
	#key_sdl
 
CUR
 
Såögs
[192]

	)

419 
	#key_£À˘
 
CUR
 
Såögs
[193]

	)

420 
	#key_£nd
 
CUR
 
Såögs
[194]

	)

421 
	#key_£ﬁ
 
CUR
 
Såögs
[195]

	)

422 
	#key_£xô
 
CUR
 
Såögs
[196]

	)

423 
	#key_sföd
 
CUR
 
Såögs
[197]

	)

424 
	#key_shñp
 
CUR
 
Såögs
[198]

	)

425 
	#key_shome
 
CUR
 
Såögs
[199]

	)

426 
	#key_sic
 
CUR
 
Såögs
[200]

	)

427 
	#key_¶e·
 
CUR
 
Såögs
[201]

	)

428 
	#key_smesßge
 
CUR
 
Såögs
[202]

	)

429 
	#key_smove
 
CUR
 
Såögs
[203]

	)

430 
	#key_¢ext
 
CUR
 
Såögs
[204]

	)

431 
	#key_s›ti⁄s
 
CUR
 
Såögs
[205]

	)

432 
	#key_•ªvious
 
CUR
 
Såögs
[206]

	)

433 
	#key_•röt
 
CUR
 
Såögs
[207]

	)

434 
	#key_§edo
 
CUR
 
Såögs
[208]

	)

435 
	#key_§ïœ˚
 
CUR
 
Såögs
[209]

	)

436 
	#key_§ight
 
CUR
 
Såögs
[210]

	)

437 
	#key_§sume
 
CUR
 
Såögs
[211]

	)

438 
	#key_sßve
 
CUR
 
Såögs
[212]

	)

439 
	#key_ssu•íd
 
CUR
 
Såögs
[213]

	)

440 
	#key_sundo
 
CUR
 
Såögs
[214]

	)

441 
	#ªq_f‹_öput
 
CUR
 
Såögs
[215]

	)

442 
	#key_f11
 
CUR
 
Såögs
[216]

	)

443 
	#key_f12
 
CUR
 
Såögs
[217]

	)

444 
	#key_f13
 
CUR
 
Såögs
[218]

	)

445 
	#key_f14
 
CUR
 
Såögs
[219]

	)

446 
	#key_f15
 
CUR
 
Såögs
[220]

	)

447 
	#key_f16
 
CUR
 
Såögs
[221]

	)

448 
	#key_f17
 
CUR
 
Såögs
[222]

	)

449 
	#key_f18
 
CUR
 
Såögs
[223]

	)

450 
	#key_f19
 
CUR
 
Såögs
[224]

	)

451 
	#key_f20
 
CUR
 
Såögs
[225]

	)

452 
	#key_f21
 
CUR
 
Såögs
[226]

	)

453 
	#key_f22
 
CUR
 
Såögs
[227]

	)

454 
	#key_f23
 
CUR
 
Såögs
[228]

	)

455 
	#key_f24
 
CUR
 
Såögs
[229]

	)

456 
	#key_f25
 
CUR
 
Såögs
[230]

	)

457 
	#key_f26
 
CUR
 
Såögs
[231]

	)

458 
	#key_f27
 
CUR
 
Såögs
[232]

	)

459 
	#key_f28
 
CUR
 
Såögs
[233]

	)

460 
	#key_f29
 
CUR
 
Såögs
[234]

	)

461 
	#key_f30
 
CUR
 
Såögs
[235]

	)

462 
	#key_f31
 
CUR
 
Såögs
[236]

	)

463 
	#key_f32
 
CUR
 
Såögs
[237]

	)

464 
	#key_f33
 
CUR
 
Såögs
[238]

	)

465 
	#key_f34
 
CUR
 
Såögs
[239]

	)

466 
	#key_f35
 
CUR
 
Såögs
[240]

	)

467 
	#key_f36
 
CUR
 
Såögs
[241]

	)

468 
	#key_f37
 
CUR
 
Såögs
[242]

	)

469 
	#key_f38
 
CUR
 
Såögs
[243]

	)

470 
	#key_f39
 
CUR
 
Såögs
[244]

	)

471 
	#key_f40
 
CUR
 
Såögs
[245]

	)

472 
	#key_f41
 
CUR
 
Såögs
[246]

	)

473 
	#key_f42
 
CUR
 
Såögs
[247]

	)

474 
	#key_f43
 
CUR
 
Såögs
[248]

	)

475 
	#key_f44
 
CUR
 
Såögs
[249]

	)

476 
	#key_f45
 
CUR
 
Såögs
[250]

	)

477 
	#key_f46
 
CUR
 
Såögs
[251]

	)

478 
	#key_f47
 
CUR
 
Såögs
[252]

	)

479 
	#key_f48
 
CUR
 
Såögs
[253]

	)

480 
	#key_f49
 
CUR
 
Såögs
[254]

	)

481 
	#key_f50
 
CUR
 
Såögs
[255]

	)

482 
	#key_f51
 
CUR
 
Såögs
[256]

	)

483 
	#key_f52
 
CUR
 
Såögs
[257]

	)

484 
	#key_f53
 
CUR
 
Såögs
[258]

	)

485 
	#key_f54
 
CUR
 
Såögs
[259]

	)

486 
	#key_f55
 
CUR
 
Såögs
[260]

	)

487 
	#key_f56
 
CUR
 
Såögs
[261]

	)

488 
	#key_f57
 
CUR
 
Såögs
[262]

	)

489 
	#key_f58
 
CUR
 
Såögs
[263]

	)

490 
	#key_f59
 
CUR
 
Såögs
[264]

	)

491 
	#key_f60
 
CUR
 
Såögs
[265]

	)

492 
	#key_f61
 
CUR
 
Såögs
[266]

	)

493 
	#key_f62
 
CUR
 
Såögs
[267]

	)

494 
	#key_f63
 
CUR
 
Såögs
[268]

	)

495 
	#˛r_bﬁ
 
CUR
 
Såögs
[269]

	)

496 
	#˛ór_m¨gös
 
CUR
 
Såögs
[270]

	)

497 
	#£t_À·_m¨gö
 
CUR
 
Såögs
[271]

	)

498 
	#£t_right_m¨gö
 
CUR
 
Såögs
[272]

	)

499 
	#œbñ_f‹m©
 
CUR
 
Såögs
[273]

	)

500 
	#£t_˛ock
 
CUR
 
Såögs
[274]

	)

501 
	#di•œy_˛ock
 
CUR
 
Såögs
[275]

	)

502 
	#ªmove_˛ock
 
CUR
 
Såögs
[276]

	)

503 
	#¸óã_wödow
 
CUR
 
Såögs
[277]

	)

504 
	#gŸo_wödow
 
CUR
 
Såögs
[278]

	)

505 
	#h™gup
 
CUR
 
Såögs
[279]

	)

506 
	#dül_ph⁄e
 
CUR
 
Såögs
[280]

	)

507 
	#quick_dül
 
CUR
 
Såögs
[281]

	)

508 
	#t⁄e
 
CUR
 
Såögs
[282]

	)

509 
	#pul£
 
CUR
 
Såögs
[283]

	)

510 
	#Êash_hook
 
CUR
 
Såögs
[284]

	)

511 
	#fixed_∑u£
 
CUR
 
Såögs
[285]

	)

512 
	#waô_t⁄e
 
CUR
 
Såögs
[286]

	)

513 
	#u£r0
 
CUR
 
Såögs
[287]

	)

514 
	#u£r1
 
CUR
 
Såögs
[288]

	)

515 
	#u£r2
 
CUR
 
Såögs
[289]

	)

516 
	#u£r3
 
CUR
 
Såögs
[290]

	)

517 
	#u£r4
 
CUR
 
Såögs
[291]

	)

518 
	#u£r5
 
CUR
 
Såögs
[292]

	)

519 
	#u£r6
 
CUR
 
Såögs
[293]

	)

520 
	#u£r7
 
CUR
 
Såögs
[294]

	)

521 
	#u£r8
 
CUR
 
Såögs
[295]

	)

522 
	#u£r9
 
CUR
 
Såögs
[296]

	)

523 
	#‹ig_∑ú
 
CUR
 
Såögs
[297]

	)

524 
	#‹ig_cﬁ‹s
 
CUR
 
Såögs
[298]

	)

525 
	#öôülize_cﬁ‹
 
CUR
 
Såögs
[299]

	)

526 
	#öôülize_∑ú
 
CUR
 
Såögs
[300]

	)

527 
	#£t_cﬁ‹_∑ú
 
CUR
 
Såögs
[301]

	)

528 
	#£t_f‹eground
 
CUR
 
Såögs
[302]

	)

529 
	#£t_background
 
CUR
 
Såögs
[303]

	)

530 
	#ch™ge_ch¨_pôch
 
CUR
 
Såögs
[304]

	)

531 
	#ch™ge_löe_pôch
 
CUR
 
Såögs
[305]

	)

532 
	#ch™ge_ªs_h‹z
 
CUR
 
Såögs
[306]

	)

533 
	#ch™ge_ªs_vît
 
CUR
 
Såögs
[307]

	)

534 
	#deföe_ch¨
 
CUR
 
Såögs
[308]

	)

535 
	#íãr_doubÀwide_mode
 
CUR
 
Såögs
[309]

	)

536 
	#íãr_dø·_quÆôy
 
CUR
 
Såögs
[310]

	)

537 
	#íãr_ôÆics_mode
 
CUR
 
Såögs
[311]

	)

538 
	#íãr_À·w¨d_mode
 
CUR
 
Såögs
[312]

	)

539 
	#íãr_mi¸o_mode
 
CUR
 
Såögs
[313]

	)

540 
	#íãr_√¨_Àâî_quÆôy
 
CUR
 
Såögs
[314]

	)

541 
	#íãr_n‹mÆ_quÆôy
 
CUR
 
Såögs
[315]

	)

542 
	#íãr_shadow_mode
 
CUR
 
Såögs
[316]

	)

543 
	#íãr_subs¸ùt_mode
 
CUR
 
Såögs
[317]

	)

544 
	#íãr_su≥rs¸ùt_mode
 
CUR
 
Såögs
[318]

	)

545 
	#íãr_upw¨d_mode
 
CUR
 
Såögs
[319]

	)

546 
	#exô_doubÀwide_mode
 
CUR
 
Såögs
[320]

	)

547 
	#exô_ôÆics_mode
 
CUR
 
Såögs
[321]

	)

548 
	#exô_À·w¨d_mode
 
CUR
 
Såögs
[322]

	)

549 
	#exô_mi¸o_mode
 
CUR
 
Såögs
[323]

	)

550 
	#exô_shadow_mode
 
CUR
 
Såögs
[324]

	)

551 
	#exô_subs¸ùt_mode
 
CUR
 
Såögs
[325]

	)

552 
	#exô_su≥rs¸ùt_mode
 
CUR
 
Såögs
[326]

	)

553 
	#exô_upw¨d_mode
 
CUR
 
Såögs
[327]

	)

554 
	#mi¸o_cﬁumn_addªss
 
CUR
 
Såögs
[328]

	)

555 
	#mi¸o_down
 
CUR
 
Såögs
[329]

	)

556 
	#mi¸o_À·
 
CUR
 
Såögs
[330]

	)

557 
	#mi¸o_right
 
CUR
 
Såögs
[331]

	)

558 
	#mi¸o_row_addªss
 
CUR
 
Såögs
[332]

	)

559 
	#mi¸o_up
 
CUR
 
Såögs
[333]

	)

560 
	#‹dî_of_pös
 
CUR
 
Såögs
[334]

	)

561 
	#∑rm_down_mi¸o
 
CUR
 
Såögs
[335]

	)

562 
	#∑rm_À·_mi¸o
 
CUR
 
Såögs
[336]

	)

563 
	#∑rm_right_mi¸o
 
CUR
 
Såögs
[337]

	)

564 
	#∑rm_up_mi¸o
 
CUR
 
Såögs
[338]

	)

565 
	#£À˘_ch¨_£t
 
CUR
 
Såögs
[339]

	)

566 
	#£t_bŸtom_m¨gö
 
CUR
 
Såögs
[340]

	)

567 
	#£t_bŸtom_m¨gö_∑rm
 
CUR
 
Såögs
[341]

	)

568 
	#£t_À·_m¨gö_∑rm
 
CUR
 
Såögs
[342]

	)

569 
	#£t_right_m¨gö_∑rm
 
CUR
 
Såögs
[343]

	)

570 
	#£t_t›_m¨gö
 
CUR
 
Såögs
[344]

	)

571 
	#£t_t›_m¨gö_∑rm
 
CUR
 
Såögs
[345]

	)

572 
	#°¨t_bô_image
 
CUR
 
Såögs
[346]

	)

573 
	#°¨t_ch¨_£t_def
 
CUR
 
Såögs
[347]

	)

574 
	#°›_bô_image
 
CUR
 
Såögs
[348]

	)

575 
	#°›_ch¨_£t_def
 
CUR
 
Såögs
[349]

	)

576 
	#subs¸ùt_ch¨a˘îs
 
CUR
 
Såögs
[350]

	)

577 
	#su≥rs¸ùt_ch¨a˘îs
 
CUR
 
Såögs
[351]

	)

578 
	#the£_ˇu£_¸
 
CUR
 
Såögs
[352]

	)

579 
	#zîo_mŸi⁄
 
CUR
 
Såögs
[353]

	)

580 
	#ch¨_£t_«mes
 
CUR
 
Såögs
[354]

	)

581 
	#key_mou£
 
CUR
 
Såögs
[355]

	)

582 
	#mou£_öfo
 
CUR
 
Såögs
[356]

	)

583 
	#ªq_mou£_pos
 
CUR
 
Såögs
[357]

	)

584 
	#gë_mou£
 
CUR
 
Såögs
[358]

	)

585 
	#£t_a_f‹eground
 
CUR
 
Såögs
[359]

	)

586 
	#£t_a_background
 
CUR
 
Såögs
[360]

	)

587 
	#pkey_∂ab
 
CUR
 
Såögs
[361]

	)

588 
	#devi˚_ty≥
 
CUR
 
Såögs
[362]

	)

589 
	#code_£t_öô
 
CUR
 
Såögs
[363]

	)

590 
	#£t0_des_£q
 
CUR
 
Såögs
[364]

	)

591 
	#£t1_des_£q
 
CUR
 
Såögs
[365]

	)

592 
	#£t2_des_£q
 
CUR
 
Såögs
[366]

	)

593 
	#£t3_des_£q
 
CUR
 
Såögs
[367]

	)

594 
	#£t_Ã_m¨gö
 
CUR
 
Såögs
[368]

	)

595 
	#£t_tb_m¨gö
 
CUR
 
Såögs
[369]

	)

596 
	#bô_image_ª≥©
 
CUR
 
Såögs
[370]

	)

597 
	#bô_image_√wlöe
 
CUR
 
Såögs
[371]

	)

598 
	#bô_image_ˇºüge_ªtu∫
 
CUR
 
Såögs
[372]

	)

599 
	#cﬁ‹_«mes
 
CUR
 
Såögs
[373]

	)

600 
	#deföe_bô_image_ªgi⁄
 
CUR
 
Såögs
[374]

	)

601 
	#íd_bô_image_ªgi⁄
 
CUR
 
Såögs
[375]

	)

602 
	#£t_cﬁ‹_b™d
 
CUR
 
Såögs
[376]

	)

603 
	#£t_∑ge_Àngth
 
CUR
 
Såögs
[377]

	)

604 
	#di•œy_pc_ch¨
 
CUR
 
Såögs
[378]

	)

605 
	#íãr_pc_ch¨£t_mode
 
CUR
 
Såögs
[379]

	)

606 
	#exô_pc_ch¨£t_mode
 
CUR
 
Såögs
[380]

	)

607 
	#íãr_sˇncode_mode
 
CUR
 
Såögs
[381]

	)

608 
	#exô_sˇncode_mode
 
CUR
 
Såögs
[382]

	)

609 
	#pc_ãrm_›ti⁄s
 
CUR
 
Såögs
[383]

	)

610 
	#sˇncode_esˇ≥
 
CUR
 
Såögs
[384]

	)

611 
	#Æt_sˇncode_esc
 
CUR
 
Såögs
[385]

	)

612 
	#íãr_h‹iz⁄èl_hl_mode
 
CUR
 
Såögs
[386]

	)

613 
	#íãr_À·_hl_mode
 
CUR
 
Såögs
[387]

	)

614 
	#íãr_low_hl_mode
 
CUR
 
Såögs
[388]

	)

615 
	#íãr_right_hl_mode
 
CUR
 
Såögs
[389]

	)

616 
	#íãr_t›_hl_mode
 
CUR
 
Såögs
[390]

	)

617 
	#íãr_vîtiˇl_hl_mode
 
CUR
 
Såögs
[391]

	)

618 
	#£t_a_©åibuãs
 
CUR
 
Såögs
[392]

	)

619 
	#£t_pgÀn_öch
 
CUR
 
Såögs
[393]

	)

621 
	#BOOLWRITE
 37

	)

622 
	#NUMWRITE
 33

	)

623 
	#STRWRITE
 394

	)

626 
	#bìhive_glôch
 
no_esc_˘lc


	)

627 
	#ãÀøy_glôch
 
de°_èbs_magic_smso


	)

628 
	#mi¸o_ch¨_size
 
mi¸o_cﬁ_size


	)

630 #ifde‡
__INTERNAL_CAPS_VISIBLE


631 
	#ãrmˇp_öô2
 
CUR
 
Såögs
[394]

	)

632 
	#ãrmˇp_ª£t
 
CUR
 
Såögs
[395]

	)

633 
	#magic_cookõ_glôch_ul
 
CUR
 
Numbîs
[33]

	)

634 
	#back•a˚s_wôh_bs
 
CUR
 
Boﬁóns
[37]

	)

635 
	#¸t_no_s¸ﬁlög
 
CUR
 
Boﬁóns
[38]

	)

636 
	#no_c‹ª˘ly_w‹kög_¸
 
CUR
 
Boﬁóns
[39]

	)

637 
	#ˇºüge_ªtu∫_dñay
 
CUR
 
Numbîs
[34]

	)

638 
	#√w_löe_dñay
 
CUR
 
Numbîs
[35]

	)

639 
	#löe„ed_if_nŸ_lf
 
CUR
 
Såögs
[396]

	)

640 
	#back•a˚_if_nŸ_bs
 
CUR
 
Såögs
[397]

	)

641 
	#gnu_has_mëa_key
 
CUR
 
Boﬁóns
[40]

	)

642 
	#löe„ed_is_√wlöe
 
CUR
 
Boﬁóns
[41]

	)

643 
	#back•a˚_dñay
 
CUR
 
Numbîs
[36]

	)

644 
	#h‹iz⁄èl_èb_dñay
 
CUR
 
Numbîs
[37]

	)

645 
	#numbî_of_fun˘i⁄_keys
 
CUR
 
Numbîs
[38]

	)

646 
	#Ÿhî_n⁄_fun˘i⁄_keys
 
CUR
 
Såögs
[398]

	)

647 
	#¨row_key_m≠
 
CUR
 
Såögs
[399]

	)

648 
	#has_h¨dw¨e_èbs
 
CUR
 
Boﬁóns
[42]

	)

649 
	#ªtu∫_d€s_˛r_eﬁ
 
CUR
 
Boﬁóns
[43]

	)

650 
	#acs_ulc‹√r
 
CUR
 
Såögs
[400]

	)

651 
	#acs_Œc‹√r
 
CUR
 
Såögs
[401]

	)

652 
	#acs_urc‹√r
 
CUR
 
Såögs
[402]

	)

653 
	#acs_Ãc‹√r
 
CUR
 
Såögs
[403]

	)

654 
	#acs_…ì
 
CUR
 
Såögs
[404]

	)

655 
	#acs_πì
 
CUR
 
Såögs
[405]

	)

656 
	#acs_bãe
 
CUR
 
Såögs
[406]

	)

657 
	#acs_âì
 
CUR
 
Såögs
[407]

	)

658 
	#acs_hlöe
 
CUR
 
Såögs
[408]

	)

659 
	#acs_vlöe
 
CUR
 
Såögs
[409]

	)

660 
	#acs_∂us
 
CUR
 
Såögs
[410]

	)

661 
	#mem‹y_lock
 
CUR
 
Såögs
[411]

	)

662 
	#mem‹y_u∆ock
 
CUR
 
Såögs
[412]

	)

663 
	#box_ch¨s_1
 
CUR
 
Såögs
[413]

	)

670 
	#BOOLCOUNT
 44

	)

671 
	#NUMCOUNT
 39

	)

672 
	#STRCOUNT
 414

	)

675 
	#acs_ch¨s_ödex
 146

	)

677 
	sãrmty≥
 {

678 *
ãrm_«mes
;

679 *
°r_èbÀ
;

680 
NCURSES_SBOOL
 *
Boﬁóns
;

681 *
Numbîs
;

682 **
Såögs
;

684 #i‡
NCURSES_XNAMES


685 *
ext_°r_èbÀ
;

686 **
ext_Names
;

688 
num_Boﬁóns
;

689 
num_Numbîs
;

690 
num_Såögs
;

692 
ext_Boﬁóns
;

693 
ext_Numbîs
;

694 
ext_Såögs
;

697 } 
	tTERMTYPE
;

699 
	sãrm
 {

700 
TERMTYPE
 
ty≥
;

701 
Fûedes
;

702 
TTY
 
Oâyb
,

703 
Nâyb
;

704 
_baudøã
;

705 * 
_ãrm«me
;

706 } 
	tTERMINAL
;

709 
NCURSES_EXPORT_VAR
(
TERMINAL
 *Ë
cur_ãrm
;

711 
NCURSES_WRAPPED_VAR
(
TERMINAL
 *, 
cur_ãrm
);

712 
	#cur_ãrm
 
	`NCURSES_PUBLIC_VAR
(
	`cur_ãrm
())

	)

714 
NCURSES_EXPORT_VAR
(
TERMINAL
 *Ë
cur_ãrm
;

718 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
boﬁ«mes
);

719 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
boﬁcodes
);

720 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
boﬁ‚ames
);

721 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
num«mes
);

722 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
numcodes
);

723 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
num‚ames
);

724 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
°∫ames
);

725 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
°rcodes
);

726 
NCURSES_WRAPPED_VAR
(
NCURSES_CONST
 * c⁄° *, 
°r‚ames
);

728 
	#boﬁ«mes
 
	`NCURSES_PUBLIC_VAR
(
	`boﬁ«mes
())

	)

729 
	#boﬁcodes
 
	`NCURSES_PUBLIC_VAR
(
	`boﬁcodes
())

	)

730 
	#boﬁ‚ames
 
	`NCURSES_PUBLIC_VAR
(
	`boﬁ‚ames
())

	)

731 
	#num«mes
 
	`NCURSES_PUBLIC_VAR
(
	`num«mes
())

	)

732 
	#numcodes
 
	`NCURSES_PUBLIC_VAR
(
	`numcodes
())

	)

733 
	#num‚ames
 
	`NCURSES_PUBLIC_VAR
(
	`num‚ames
())

	)

734 
	#°∫ames
 
	`NCURSES_PUBLIC_VAR
(
	`°∫ames
())

	)

735 
	#°rcodes
 
	`NCURSES_PUBLIC_VAR
(
	`°rcodes
())

	)

736 
	#°r‚ames
 
	`NCURSES_PUBLIC_VAR
(
	`°r‚ames
())

	)

740 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
boﬁ«mes
[];

741 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
boﬁcodes
[];

742 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
boﬁ‚ames
[];

743 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
num«mes
[];

744 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
numcodes
[];

745 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
num‚ames
[];

746 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
°∫ames
[];

747 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
°rcodes
[];

748 
NCURSES_EXPORT_VAR
(
NCURSES_CONST
 * c⁄° ) 
°r‚ames
[];

753 
NCURSES_EXPORT
(Ë
_nc_£t_ây_mode
 (
TTY
 *
buf
);

754 
NCURSES_EXPORT
(Ë
_nc_gë_ây_mode
 (
TTY
 *
buf
);

755 
NCURSES_EXPORT
(Ë
_nc_ªad_íåy
 (c⁄° * c⁄°, * c⁄°, 
TERMTYPE
 *const);

756 
NCURSES_EXPORT
(Ë
_nc_ªad_fûe_íåy
 (c⁄° *c⁄°, 
TERMTYPE
 *);

757 
NCURSES_EXPORT
(Ë
_nc_ªad_ãrmty≥
 (
TERMTYPE
 *, *, );

758 
NCURSES_EXPORT
(*Ë
_nc_fú°_«me
 (const *const);

759 
NCURSES_EXPORT
(Ë
_nc_«me_m©ch
 (const *const, const *const, const *const);

760 
NCURSES_EXPORT
(c⁄° 
TERMTYPE
 *Ë
_nc_ÁŒback
 (const *);

763 
NCURSES_EXPORT
(
TERMINAL
 *Ë
£t_cuπîm
 (TERMINAL *);

764 
NCURSES_EXPORT
(Ë
dñ_cuπîm
 (
TERMINAL
 *);

767 
NCURSES_EXPORT
(Ë
ª°¨âîm
 (
NCURSES_CONST
 *, , *);

768 
NCURSES_EXPORT
(Ë
£tu±îm
 (
NCURSES_CONST
 *,,*);

771 #i‡!
deföed
(
__NCURSES_H
)

772 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

773 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

774 
NCURSES_EXPORT
(Ë
puç
 (const *);

775 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

776 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

779 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

781 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

782 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

788 #i‡!
deföed
(
NCURSES_TERMCAP_H_ö˛
)

789 
NCURSES_EXPORT
(*Ë
tgë°r
 (
NCURSES_CONST
 *, **);

790 
NCURSES_EXPORT
(*Ë
tgŸo
 (const *, , );

791 
NCURSES_EXPORT
(Ë
tgëít
 (*, const *);

792 
NCURSES_EXPORT
(Ë
tgëÊag
 (
NCURSES_CONST
 *);

793 
NCURSES_EXPORT
(Ë
tgënum
 (
NCURSES_CONST
 *);

794 
NCURSES_EXPORT
(Ë
çuts
 (const *, , (*)());

800 #i‡
deföed
(
NCURSES_SP_FUNCS
) && (NCURSES_SP_FUNCS != 0)

802 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
tigë°r
Ë(
SCREEN
*, 
NCURSES_CONST
 *);

803 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
puç
Ë(
SCREEN
*, const *);

804 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
tigëÊag
Ë(
SCREEN
*, 
NCURSES_CONST
 *);

805 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
tigënum
Ë(
SCREEN
*, 
NCURSES_CONST
 *);

808 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ç¨m
Ë(
SCREEN
*, 
NCURSES_CONST
 *, ...);

810 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ç¨m
Ë(
SCREEN
*, 
NCURSES_CONST
 *, ,,,,,,,,);

811 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ç¨m_v¨¨gs
Ë(
SCREEN
*, 
NCURSES_CONST
 *, ...);

815 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
tgë°r
Ë(
SCREEN
*, 
NCURSES_CONST
 *, **);

816 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
tgŸo
Ë(
SCREEN
*, const *, , );

817 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
tgëít
Ë(
SCREEN
*, *, const *);

818 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
tgëÊag
Ë(
SCREEN
*, 
NCURSES_CONST
 *);

819 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
tgënum
Ë(
SCREEN
*, 
NCURSES_CONST
 *);

820 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
çuts
Ë(
SCREEN
*, c⁄° *, , 
NCURSES_SP_OUTC
);

822 
NCURSES_EXPORT
(
TERMINAL
 *Ë
NCURSES_SP_NAME
(
£t_cuπîm
Ë(
SCREEN
*, TERMINAL *);

823 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñ_cuπîm
Ë(
SCREEN
*, 
TERMINAL
 *);

825 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª°¨âîm
Ë(
SCREEN
*, 
NCURSES_CONST
 *, , *);

828 #ifde‡
__˝lu•lus


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/utmp.h

19 #i‚def 
_UTMP_H


20 
	#_UTMP_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

27 
	g__BEGIN_DECLS


30 
	~<bôs/utmp.h
>

33 
	#UTMP_FILE
 
_PATH_UTMP


	)

34 
	#UTMP_FILENAME
 
_PATH_UTMP


	)

35 
	#WTMP_FILE
 
_PATH_WTMP


	)

36 
	#WTMP_FILENAME
 
_PATH_WTMP


	)

42 
	$logö_ây
 (
__fd
Ë
__THROW
;

46 
	$logö
 (
__c⁄°
 
utmp
 *
__íåy
Ë
__THROW
;

49 
	$logout
 (
__c⁄°
 *
__ut_löe
Ë
__THROW
;

52 
	$logwtmp
 (
__c⁄°
 *
__ut_löe
, __c⁄° *
__ut_«me
,

53 
__c⁄°
 *
__ut_ho°
Ë
__THROW
;

56 
	$updwtmp
 (
__c⁄°
 *
__wtmp_fûe
, __c⁄° 
utmp
 *
__utmp
)

57 
__THROW
;

60 
	$utm≤ame
 (
__c⁄°
 *
__fûe
Ë
__THROW
;

63 
utmp
 *
	$gëuã¡
 (Ë
__THROW
;

66 
	$£tuã¡
 (Ë
__THROW
;

69 
	$íduã¡
 (Ë
__THROW
;

73 
utmp
 *
	$gëutid
 (
__c⁄°
 
utmp
 *
__id
Ë
__THROW
;

77 
utmp
 *
	$gëuéöe
 (
__c⁄°
 
utmp
 *
__löe
Ë
__THROW
;

80 
utmp
 *
	$putuéöe
 (
__c⁄°
 
utmp
 *
__utmp_±r
Ë
__THROW
;

83 #ifdef 
__USE_MISC


85 
	$gëuã¡_r
 (
utmp
 *
__buf„r
, utm∞**
__ªsu…
Ë
__THROW
;

87 
	$gëutid_r
 (
__c⁄°
 
utmp
 *
__id
, utm∞*
__buf„r
,

88 
utmp
 **
__ªsu…
Ë
__THROW
;

90 
	$gëuéöe_r
 (
__c⁄°
 
utmp
 *
__löe
,

91 
utmp
 *
__buf„r
, utm∞**
__ªsu…
Ë
__THROW
;

95 
__END_DECLS


	@/usr/include/values.h

23 #i‚def 
_VALUES_H


24 
	#_VALUES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<limôs.h
>

30 
	#_TYPEBITS
(
ty≥
Ë( (ty≥Ë* 
CHAR_BIT
)

	)

32 
	#CHARBITS
 
	`_TYPEBITS
 ()

	)

33 
	#SHORTBITS
 
	`_TYPEBITS
 ()

	)

34 
	#INTBITS
 
	`_TYPEBITS
 ()

	)

35 
	#LONGBITS
 
	`_TYPEBITS
 ()

	)

36 
	#PTRBITS
 
	`_TYPEBITS
 (*)

	)

37 
	#DOUBLEBITS
 
	`_TYPEBITS
 ()

	)

38 
	#FLOATBITS
 
	`_TYPEBITS
 ()

	)

40 
	#MINSHORT
 
SHRT_MIN


	)

41 
	#MININT
 
INT_MIN


	)

42 
	#MINLONG
 
LONG_MIN


	)

44 
	#MAXSHORT
 
SHRT_MAX


	)

45 
	#MAXINT
 
INT_MAX


	)

46 
	#MAXLONG
 
LONG_MAX


	)

48 
	#HIBITS
 
MINSHORT


	)

49 
	#HIBITL
 
MINLONG


	)

52 
	~<Êﬂt.h
>

54 
	#MAXDOUBLE
 
DBL_MAX


	)

55 
	#MAXFLOAT
 
FLT_MAX


	)

56 
	#MINDOUBLE
 
DBL_MIN


	)

57 
	#MINFLOAT
 
FLT_MIN


	)

58 
	#DMINEXP
 
DBL_MIN_EXP


	)

59 
	#FMINEXP
 
FLT_MIN_EXP


	)

60 
	#DMAXEXP
 
DBL_MAX_EXP


	)

61 
	#FMAXEXP
 
FLT_MAX_EXP


	)

64 #ifde‡
__USE_MISC


66 
	#BITSPERBYTE
 
CHAR_BIT


	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

70 
	#IP_PMTUDISC_DONT
 0

	)

71 
	#IP_PMTUDISC_WANT
 1

	)

72 
	#IP_PMTUDISC_DO
 2

	)

73 
	#IP_PMTUDISC_PROBE
 3

	)

76 
	#SOL_IP
 0

	)

78 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

79 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

80 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


86 
	sù_›ts


88 
ö_addr
 
	mù_d°
;

89 
	mù_›ts
[40];

93 
	sù_mªqn


95 
ö_addr
 
	mimr_mu…üddr
;

96 
ö_addr
 
	mimr_addªss
;

97 
	mimr_ifödex
;

101 
	sö_pktöfo


103 
	mùi_ifödex
;

104 
ö_addr
 
	mùi_•ec_d°
;

105 
ö_addr
 
	mùi_addr
;

112 
	#IPV6_ADDRFORM
 1

	)

113 
	#IPV6_2292PKTINFO
 2

	)

114 
	#IPV6_2292HOPOPTS
 3

	)

115 
	#IPV6_2292DSTOPTS
 4

	)

116 
	#IPV6_2292RTHDR
 5

	)

117 
	#IPV6_2292PKTOPTIONS
 6

	)

118 
	#IPV6_CHECKSUM
 7

	)

119 
	#IPV6_2292HOPLIMIT
 8

	)

121 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

123 
	#IPV6_NEXTHOP
 9

	)

124 
	#IPV6_AUTHHDR
 10

	)

125 
	#IPV6_UNICAST_HOPS
 16

	)

126 
	#IPV6_MULTICAST_IF
 17

	)

127 
	#IPV6_MULTICAST_HOPS
 18

	)

128 
	#IPV6_MULTICAST_LOOP
 19

	)

129 
	#IPV6_JOIN_GROUP
 20

	)

130 
	#IPV6_LEAVE_GROUP
 21

	)

131 
	#IPV6_ROUTER_ALERT
 22

	)

132 
	#IPV6_MTU_DISCOVER
 23

	)

133 
	#IPV6_MTU
 24

	)

134 
	#IPV6_RECVERR
 25

	)

135 
	#IPV6_V6ONLY
 26

	)

136 
	#IPV6_JOIN_ANYCAST
 27

	)

137 
	#IPV6_LEAVE_ANYCAST
 28

	)

138 
	#IPV6_IPSEC_POLICY
 34

	)

139 
	#IPV6_XFRM_POLICY
 35

	)

141 
	#IPV6_RECVPKTINFO
 49

	)

142 
	#IPV6_PKTINFO
 50

	)

143 
	#IPV6_RECVHOPLIMIT
 51

	)

144 
	#IPV6_HOPLIMIT
 52

	)

145 
	#IPV6_RECVHOPOPTS
 53

	)

146 
	#IPV6_HOPOPTS
 54

	)

147 
	#IPV6_RTHDRDSTOPTS
 55

	)

148 
	#IPV6_RECVRTHDR
 56

	)

149 
	#IPV6_RTHDR
 57

	)

150 
	#IPV6_RECVDSTOPTS
 58

	)

151 
	#IPV6_DSTOPTS
 59

	)

153 
	#IPV6_RECVTCLASS
 66

	)

154 
	#IPV6_TCLASS
 67

	)

157 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

158 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

159 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

160 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

163 
	#IPV6_PMTUDISC_DONT
 0

	)

164 
	#IPV6_PMTUDISC_WANT
 1

	)

165 
	#IPV6_PMTUDISC_DO
 2

	)

166 
	#IPV6_PMTUDISC_PROBE
 3

	)

169 
	#SOL_IPV6
 41

	)

170 
	#SOL_ICMPV6
 58

	)

173 
	#IPV6_RTHDR_LOOSE
 0

	)

174 
	#IPV6_RTHDR_STRICT
 1

	)

176 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

67 
	#MAP_STACK
 0x20000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HWPOISON
 100

	)

102 #ifde‡
__USE_XOPEN2K


103 
	#POSIX_MADV_NORMAL
 0

	)

104 
	#POSIX_MADV_RANDOM
 1

	)

105 
	#POSIX_MADV_SEQUENTIAL
 2

	)

106 
	#POSIX_MADV_WILLNEED
 3

	)

107 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utmp.h

21 #i‚de‡
_UTMP_H


25 
	~<∑ths.h
>

26 
	~<sys/time.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#UT_LINESIZE
 32

	)

32 
	#UT_NAMESIZE
 32

	)

33 
	#UT_HOSTSIZE
 256

	)

38 
	sœ°log


40 #i‡
__WORDSIZE
 =64 && 
deföed
 
__WORDSIZE_COMPAT32


41 
öt32_t
 
	mŒ_time
;

43 
__time_t
 
	mŒ_time
;

45 
	mŒ_löe
[
UT_LINESIZE
];

46 
	mŒ_ho°
[
UT_HOSTSIZE
];

52 
	sexô_°©us


54 
	me_ãrmö©i⁄
;

55 
	me_exô
;

60 
	sutmp


62 
	mut_ty≥
;

63 
pid_t
 
	mut_pid
;

64 
	mut_löe
[
UT_LINESIZE
];

65 
	mut_id
[4];

66 
	mut_u£r
[
UT_NAMESIZE
];

67 
	mut_ho°
[
UT_HOSTSIZE
];

68 
exô_°©us
 
	mut_exô
;

73 #i‡
__WORDSIZE
 =64 && 
deföed
 
__WORDSIZE_COMPAT32


74 
öt32_t
 
	mut_£ssi⁄
;

77 
öt32_t
 
	mtv_£c
;

78 
öt32_t
 
	mtv_u£c
;

79 } 
	mut_tv
;

81 
	mut_£ssi⁄
;

82 
timevÆ
 
	mut_tv
;

85 
öt32_t
 
	mut_addr_v6
[4];

86 
	m__unu£d
[20];

90 
	#ut_«me
 
ut_u£r


	)

91 #i‚de‡
_NO_UT_TIME


94 
	#ut_time
 
ut_tv
.
tv_£c


	)

96 
	#ut_xtime
 
ut_tv
.
tv_£c


	)

97 
	#ut_addr
 
ut_addr_v6
[0]

	)

101 
	#EMPTY
 0

	)

103 
	#RUN_LVL
 1

	)

104 
	#BOOT_TIME
 2

	)

105 
	#NEW_TIME
 3

	)

106 
	#OLD_TIME
 4

	)

108 
	#INIT_PROCESS
 5

	)

109 
	#LOGIN_PROCESS
 6

	)

110 
	#USER_PROCESS
 7

	)

111 
	#DEAD_PROCESS
 8

	)

113 
	#ACCOUNTING
 9

	)

116 
	#UT_UNKNOWN
 
EMPTY


	)

121 
	#_HAVE_UT_TYPE
 1

	)

122 
	#_HAVE_UT_PID
 1

	)

123 
	#_HAVE_UT_ID
 1

	)

124 
	#_HAVE_UT_TV
 1

	)

125 
	#_HAVE_UT_HOST
 1

	)

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #unde‡
NCURSES_DLL


38 
	#NCURSES_STATIC


	)

40 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

41 #i‡
deföed
(
NCURSES_DLL
)

42 #i‡
deföed
(
NCURSES_STATIC
)

43 #unde‡
NCURSES_STATIC


46 #unde‡
NCURSES_IMPEXP


47 #unde‡
NCURSES_API


48 #unde‡
NCURSES_EXPORT


49 #unde‡
NCURSES_EXPORT_VAR


50 #i‡
deföed
(
NCURSES_DLL
)

52 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

53 #ñi‡
deföed
(
NCURSES_STATIC
)

55 
	#NCURSES_IMPEXP


	)

58 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

60 
	#NCURSES_API
 
__cde˛


	)

61 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

62 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
ty≥

66 #i‡!
deföed
(
NCURSES_IMPEXP
)

67 
	#NCURSES_IMPEXP


	)

69 #i‡!
deföed
(
NCURSES_API
)

70 
	#NCURSES_API


	)

72 #i‡!
deföed
(
NCURSES_EXPORT
)

73 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

75 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

76 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
ty≥

	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.7"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

60 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

63 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

239 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

245 
	smsghdr


247 *
	mmsg_«me
;

248 
sockÀn_t
 
	mmsg_«mñí
;

250 
iovec
 *
	mmsg_iov
;

251 
size_t
 
	mmsg_iovÀn
;

253 *
	mmsg_c⁄åﬁ
;

254 
size_t
 
	mmsg_c⁄åﬁÀn
;

259 
	mmsg_Êags
;

263 
	scmsghdr


265 
size_t
 
	mcmsg_Àn
;

270 
	mcmsg_Àvñ
;

271 
	mcmsg_ty≥
;

272 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

273 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

278 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

279 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

281 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

283 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

284 
	#CMSG_FIRSTHDR
(
mhdr
) \

285 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

286 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

287 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

288 & (
size_t
Ë~( (size_tË- 1))

	)

289 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

290 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

291 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

293 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

294 
cmsghdr
 *
__cmsg
Ë
__THROW
;

295 #ifde‡
__USE_EXTERN_INLINES


296 #i‚de‡
_EXTERN_INLINE


297 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

299 
_EXTERN_INLINE
 
cmsghdr
 *

300 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

302 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

306 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

307 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

308 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


309 + 
__mhdr
->
msg_c⁄åﬁÀn
)

310 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

311 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

314  
__cmsg
;

315 
	}
}

322 
	mSCM_RIGHTS
 = 0x01

323 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

324 #ifde‡
__USE_GNU


325 , 
	mSCM_CREDENTIALS
 = 0x02

326 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

330 #ifde‡
__USE_GNU


332 
	su¸ed


334 
pid_t
 
	mpid
;

335 
uid_t
 
	muid
;

336 
gid_t
 
	mgid
;

341 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


342 #i‚de‡
FIOGETOWN


343 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

345 #i‚de‡
FIOSETOWN


346 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

348 #i‚de‡
SIOCATMARK


349 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

351 #i‚de‡
SIOCGPGRP


352 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

354 #i‚de‡
SIOCGSTAMP


355 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

357 #i‚de‡
SIOCGSTAMPNS


358 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

360 #i‚de‡
SIOCSPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

366 
	~<asm/sockë.h
>

368 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


369 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


370 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


371 #unde‡
FIOGETOWN


373 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


374 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


375 #unde‡
FIOSETOWN


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


378 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


379 #unde‡
SIOCATMARK


381 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


382 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


383 #unde‡
SIOCGPGRP


385 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


386 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


387 #unde‡
SIOCGSTAMP


389 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


390 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


391 #unde‡
SIOCGSTAMPNS


393 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


394 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


395 #unde‡
SIOCSPGRP


400 
	slögî


402 
	ml_⁄off
;

403 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/lib/misc/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
181
4160
free.c
minimal.c
pgrep.c
proc/alloc.c
proc/compare.c
proc/compare.h
proc/devname.c
proc/devname.h
proc/ksym.c
proc/output.c
proc/procps.h
proc/pwcache.c
proc/readproc.c
proc/readproc.h
proc/sig.c
proc/sig.h
proc/status.c
proc/status.h
proc/sysinfo.c
proc/sysinfo.h
proc/version.c
proc/version.h
proc/whattime.c
proc/whattime.h
ps/common.h
ps/display.c
ps/escape.c
ps/global.c
ps/help.c
ps/output.c
ps/parser.c
ps/select.c
ps/sortformat.c
skill.c
sysctl.c
tload.c
top.c
top.h
uptime.c
vmstat.c
w.c
watch.c
/usr/include/asm/param.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/curses.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/grp.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/ncurses.h
/usr/include/netinet/in.h
/usr/include/pwd.h
/usr/include/regex.h
/usr/include/sched.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/dir.h
/usr/include/sys/ioctl.h
/usr/include/sys/mman.h
/usr/include/sys/resource.h
/usr/include/sys/stat.h
/usr/include/sys/sysmacros.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/term.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utmp.h
/usr/include/values.h
/usr/include/alloca.h
/usr/include/asm-generic/param.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/mman.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utmp.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/gnu/option-groups.h
/usr/include/libio.h
/usr/include/ncurses_dll.h
/usr/include/sgtty.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/termio.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/paths.h
/usr/include/sys/cdefs.h
/usr/include/sys/uio.h
/usr/include/wctype.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm/errno.h
/usr/include/asm/socket.h
/usr/include/bits/libc-lock.h
/usr/include/bits/sockaddr.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/socket.h
/usr/include/linux/ioctl.h
/usr/include/pthread.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/ioctl.h
/usr/include/asm/sockios.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/sockios.h
